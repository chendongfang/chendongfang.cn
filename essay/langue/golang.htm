<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:微软雅黑;
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@微软雅黑";}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
h1
	{margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:240%;
	page-break-after:avoid;
	font-size:22.0pt;
	font-family:"Calibri",sans-serif;
	font-weight:bold;}
h2
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:172%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Arial",sans-serif;
	font-weight:bold;}
h3
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:172%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Calibri",sans-serif;
	font-weight:bold;}
h4
	{margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:155%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial",sans-serif;
	font-weight:bold;}
h5
	{margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:155%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Calibri",sans-serif;
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:63.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#954F72;
	text-decoration:underline;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Calibri",sans-serif;}
p.WPSOffice1, li.WPSOffice1, div.WPSOffice1
	{mso-style-name:"WPSOffice手动目录 1";
	margin:0cm;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
p.WPSOffice2, li.WPSOffice2, div.WPSOffice2
	{mso-style-name:"WPSOffice手动目录 2";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
p.WPSOffice3, li.WPSOffice3, div.WPSOffice3
	{mso-style-name:"WPSOffice手动目录 3";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:20.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
.MsoChpDefault
	{font-size:10.0pt;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	layout-grid:15.6pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN link=blue vlink="#954F72" style='word-wrap:break-word;
text-justify-trim:punctuation'>

<div class=WordSection1 style='layout-grid:15.6pt'>

<h1 align=center style='text-align:center'><a name="_Toc23353"><span
lang=EN-US style='font-family:"Arial",sans-serif'>golang</span></a></h1>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-family:宋体'>目录</span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc23353"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>golang</span><span
style='color:windowtext;text-decoration:none'>............................................................................................................................. </span><span style='color:windowtext;text-decoration:none'>1</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc27028"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>1. </span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>历史</span></span><span style='color:windowtext;text-decoration:none'>............................................................................................................................ </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc21327"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>1.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>发展</span></span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>历史</span></span><span style='color:windowtext;text-decoration:none'>.......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc14054"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>1.2. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>版本迭代</span></span><span
style='color:windowtext;text-decoration:none'>.......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc19520"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>2. </span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>数据特征</span></span><span style='color:windowtext;text-decoration:
none'>..................................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc9350"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>语音结构</span></span><span
style='color:windowtext;text-decoration:none'>.......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc2213"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.1.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>包</span></span><span
style='color:windowtext;text-decoration:none'>.......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc13218"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.1.2. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>函数</span></span><span
style='color:windowtext;text-decoration:none'>....................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc4621"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.1.3. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>变量</span></span><span
style='color:windowtext;text-decoration:none'>....................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc26713"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.1.4. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>注释</span></span><span
style='color:windowtext;text-decoration:none'>....................................................................................................... </span><span style='color:windowtext;text-decoration:none'>2</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc8631"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.2. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>数据类型</span></span><span
style='color:windowtext;text-decoration:none'>.......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc19979"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.2.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>基本数据类型</span></span><span
style='color:windowtext;text-decoration:none'>......................................................................................... </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc22588"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.2.2. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>字符串类型</span></span><span
style='color:windowtext;text-decoration:none'>............................................................................................ </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc719"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.2.3. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>派生类型</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................................ </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc916"><span style='color:windowtext;
text-decoration:none'>2.2.3.1. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>指针类型（</span></span><span
style='color:windowtext;text-decoration:none'>Pointer</span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>）</span></span><span
style='color:windowtext;text-decoration:none'>....................................................................... </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc11259"><span style='color:windowtext;
text-decoration:none'>2.2.3.2. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>数组类型</span></span><span
style='color:windowtext;text-decoration:none'>........................................................................................ </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc28174"><span style='color:windowtext;
text-decoration:none'>2.2.3.3. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>结构化类型</span></span><span
style='color:windowtext;text-decoration:none'>(struct)</span><span
style='color:windowtext;text-decoration:none'>........................................................................... </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc943"><span style='color:windowtext;
text-decoration:none'>2.2.3.4. Channel </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>类型</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................... </span><span style='color:windowtext;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc17970"><span style='color:windowtext;
text-decoration:none'>2.2.3.5. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>函数类型</span></span><span
style='color:windowtext;text-decoration:none'>........................................................................................ </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc28585"><span style='color:windowtext;
text-decoration:none'>2.2.3.6. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>切片类型</span></span><span
style='color:windowtext;text-decoration:none'>........................................................................................ </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc28337"><span style='color:windowtext;
text-decoration:none'>2.2.3.7. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>接口类型（</span></span><span
style='color:windowtext;text-decoration:none'>interface</span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>）</span></span><span
style='color:windowtext;text-decoration:none'>..................................................................... </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc21506"><span style='color:windowtext;
text-decoration:none'>2.2.3.8. </span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>集合类型</span></span><span
style='color:windowtext;text-decoration:none'>........................................................................................ </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc16072"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>3. </span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>运行特征</span></span><span style='color:windowtext;text-decoration:
none'>..................................................................................................................... </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc10363"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>函数</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................................................. </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc16065"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>函数</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................................ </span><span style='color:windowtext;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc19841"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1.2. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>递归</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................................ </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc2424"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2. </span><span style='color:windowtext;
text-decoration:none'>GMP</span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>原理</span></span><span
style='color:windowtext;text-decoration:none'>......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc17947"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Goroutine&nbsp;</span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>携程</span></span><span style='color:windowtext;text-decoration:none'>............................................................................... </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc782"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Processor</span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>处理器</span></span><span style='color:windowtext;text-decoration:none'>........................................................................... </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc4><span lang=EN-US><a href="#_Toc26191"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Machine</span><span
style='color:windowtext;text-decoration:none'>/Thread</span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>内核线程</span></span><span
style='color:windowtext;text-decoration:none'>............................................................... </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc22065"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>4. </span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>垃圾回收</span></span><span style='color:windowtext;text-decoration:
none'>..................................................................................................................... </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc16845"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.1. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>历史</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................................................. </span><span style='color:windowtext;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc29856"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.2. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>三色标记</span></span><span
style='color:windowtext;text-decoration:none'>.......................................................................................................... </span><span style='color:windowtext;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc17636"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.3. </span><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>屏障</span></span><span
style='color:windowtext;text-decoration:none'>................................................................................................................. </span><span style='color:windowtext;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc31956"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>5. </span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>编译</span></span><span style='color:windowtext;text-decoration:none'>............................................................................................................................ </span><span style='color:windowtext;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc29184"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>6. </span><span
lang=EN-US style='font-family:宋体;color:windowtext;text-decoration:none'><span
lang=EN-US>参考文献</span></span><span style='color:windowtext;text-decoration:
none'>..................................................................................................................... </span><span style='color:windowtext;text-decoration:none'>6</span></a></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc27028"><span
lang=EN-US style='font-family:"Arial",sans-serif'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>历史</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc6037"></a><a
name="_Toc21327"><span lang=EN-US style='font-family:宋体'>1.1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:黑体'>发展历史</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc14054"><span
lang=EN-US style='font-family:宋体'>1.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>版本迭代</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc4665"></a><a
name="_Toc19520"><span lang=EN-US style='font-family:"Arial",sans-serif'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-family:宋体'>数据特征</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc9350"><span
lang=EN-US style='font-family:宋体'>2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>语言结构</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc2213"><span
lang=EN-US style='font-family:宋体'>2.1.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>包</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc13218"><span
lang=EN-US style='font-family:宋体'>2.1.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>函数</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>make</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>返回的是引用类型本身</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>new</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>返回的是指向类型的指针</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><span lang=EN-US
style='font-family:宋体'>2.1.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>流程控制</span></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc4621"><span
lang=EN-US style='font-family:宋体'>2.1.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>变量</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc26713"><span
lang=EN-US style='font-family:宋体'>2.1.5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>注释</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc8631"><span
lang=EN-US style='font-family:宋体'>2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>数据类型</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc19979"><span
lang=EN-US style='font-family:宋体'>2.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>基本数据类型</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc22588"><span
lang=EN-US style='font-family:宋体'>2.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>字符串类型</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc719"><span
lang=EN-US style='font-family:宋体'>2.2.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体'>派生类型</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc916"><span
lang=EN-US>2.2.3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>指针类型（</span></a><span lang=EN-US>Pointer</span><span
style='font-family:黑体'>）</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc11259"><span
lang=EN-US>2.2.3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>数组类型</span></a></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc28174"><span
lang=EN-US>2.2.3.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>结构化类型</span></a><span lang=EN-US>(struct)</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc943"><span
lang=EN-US>2.2.3.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Channel </span></a><span style='font-family:
黑体'>类型</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Chanel</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>基本数据结构如下，数据结构</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:27.0pt;line-height:150%'><span
lang=EN-US style='font-size:13.5pt;line-height:150%;font-family:"微软雅黑",sans-serif;
color:#121212;background:white'>Go</span><span style='font-size:13.5pt;
line-height:150%;font-family:"微软雅黑",sans-serif;color:#121212;background:white'>的编译器将完成如下翻译：<span
lang=EN-US><br>
<b>`</b>make(chan type, n) =&gt; makechan(type, n)<b>`</b></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt;line-height:150%'><b><span
lang=EN-US style='font-size:13.5pt;line-height:150%;font-family:"微软雅黑",sans-serif;
color:#121212;background:white'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
hchan struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     qcount  
uint           // total data in the queue</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     dataqsiz
uint           // </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>环形队列</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     buf     
unsafe.Pointer // points to an array of dataqsiz elements</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     elemsize
uint16</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     closed  
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     elemtype
*_type // element type</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     sendx   
uint   // send index</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     recvx   
uint   // receive index</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     recvq   
waitq  // </span><span lang=EN-US style='font-size:9.5pt;line-height:150%;
font-family:"Segoe UI",sans-serif;color:#252933;background:white'>goroutine</span><span
style='font-size:9.5pt;line-height:150%;font-family:宋体;color:#252933;
background:white'>的</span><span lang=EN-US style='font-size:9.5pt;line-height:
150%;font-family:"Segoe UI",sans-serif;color:#252933;background:white'>sudog</span><span
style='font-size:9.5pt;line-height:150%;font-family:宋体;color:#252933;
background:white'>队列</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     sendq   
waitq  // list of send waiters</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     //
lock protects all fields in hchan, as well as several</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     //
fields in sudogs blocked on this channel.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     //</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     //
Do not change another G's status while holding this lock</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     //
(in particular, do not ready a G), as this can deadlock</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     //
with stack shrinking.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     lock
mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
lang=EN-US style='font-size:9.5pt;line-height:150%;font-family:"Segoe UI",sans-serif;
color:#252933;background:white'>goroutine</span><span style='font-size:9.5pt;
line-height:150%;font-family:宋体;color:#252933;background:white'>的</span><span
lang=EN-US style='font-size:9.5pt;line-height:150%;font-family:"Segoe UI",sans-serif;
color:#252933;background:white'>sudog</span><span style='font-size:9.5pt;
line-height:150%;font-family:宋体;color:#252933;background:white'>队列</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
waitq struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     first
*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>     last
*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc17970"><span
lang=EN-US>2.2.3.5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>函数类型</span></a></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc28585"><span
lang=EN-US>2.2.3.6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>切片类型</span></a></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc28337"><span
lang=EN-US>2.2.3.7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>接口类型（</span></a><span lang=EN-US>interface</span><span
style='font-family:黑体'>）</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:42.5pt;text-indent:-42.5pt'><a name="_Toc21506"><span
lang=EN-US>2.2.3.8.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>集合类型</span></a></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc2942"></a><a
name="_Toc16072"><span lang=EN-US style='font-family:"Arial",sans-serif'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-family:宋体'>运行特征</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><span lang=EN-US
style='font-family:宋体'>3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>分配内存</span></h2>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><span lang=EN-US
style='font-family:宋体'>3.1.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Make</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>make&nbsp;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在编译期的类型检查阶段，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>语言其实就将代表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
make </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键字的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
OMAKE </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>节点根据参数类型的不同转换成了</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
OMAKESLICE</span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>、</span><span lang=EN-US style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'>OMAKEMAP </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>和</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'> OMAKECHAN </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>三种不同类型的节点，这些节点最终也会调用不同的运行时函数来初始化数据结构。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>new&nbsp;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>内置函数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
new </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>会在编译期的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
SSA </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码生成阶段经过</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
callnew </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数的处理，如果请求创建的类型大小是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
0</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>，那么就会返回一个表示空指针的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
zerobase </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>变量，在遇到其他情况时会将关键字转换成</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'> newobject</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。原理如上所述。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>主要区别如下：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>make
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>只能用来分配及初始化类型为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
slice</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>map</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>chan
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数据。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>new
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>可以分配任意类型的数据；</span></p>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><span lang=EN-US
style='font-family:宋体'>3.1.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>New</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>new
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配返回的是指针，即类型</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
*Type</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>make
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>返回引用，即</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
Type</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>；</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>new
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配的空间被清零。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>make
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配空间后，会进行初始化；</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc10363"><span
lang=EN-US style='font-family:宋体'>3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>函数</span></a></h2>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc16065"><span
lang=EN-US style='font-family:宋体'>3.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>函数</span></a></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc19841"><span
lang=EN-US style='font-family:宋体'>3.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>递归</span></a></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc2424"><span
lang=EN-US style='font-family:宋体'>3.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>GMP</span></a><span style='font-family:黑体'>原理</span></h2>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc17947"><span
lang=EN-US style='font-family:宋体'>3.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Machine/Thread</span></a><span style='font-family:
黑体'>内核线程</span></h4>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的结构体定义：</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
./src/runtime/runtime2.go </span><span style='font-size:12.0pt;line-height:
150%;font-family:宋体'>文件中</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'>)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
M </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>结构体</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
m struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>/*</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>1.
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>所有调用栈的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Goroutine,</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>这是一个比较特殊的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>2.
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>普通的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>栈是在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Heap</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配的可增长的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stack,</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>而</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stack</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>对应的线程栈。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>3.
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>所有调度相关代码</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会先切换到该</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的栈再执行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0
*g // goroutine with scheduling stack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>morebuf
gobuf // gobuf arg to morestack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>divmod
uint32 // div/mod denominator for arm - known to liblink</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Fields not known to debuggers.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>procid
uint64 // for debuggers, but offset not hard-coded</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gsignal
*g // signal-handling g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goSigStack
gsignalStack // Go-allocated signal handling stack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sigmask
sigset // storage for saved signal mask</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>tls
[6]uintptr // thread-local storage (for x86 extern register)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstartfn
func() // </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>curg
*g // M </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在运行的结构体</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>caughtsig
guintptr // goroutine running during fatal signal</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p
puintptr // attached p for executing go code (nil if not executing go code)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nextp
puintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>id
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mallocing
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>throwing
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>preemptoff
string // if != &quot;&quot;, keep curg running on this m</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>locks
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>softfloat
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>dying
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>profilehz
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>helpgc
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>spinning
bool // m is out of work and is actively looking for work</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>blocked
bool // m is blocked on a note</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>inwb
bool // m is executing a write barrier</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newSigstack
bool // minit on C thread called sigaltstack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>printlock
int8</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>incgo
bool // m is executing a cgo call</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>fastrand
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ncgocall
uint64 // number of cgo calls in total</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ncgo
int32 // number of cgo calls currently in progress</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>cgoCallersUse
uint32 // if non-zero, cgoCallers in use temporarily</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>cgoCallers
*cgoCallers // cgo traceback if crashing in cgo call</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>park
note</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>alllink
*m // on allm</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>schedlink
muintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mcache
*mcache</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lockedg
*g // </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>表示与当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>锁定那个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>createstack
[32]uintptr // stack that created this thread.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>freglo
[16]uint32 // d[i] lsb and f[i]</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>freghi
[16]uint32 // d[i] msb and f[i+16]</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>fflag
uint32 // floating point compare flags</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>locked
uint32 // tracking for lockosthread</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nextwaitm
uintptr // next m waiting for lock</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>needextram
bool</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>traceback
uint8</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waitunlockf
unsafe.Pointer // todo go func(*g, unsafe.pointer) bool</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waitlock
unsafe.Pointer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waittraceev
byte</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waittraceskip
int</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>startingtrace
bool</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscalltick
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>thread
uintptr // thread handle</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
these are here because they are too large to be on the stack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
of low-level NOSPLIT functions.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>libcall
libcall</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>libcallpc
uintptr // for cpu profiler</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>libcallsp
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>libcallg
guintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscall
libcall // stores syscall parameters on windows</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mOS</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的字段众多，其中最重要的为下面四个：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0:
Go</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行时系统在启动之初创建的，用于执行一些运行时任务。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstartfn</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：表示</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的起始函数。其实就是我们</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
go </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>语句携带的那个函数啦。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>curg</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：存放当前正在运行的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的指针。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：指向当前与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联的那个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nextp</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：用于暂存于当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>有潜在关联的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（预联）当</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>重新启动时，即用预联的这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>做关联啦</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>spinning</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：表示当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是否正在寻找</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。在寻找过程中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>处于自旋状态。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lockedg</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：表示与当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>锁定的那个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。运行时系统会把</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>和一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>锁定，一旦锁定就只能双方相互作用，不接受第三者。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并没有像</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一样的状态标记</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>但可以认为一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>有以下的状态</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>自旋中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(spinning):
M</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在从运行队列获取</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这时候</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会拥有一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>:
M</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这时候</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会拥有一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行原生代码中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>:
M</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在执行原生代码或者阻塞的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscall,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这时</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并不拥有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>休眠中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>:
M</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>发现无待运行的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时会进入休眠</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>并添加到空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>链表中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这时</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并不拥有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>自旋中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(spinning)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>这个状态非常重要</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是否需要唤醒或者创建新的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>取决于当前自旋中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在被创建之初会被加入到全局的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.allm</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。接着，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的起始函数（</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstartfn</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>）和准备关联的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>）都会被设置。最后，运行时系统会为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>专门创建一个新的内核线程并与之关联。这时候这个新的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>就为执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>做好了准备。其中起始函数（</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstartfn</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>）仅当运行时系统要用此</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行系统监控或者垃圾回收等任务的时候才会被设置。全局</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表的作用是运行时系统在需要的时候会通过它获取到所有的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的信息，同时防止</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>被</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在新的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>被创建后回西安做一番初始化工作。其中包括了对自身所持的栈空间以及信号做处理的初始化。在上述初始化完成后</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
mstartfn </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>函数就会被执行</span><span lang=EN-US style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'> (</span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>如果存在的话</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。【注意】：如果</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstartfn
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>代表的是系统监控任务的话，那么该</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会一直在执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstartfn
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>而不会有后续的流程。否则</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
mstartfn </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>执行完后，当前</span><span lang=EN-US style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'>M</span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>将会与那个准备与之关联的</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>完成关联。至此，一个并发执行环境才真正完成。之后就是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>开始寻找可运行的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并运行之。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行时系统管辖的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>GC</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>任务执行的时候被停止，这时候系统会对</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的属性做某些必要的重置并把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放置入调度器的空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表。【很重要】因为在需要一个未被使用的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时，运行时系统会先去这个空闲列表获取</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>只有都没有的时候才会创建</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>本身是无状态的。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是否有空闲仅以它是否存在于调度器的空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.sched.midle</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中为依据</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
(</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>空闲列表不是那个全局列表哦</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>单个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>程序所使用的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的最大数量是可以被设置的。在我们使用命令运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>程序时候，有一个引导程序先会被启动的。在这个歌引导程序中会为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>程序的运行简历必要的环境。引导程序对</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量进行初始化设置，默认是</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>最大值</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
1W </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>【即是说，一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>程序最多可以使用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>1W</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，即：理想状态下，可以同时有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>1W</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>个内核线程被同时运行】。使用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime/debug.SetMaxThreads() </span><span style='font-size:12.0pt;line-height:
150%;font-family:宋体'>函数设置。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc782"><span
lang=EN-US style='font-family:宋体'>3.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Processor</span></a><span style='font-family:
黑体'>处理器</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P
(process)</span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>process</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的头文字</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>代表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>所需要的资源。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一些讲解协程的文章把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>理解为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>cpu</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>核心</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>其实这是错误的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>虽然</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量默认等于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>cpu</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>核心数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>但可以通过环境变量</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>GOMAXPROC</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>修改</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>在实际运行时</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>跟</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>cpu</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>核心并无任何关联。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>也可以理解为控制</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码的并行度的机制</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量等于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>1,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>代表当前最多只能有一个线程</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(M)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量等于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>2,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>代表当前最多只能有两个线程</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(M)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行原生代码的线程数量不受</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>控制。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>因为同一时间只有一个线程</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(M)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>可以拥有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
P</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的数据都是锁自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(lock
free)</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>读写这些数据的效率会非常的高。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是使</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>能够在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中运行的关键。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行时系统适当地让</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>与不同的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>建立或者断开联系，以使得</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的那些可运行的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>能够在需要的时候及时获得运行时机。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的结构体定义：</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
./src/runtime/runtime2.go </span><span style='font-size:12.0pt;line-height:
150%;font-family:宋体'>文件中</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'>)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
p struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lock
mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>id
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>status
uint32 // one of pidle/prunning/...</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>link
puintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>schedtick
uint32 // incremented on every scheduler call</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscalltick
uint32 // incremented on every system call</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sysmontick
sysmontick // last tick observed by sysmon</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m
muintptr // back-link to associated m (nil if idle)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mcache
*mcache</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>racectx
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>deferpool
[5][]*_defer // pool of available defer structs of different sizes (see
panic.go)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>deferpoolbuf
[5][32]*_defer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Cache of goroutine ids, amortizes accesses to runtime·sched.goidgen.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goidcache
uint64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goidcacheend
uint64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Queue of runnable goroutines. Accessed without lock.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqhead
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqtail
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runq
[256]guintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
runnext, if non-nil, is a runnable G that was ready'd by</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
the current G and should be run next instead of what's in</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
runq if there's time remaining in the running G's time</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
slice. It will inherit the time left in the current time</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
slice. If a set of goroutines is locked in a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
communicate-and-wait pattern, this schedules that set as a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
unit and eliminates the (potentially large) scheduling</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
latency that otherwise arises from adding the ready'd</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
goroutines to the end of the run queue.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runnext
guintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Available G's (status == Gdead)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfree
*g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfreecnt
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sudogcache
[]*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sudogbuf
[128]*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>tracebuf
traceBufPtr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
traceSweep indicates the sweep events should be traced.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
This is used to defer the sweep start event until a span</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
has actually been swept.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>traceSweep
bool</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
traceSwept and traceReclaimed track the number of bytes</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
swept and reclaimed by sweeping in the current sweep loop.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>traceSwept,
traceReclaimed uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>palloc
persistentAlloc // per-P to avoid mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Per-P GC state</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcAssistTime
int64 // Nanoseconds in assistAlloc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcBgMarkWorker
guintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcMarkWorkerMode
gcMarkWorkerMode</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
gcw is this P's GC work buffer cache. The work buffer is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
filled by write barriers, drained by mutator assists, and</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
disposed on certain GC state transitions.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcw
gcWork</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runSafePointFn
uint32 // if 1, run sched.safePointFn at next safe point</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pad
[sys.CacheLineSize]byte</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>通过</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.GOMAXPROCS</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数我们可以改变单个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>程序可以间拥有的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的最大数量。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的最大数量相当于是对可以被并发执行的用户级的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量作出限制。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>每一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都必须关联一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>才能使其中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>得以运行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【注意】：运行时系统会将</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>与关联的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>分离开来。但是如果该</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可运行队列中还有未运行的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，那么运行时系统就会找到一个空的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>（在调度器的空闲队列中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>）</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>或者创建一个空的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，并与该</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联起来（为了运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>而做准备）。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.GOMAXPROCS</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数设置的只会影响</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量，但是对</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>（内核线程）的数量不会影响，所以</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.GOMAXPROCS
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>并不是控制线程数，只能说是影响上下文环境</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数目。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>程序开始运行时，会先由引导程序对</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>做了数量上的限制，及对</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>做了限制，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量默认为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>1</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。所以我们无论在程序中使用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键字启用多少</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，它们都会被塞到一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在确认</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的最大数量后，运行时系统会根据这个数值初始化全局的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.allp</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】，类似全局</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表，其中包含了所有</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行时系统创建的所有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。随后，运行时系统会把调度器的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.sched.runq</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】中的所有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>均匀的放入全局的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表中的各个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列当中。到这里为止，运行时系统需要用到的所有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都准备就绪了。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>类似</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的空闲列表，调度器也存在一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的空闲列表【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.sched.pidle</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】，当一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>不再与任何</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联的时候，运行时系统就会把该</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放入这个列表中，而一个空闲的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联了某个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>之后会被从这个列表中取出【注意：就算一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>加入了空闲队列，但是它的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列不一定为空】</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>不同</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是有状态的：（五种）</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pidle</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>未和任何</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Prunning</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在和某个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Psyscall</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的被运行的那个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在进行系统调用</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pgcstop</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：运行时系统正在进行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。（运行时系统在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时会试图把全局</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都处于此状态）</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>已经不再被使用。（在调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.GOMAXPROCS</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>减少</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数量时，多余的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>就处于此状态）</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的初始状态就是为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pgcstop</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，处于这个状态很短暂，在初始化和填充</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列之后，运行时系统会将其状态置为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pidle</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并放入调度器的空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.sched.pidle</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>）中。其中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会由调度器根据实际情况进行取用。下图是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在各个状态建的流转情况：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>从上图，我们可以看出，除了</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>之外的其他状态的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都会在运行时系统欲进行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>GC</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是被指为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pgcstop</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>结束后状态不会回复到之前的状态的，而是都统一直接转到了</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pidle
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>【这意味着，他们都需要被重新调度】。【注意】：除了</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pgcstop
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>状态的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，其他状态的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都会在</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.GOMAXPROCS
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数去减少</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>数目时，被认为是多余的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>而状态转为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，这时候其带的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的队列中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都会被转移到</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度器的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中，它的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfree</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】也是一样被移到调度器的自由列表</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.sched.gfree</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】中。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【注意】：每个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中都有一个可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列及自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列。自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列包含了很多已经完成的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，随着被运行完成的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的积攒到一定程度后，运行时系统会把其中的部分</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>转移的调度器的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.sched.gfree</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】中。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【注意】：当我们每次用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
go</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键字</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>启用一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的时候，运行时系统都会先从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列获取一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>来封装我们提供的函数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
(go </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键字后面的函数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>，如果发现</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>过少时，会从调度器的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中移一些</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>过来，只有连调度器的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表都弹尽粮绝的时候，才会去创建新的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc26191"><span
lang=EN-US style='font-family:宋体'>3.2.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Gorountine</span></a><span style='font-family:
黑体'>携程</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G
(goroutine)</span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的头文字</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
goroutine</span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>可以解释为受管理的轻量线程</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>, goroutine</span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>使用</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键词创建。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>举例来说</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
func main() { go other() }, </span><span style='font-size:12.0pt;line-height:
150%;font-family:宋体'>这段代码创建了两个</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一个是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>main,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>另一个是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>other,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>【注意】：</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>main</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>本身也是一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的新建</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>休眠</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>恢复</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>停止都受到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行时的管理。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行异步操作时会进入休眠状态</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>待操作完成后再恢复</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>无需占用系统线程。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>新建或恢复时会添加到运行队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>等待</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>取出并运行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的结构体定义：</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
./src/runtime/runtime2.go </span><span style='font-size:12.0pt;line-height:
150%;font-family:宋体'>文件中</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'>)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
g struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Stack parameters.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
stack describes the actual stack memory: [stack.lo, stack.hi).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
stackguard0 is the stack pointer compared in the Go stack growth prologue.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
It is stack.lo+StackGuard normally, but can be StackPreempt to trigger a
preemption.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
stackguard1 is the stack pointer compared in the C stack growth prologue.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
It is stack.lo+StackGuard on g0 and gsignal stacks.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
It is ~0 on other goroutine stacks, to trigger a call to morestackc (and
crash).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stack
stack // offset known to runtime/cgo </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>描述了真实的栈内存，包括上下界</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stackguard0
uintptr // offset known to liblink</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stackguard1
uintptr // offset known to liblink</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_panic
*_panic // innermost panic - offset known to liblink</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_defer
*_defer // innermost defer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m
*m // current m; offset known to arm liblink </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>当前运行</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sched
gobuf // goroutine</span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>切换时，用于保存</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的上下文</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscallsp
uintptr // if status==Gsyscall, syscallsp = sched.sp to use during gc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscallpc
uintptr // if status==Gsyscall, syscallpc = sched.pc to use during gc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stktopsp
uintptr // expected sp at top of stack, to check in traceback</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>param
unsafe.Pointer // passed parameter on wakeup </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>用于传递参数，睡眠时其他</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>可以设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>param</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，唤醒时该</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>可以获取</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>atomicstatus
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stackLock
uint32 // sigprof/scang lock; TODO: fold in to atomicstatus</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goid
int64 // goroutine</span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>的</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>ID</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waitsince
int64 // approx time when the g become blocked g</span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>被阻塞的大体时间</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waitreason
string // if status==Gwaiting</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>schedlink
guintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>preempt
bool // preemption signal, duplicates stackguard0 = stackpreempt</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>paniconfault
bool // panic (instead of crash) on unexpected fault address</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>preemptscan
bool // preempted g does scan for gc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcscandone
bool // g has scanned stack; protected by _Gscan bit in status</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcscanvalid
bool // false at start of gc cycle, true if G has not run since last scan;
TODO: remove?</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>throwsplit
bool // must not split stack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>raceignore
int8 // ignore race detection events</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sysblocktraced
bool // StartTrace has emitted EvGoInSyscall about this goroutine</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sysexitticks
int64 // cputicks when syscall has returned (for tracing)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>traceseq
uint64 // trace event sequencer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>tracelastp
puintptr // last P emitted an event for this goroutine</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lockedm
*m // G</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>被锁定只在这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>上运行</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sig
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>writebuf
[]byte</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sigcode0
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sigcode1
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sigpc
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gopc
uintptr // pc of go statement that created this goroutine</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>startpc
uintptr // pc of goroutine function</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>racectx
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waiting
*sudog // sudog structures this g is waiting on (that have a valid elem ptr);
in lock order</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>cgoCtxt
[]uintptr // cgo traceback context</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>labels
unsafe.Pointer // profiler labels</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>timer
*timer // cached timer for time.Sleep</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Per-G GC state</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
gcAssistBytes is this G's GC assist credit in terms of</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
bytes allocated. If this is positive, then the G has credit</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
to allocate gcAssistBytes bytes without assisting. If this</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
is negative, then the G must correct this by performing</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
scan work. We track this in bytes to make it fast to update</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
and check for debt in the malloc hot path. The assist ratio</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
determines how this corresponds to scan work debt.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcAssistBytes
int64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>用于保存</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>切换时上下文的缓存结构体</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
gobuf struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
The offsets of sp, pc, and g are known to (hard-coded in) libmach.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
ctxt is unusual with respect to GC: it may be a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
heap-allocated funcval so write require a write barrier,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
but gobuf needs to be cleared from assembly. We take</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
advantage of the fact that the only path that uses a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
non-nil ctxt is morestack. As a result, gogo is the only</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
place where it may not already be nil, so gogo uses an</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
explicit write barrier. Everywhere else that resets the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
gobuf asserts that ctxt is already nil.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sp
uintptr // </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>当前的栈指针</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pc
uintptr // </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>计数器</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g
guintptr // g</span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>自身</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ctxt
unsafe.Pointer // this has to be a pointer so that gc scans it</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ret
sys.Uintreg</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lr
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>bp
uintptr // for GOEXPERIMENT=framepointer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>下面我们来讲讲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>语言的编译器会把我们编写的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>语句编程一个运行时系统的函数调用，并把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>语句中那个函数及其参数都作为参数传递给这个运行时系统函数中。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行时系统在接到这样一个调用后，会先检查一下</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数及其参数的合法性，紧接着会试图从本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>或者调度器的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中获取一个可用的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>（</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中有讲述了），如果没有则新创建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。类似</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在运行时系统中也有全局的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.allg</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】，那些新建的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会先放到这个全局的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表中，其列表的作用也是集中放置了当前运行时系统中给所有的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的指针。在用自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>封装</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的函数时，运行时系统都会对这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>做一次初始化。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>初始化：包含了被关联的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键字后的函数及当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的状态机</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ID</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等等。在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>被初始化完成后就会被放置到当前本地的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可运行队列中。只要时机成熟，调度器会立即尽心这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的调度运行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的各种状态：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gidle</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>被创建但还未完全被初始化。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Grunnable</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>为可运行的，正在等待被运行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Grunning</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在被运行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gsyscall</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在被系统调用</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gwaiting</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在因某个原因而等待</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>完成了运行</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>正在被初始化进行中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是处于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Grunnable</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>状态的。一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>真正被使用是在状态为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Grunnable</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>之后。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的生命周期及状态变化如图：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>图上有一步是事件到来，那么</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在运行过程中，是否等待某个事件以及等待什么样的事件？完全由起封装的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关键字后的函数决定。（如：等待</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>chan</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的值、涉及网络</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>I/O</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>time.Timer</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>time.Sleep</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等等事件）</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>退出系统调用，及其复杂：运行时系统先会尝试直接运行当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，仅当无法被运行时才会转成</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Grunnable</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并放置入调度器的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表中。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>最后，已经是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>状态的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是可以被重新初始化并使用的。而对比进入</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Pdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>状态的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等待的命运只有被销毁。处于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会被放置到本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>或者调度器的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表中。</span></p>

<h4 style='margin-left:35.45pt;text-indent:-35.45pt'><span lang=EN-US
style='font-family:宋体'>3.2.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>全局调度</span></h4>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>至此，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的初步描述已经完毕，下面我们来看一看一些核心的队列：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'><a
href="https://cloud.tencent.com/product/tke?from=10680"
target="https://cloud.tencent.com/developer/article/_blank"><span lang=EN-US
style='font-family:宋体;color:windowtext;text-decoration:none'><span lang=EN-US>容器</span></span></a></span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中文名</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>源码的名称</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>作用域</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>简要说明</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>全局</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.allm </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>运行时系统</span><span style='font-size:12.0pt;line-height:150%;font-family:
"Arial",sans-serif'> </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>存放所有</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>全局</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.allp </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>运行时系统</span><span style='font-size:12.0pt;line-height:150%;font-family:
"Arial",sans-serif'> </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>存放所有</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>全局</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.allg </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>运行时系统</span><span style='font-size:12.0pt;line-height:150%;font-family:
"Arial",sans-serif'> </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>存放所有</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度器中的空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.sched.midle </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>调度器</span><span style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>存放空闲</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度器中的空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.sched.pidle </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>调度器</span><span style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>存放空闲</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度器中的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.sched.runq </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>调度器</span><span style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>存放可运行</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度器中那个的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runtime.sched.gfree </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>调度器</span><span style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>存放自由</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
runq </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>存放当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
gfree </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>存放当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>三个全局的列表主要为了统计运行时系统的的所有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。我们主要关心剩下的这些容器，尤其是和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>相关的四个。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在运行时系统创建的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都会被保存在全局的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表中，值得注意的是：从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gsyscall</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>转出来的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，都会被放置到调度器的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中。而被运行时系统初始化的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会被放置到本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可运行列表中。从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gwaiting</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>转出来的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，除了因网络</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>I/O</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>陷入等待的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>之外，都会被放置到本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中。转成</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Gdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>状态的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会先被放置到本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>列表</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（上面的描述可以知道这一点）。调度器中的与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>相关的列表其实只是起了一个暂存的作用。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一句话概括三者关系：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>需要绑定在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>上才能运行；</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>需要绑定</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>才能运行；</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>下面我们看一看三者及内核调度实体【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>KSE</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】的关系：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>综上所述，一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的执行需要</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的支持。一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在于一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联之后就形成一个有效的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行环境</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>【内核线程</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
+ </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>上下文环境】。每个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>都含有一个</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的队列【</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runq</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>】。队列中的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会被一次传递给本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>关联的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>并且获得运行时机。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>由上图可以看出</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
M </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
KSE </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>总是</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一对一</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的。一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>能且仅能代表一个内核线程。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的生命周期内，它会且仅会与一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>KSE</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>产生关联。</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>以及</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>之间的关联是多变的，总是会随着实际调度的过程而改变。其中，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
M </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
P </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>总是一对一，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>与</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
G </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>总是</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一对多，</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>而</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
G </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>最终由</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
M </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>来负责运行。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>上述我们讲的运行时系统其实就是我们下面要说的调度器。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>我们再来回顾下</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>中的主要成员：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>里面比较重要的成员：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stack:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>使用的栈空间</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lo</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>hi</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>两个成员</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stackguard0:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>检查栈空间是否足够的值</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>低于这个值会扩张栈</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
0</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>代码使用的</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stackguard1:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>检查栈空间是否足够的值</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>低于这个值会扩张栈</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
1</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是原生代码使用的</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>对应的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sched:
g</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的调度数据</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中断时会保存当前的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>rsp</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等值到这里</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>恢复运行时会使用这里的值</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>atomicstatus:
g</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的当前状态</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>schedlink:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>下一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在链表结构中会使用</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>preempt:
g</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是否被抢占中</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lockedm:
g</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是否要求要回到这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>有的时候</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中断了恢复会要求使用原来的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>执行</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>里面比较重要的成员：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>用于调度的特殊</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度和执行系统调用时会切换到这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>curg:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当前运行的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当前拥有的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nextp:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>唤醒</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
M</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>会拥有这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>park:
M</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>休眠时使用的信号量</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>唤醒</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时会通过它唤醒</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>schedlink:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>下一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在链表结构中会使用</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mcache:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配内存时使用的本地分配器</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p.mcache</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>一样</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>拥有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时会复制过来</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lockedg:
lockedm</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的对应值</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>里面比较重要的成员：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>status:
p</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的当前状态</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>link:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>下一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>在链表结构中会使用</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>拥有这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mcache:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配内存时使用的本地分配器</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqhead:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>本地运行队列的出队序号</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqtail:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>本地运行队列的入队序号</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runq:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>本地运行队列的数组</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>可以保存</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>256</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfree:
G</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的自由列表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>保存变为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_Gdead</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>后可以复用的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>实例</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcBgMarkWorker:
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>后台</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>GC</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>worker</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果它存在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会优先执行它</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcw:
GC</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的本地工作队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>详细将在下一篇</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(GC</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>篇</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>分析</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调度器涉及到的结构体除了上面的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>、</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>之外，还有以下，比如全局的调度器：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
schedt struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
accessed atomically. keep at top to ensure alignment on 32-bit systems.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>下面两个变量需以原子访问访问。保持在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
struct </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>顶部，确保其在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
32 </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>位系统上可以对齐</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goidgen
uint64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lastpoll
uint64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>lock
mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>当修改</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
nmidle</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmidlelocked</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmsys</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmfreed
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这些数值时</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>需要记得调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
checkdead</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>midle
muintptr // idle m's waiting for work </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>空闲的</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmidle
int32 // number of idle m's waiting for work </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>当前等待工作的空闲</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> m </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>计数</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmidlelocked
int32 // number of locked m's waiting for work </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>当前等待工作的被</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> lock </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
m </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>计数</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mcount
int32 // number of m's that have been created </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>已经创建的</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> m </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>数量</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>maxmcount
int32 // maximum number of m's allowed (or die) </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>允许创建的最大的</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> m </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>数量</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ngsys
uint32 // number of system goroutines; updated atomically </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>系统</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
goroutine </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>的数量，</span><span style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>原子操作</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pidle
puintptr // idle p's </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>空闲的</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'> p </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>队列</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>npidle
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmspinning
uint32 // See &quot;Worker thread parking/unparking&quot; comment in proc.go.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Global runnable queue.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>全局的可运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqhead
guintptr // </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>队头地址</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqtail
guintptr // </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>队尾地址</span><span style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqsize
int32 // </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>队列宽度</span><span style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Global cache of dead G's.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
dead G </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的全局缓</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gflock
mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfreeStack
*g // </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>栈中自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>？</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfreeNoStack
*g // </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>堆中自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>？</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ngfree
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Central cache of sudog structs.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
sudog </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>结构的集中缓存</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sudoglock
mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sudogcache
*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Central pool of available defer structs of different sizes.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>不同大小的可用的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
defer struct </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>的集中缓存池</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>deferlock
mutex</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>deferpool
[5]*_defer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gcwaiting
uint32 // gc is waiting to run gc </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>等待运行状态。</span><span style='font-size:12.0pt;
line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>作为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>任务被执行期间的辅助标记、停止计数和通知机制</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stopwait
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stopnote
note</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sysmonwait
uint32 // </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>作为</span><span style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>系统检测任务被执行期间的停止计数和通知机制</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sysmonnote
note</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
safepointFn should be called on each P at the next GC</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
safepoint if p.runSafePointFn is set.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>应在下一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>GC</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>上的每个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>上调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>safepointFn</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果设置了</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p.runSafePointFn</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，则为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>safepoint</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>safePointFn
func(*p)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>safePointWait
int32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>safePointNote
note</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>profilehz
int32 // cpu profiling rate CPU</span><span style='font-size:12.0pt;line-height:
150%;font-family:宋体'>分析率</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>procresizetime
int64 // nanotime() of last change to gomaxprocs </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>上次修改</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
gomaxprocs </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>的纳秒时间</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>totaltime
int64 // ∫gomaxprocs dt up to procresizetime</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>全局调度器，全局只有一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>schedt</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>类型的实例。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sudoG
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>结构体：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
sudog </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>代表在等待列表里的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>，比如向</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
channel </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>发送</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>/</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>接收内容时</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>之所以需要</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
sudog </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是因为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>和同步对象之间的关系是多对多的</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>可能会在多个等待队列中，所以一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>可能被打包为多个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>多个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>也可以等待在同一个同步对象上</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>因此对于一个同步对象就会有很多</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
sudog </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>了</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
sudog </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是从一个特殊的池中进行分配的。用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
acquireSudog </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>和</span><span lang=EN-US style='font-size:12.0pt;line-height:150%;
font-family:"Arial",sans-serif'> releaseSudog </span><span style='font-size:
12.0pt;line-height:150%;font-family:宋体'>来分配和释放</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
sudog struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
The following fields are protected by the hchan.lock of the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
channel this sudog is blocking on. shrinkstack depends on</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
this for sudogs involved in channel ops.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g
*g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>selectdone
*uint32 // CAS to 1 to win select race (may point to stack)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>next
*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>prev
*sudog</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>elem
unsafe.Pointer // data element (may point to stack)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
The following fields are never accessed concurrently.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
For channels, waitlink is only accessed by g.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
For semaphores, all fields (including the ones above)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
are only accessed when holding a semaRoot lock.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>acquiretime
int64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>releasetime
int64</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>ticket
uint32</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>parent
*sudog // semaRoot binary tree</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waitlink
*sudog // g.waiting list or semaRoot</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>waittail
*sudog // semaRoot</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>c
*hchan // channel</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>那么</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的入口是怎么样的呢？首先，我们从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>是如何被创建的说起，创建</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的函数为：</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newproc
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
(</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
./src/runtime/proc.go </span><span style='font-size:12.0pt;line-height:150%;
font-family:宋体'>文件中</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>)</span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>，即：使用</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>命令创建</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>时</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
go</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>会把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>go</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>命令编译为对</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.newproc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的调用。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Create a new g running fn with siz bytes of arguments.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Put it on the queue of g's waiting to run.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
The compiler turns a go statement into a call to this.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Cannot split the stack because it assumes that the arguments</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
are available sequentially after &amp;fn; they would not be</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
copied if a stack split occurred.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>根据</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>参数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
fn </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
siz </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>创建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>并把它放置入</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>自由</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>队列中等待唤醒</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>编译器翻译一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
go </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>表达式时会调用这个函数</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>无法拆分堆栈，因为它假设参数在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
&amp;fn </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>之后顺序可用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>;
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果发生堆栈拆分，则不会复制它们。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>新建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goroutine</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>fn
+ PtrSize </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>获取第一个参数的地址，也就是</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Arial",sans-serif'>argp</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>siz
- 8 </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>地址</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//go:nosplit</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>func
newproc(siz int32, fn *funcval) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
add </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是一个指针运算，跳过函数指针</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>把栈上的参数起始地址找到</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>argp
:= add(unsafe.Pointer(&amp;fn), sys.PtrSize)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
getcallerpc</span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>返回的是</span><span style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用函数之后的那条程序指令的地址，</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>即</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>callee</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数返回时要执行的下一条指令的地址</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pc
:= getcallerpc(unsafe.Pointer(&amp;siz))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的栈创建</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>对象</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>systemstack(func()
{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newproc1(fn,
(*uint8)(argp), siz, 0, pc)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>})</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>结构体</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
funcval</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
funcval </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是一个变长结构，第一个成员是函数指针</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>所以上面的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
add </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>是跳过这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
fn</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>type
funcval struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>fn
uintptr</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
variable-size, fn-specific data here </span><span style='font-size:12.0pt;
line-height:150%;font-family:宋体'>这里的可变大小，特定于</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>fn</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的数据</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.newproc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数中只做了三件事：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>计算额外参数的地址</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
argp</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取调用端的地址</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>返回地址</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>)
pc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>使用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>systemstack</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
newproc1 </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>函数</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>systemstack
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>会切换当前的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g0, </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>并且使用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的栈空间</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>然后调用传入的函数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>再切换回原来的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和原来的栈空间。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>切换到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>后会假装返回地址是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstart,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这样</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>traceback</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的时候可以在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstart</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>停止。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>这里传给</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>systemstack</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的是一个闭包</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用时会把闭包的地址放到寄存器</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>rdx,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>具体可以参考上面对闭包的分析。</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>下面我们在主要来看看</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
newproc1 </span><span style='font-size:12.0pt;line-height:150%;font-family:
宋体'>函数做了什么：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Create a new g running fn with narg bytes of arguments starting</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
at argp and returning nret bytes of results. callerpc is the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
address of the go statement that created this. The new g is put</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
on the queue of g's waiting to run.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>根据函数参数和函数地址，创建一个新的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>，然后将这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>加入队列等待运行</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>func
newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g
{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>先获取</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>当前</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>，其实这里获取到的是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
g0</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_g_
:= getg()</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>判断下</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>
func </span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的实现是否为空</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
fn == nil {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_g_.m.throwing
= -1 // do not dump full stacks</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>throw(&quot;go
of nil func value&quot;)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>对应的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>locks++,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>禁止抢占</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_g_.m.locks++
// disable preemption because it can be holding p in a local var </span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>禁用抢占，因为它可以在本地</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>var</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中保存</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>siz
:= narg + nret</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>siz
= (siz + 7) &amp;^ 7</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
We could allocate a larger initial stack if necessary.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Not worth it: this is almost always an error.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
4*sizeof(uintreg): extra space added below</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
sizeof(uintreg): caller's LR (arm) or return address (x86, in gostartcall).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
siz &gt;= _StackMin-4*sys.RegSize-sys.RegSize {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>throw(&quot;newproc:
function arguments too large for new goroutine&quot;)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_p_
:= _g_.m.p.ptr()</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg
:= gfget(_p_)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
newg == nil {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg
= malg(_StackMin)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>casgstatus(newg,
_Gidle, _Gdead)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>allgadd(newg)
// publishes with a g-&gt;status of Gdead so GC scanner doesn't look at
uninitialized stack.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
newg.stack.hi == 0 {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>throw(&quot;newproc1:
newg missing stack&quot;)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
readgstatus(newg) != _Gdead {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>throw(&quot;newproc1:
new g is not Gdead&quot;)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>totalSize
:= 4*sys.RegSize + uintptr(siz) + sys.MinFrameSize // extra space in case of
reads slightly beyond frame</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>totalSize
+= -totalSize &amp; (sys.SpAlign - 1) // align to spAlign</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sp
:= newg.stack.hi - totalSize</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>spArg
:= sp</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
usesLR {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
caller's LR</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>*(*uintptr)(unsafe.Pointer(sp))
= 0</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>prepGoExitFrame(sp)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>spArg
+= sys.MinFrameSize</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
narg &gt; 0 {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>memmove(unsafe.Pointer(spArg),
unsafe.Pointer(argp), uintptr(narg))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
This is a stack-to-stack copy. If write barriers</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
are enabled and the source stack is grey (the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
destination is always black), then perform a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
barrier copy. We do this *after* the memmove</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
because the destination stack may have garbage on</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
it.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
writeBarrier.needed &amp;&amp; !_g_.m.curg.gcscandone {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>f
:= findfunc(fn.fn)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>stkmap
:= (*stackmap)(funcdata(f, _FUNCDATA_ArgsPointerMaps))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
We're in the prologue, so it's always stack map index 0.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>bv
:= stackmapdata(stkmap, 0)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>bulkBarrierBitmap(spArg,
spArg, uintptr(narg), 0, bv.bytedata)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>memclrNoHeapPointers(unsafe.Pointer(&amp;newg.sched),
unsafe.Sizeof(newg.sched))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.sched.sp
= sp</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.stktopsp
= sp</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.sched.pc
= funcPC(goexit) + sys.PCQuantum // +PCQuantum so that previous instruction is
in same function</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.sched.g
= guintptr(unsafe.Pointer(newg))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gostartcallfn(&amp;newg.sched,
fn)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.gopc
= callerpc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.startpc
= fn.fn</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
_g_.m.curg != nil {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.labels
= _g_.m.curg.labels</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
isSystemGoroutine(newg) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>atomic.Xadd(&amp;sched.ngsys,
+1)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.gcscanvalid
= false</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>casgstatus(newg,
_Gdead, _Grunnable)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
_p_.goidcache == _p_.goidcacheend {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
Sched.goidgen is the last allocated id,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
this batch must be [sched.goidgen+1, sched.goidgen+GoidCacheBatch].</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>//
At startup sched.goidgen=0, so main goroutine receives goid=1.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_p_.goidcache
= atomic.Xadd64(&amp;sched.goidgen, _GoidCacheBatch)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_p_.goidcache
-= _GoidCacheBatch - 1</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_p_.goidcacheend
= _p_.goidcache + _GoidCacheBatch</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.goid
= int64(_p_.goidcache)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_p_.goidcache++</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
raceenabled {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg.racectx
= racegostart(callerpc)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
trace.enabled {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>traceGoCreate(newg,
newg.startpc)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqput(_p_,
newg, true)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
atomic.Load(&amp;sched.npidle) != 0 &amp;&amp;
atomic.Load(&amp;sched.nmspinning) == 0 &amp;&amp; mainStarted {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>wakep()</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_g_.m.locks--</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>if
_g_.m.locks == 0 &amp;&amp; _g_.preempt { // restore the preemption request in
case we've cleared it in newstack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>_g_.stackguard0
= stackPreempt</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>return
newg</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>先大致看下</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newproc1
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数逻辑流程：</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newproc1
--&gt; newg</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newg[gfget]
--&gt; nil{is nil?}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nil
--&gt;|yes|E[init stack]</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nil
--&gt;|no|C[malg]</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>C
--&gt; D[set g status=&gt; idle-&gt;dead]</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>D
--&gt; allgadd</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>E
--&gt; G[set g status=&gt; dead-&gt; runnable]</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>allgadd
--&gt; G</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G
--&gt; runqput</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runtime.newproc1</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的处理如下</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>getg</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取当前的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>会编译为读取</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>FS</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>寄存器</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(TLS),
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这里会获取到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>对应的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>locks++,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>禁止抢占</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>拥有的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>新建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>首先调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gfget</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p.gfree</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果之前有</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>被回收在这里就可以复用</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取不到时调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>malg</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>分配一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>初始的栈空间大小是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>2K</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>需要先设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的状态为已中止</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(_Gdead),
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这样</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>不会去扫描这个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的未初始化的栈</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>把参数复制到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的栈上</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>把返回地址复制到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的栈上</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这里的返回地址是</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goexit,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>表示调用完目标函数后会调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>goexit</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的调度数据</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(sched)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sched.sp</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等于参数</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>+</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>返回地址后的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>rsp</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>地址</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sched.pc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等于目标函数的地址</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>查看</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gostartcallfn</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>和</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>gostartcall</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>sched.g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的状态为待运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>(_Grunnable)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqput</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放到运行队列</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>首先随机把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>p.runnext,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果放到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runnext</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>则入队原来在</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runnext</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>然后尝试把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>本地运行队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果本地运行队列满了则调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqputslow</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>把</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>全局运行队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>runqputslow</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会把本地运行队列中一半的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>放到全局运行队列</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>这样下次就可以继续用快速的本地运行队列了</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果当前有空闲的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>但是无自旋的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M(nmspinning</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>等于</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>0),
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>并且主函数已执行则唤醒或新建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>这一步非常重要</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>用于保证当前有足够的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>运行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>G,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>具体请查看上面的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>链表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>唤醒或新建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会通过</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>wakep</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>首先交换</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>nmspinning</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>到</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>1,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>成功再继续</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>多个线程同时执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>wakep</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>只有一个会继续</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>startm</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>函数</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>pidleget</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>链表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取一个空闲的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>P</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mget</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>从</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>空闲</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>链表</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&quot;</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>获取一个空闲的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>如果没有空闲的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>则调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newm</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>新建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>M</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newm</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会新建一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>m</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>的实例</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>,
m</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>的实例包含一个</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>然后调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newosproc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>动一个系统线程</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>newosproc</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>会调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>syscall
clone</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>创建一个新的线程</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>线程创建后会设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>TLS,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>设置</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>TLS</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>中当前的</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>为</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>g0,
</span><span style='font-size:12.0pt;line-height:150%;font-family:宋体'>然后执行</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>mstart</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>调用</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>notewakeup(&amp;mp.park)</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>唤醒线程</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>：</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc22065"><span
lang=EN-US style='font-family:"Arial",sans-serif'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>垃圾回收</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc16845"><span
lang=EN-US style='font-family:宋体'>4.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>历史</span></a></h2>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><span lang=EN-US
style='font-family:宋体'>4.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>STW</span></h2>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc29856"><span
lang=EN-US style='font-family:宋体'>4.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>三色标记</span></a></h2>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>为了解决原始标记清除算法带来的长时间</span><span
lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif'> STW</span><span
style='font-size:12.0pt;font-family:宋体'>，多数现代的追踪式垃圾收集器都会实现三色标记算法的变种以缩短</span><span
lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif'> STW </span><span
style='font-size:12.0pt;font-family:宋体'>的时间。三色标记算法将程序中的对象分成白色、黑色和灰色三类：</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>白色对象</span><span
style='font-size:12.0pt;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;font-family:宋体'>—</span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
font-family:宋体'>潜在的垃圾，其内存可能会被垃圾收集器回收；</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>灰色对象</span><span
style='font-size:12.0pt;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;font-family:宋体'>—</span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
font-family:宋体'>活跃的对象，因为存在指向白色对象的外部指针，垃圾收集器会扫描这些对象的子对象；</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>黑色对象</span><span
style='font-size:12.0pt;font-family:"Arial",sans-serif'> </span><span
style='font-size:12.0pt;font-family:宋体'>—</span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif'> </span><span style='font-size:12.0pt;
font-family:宋体'>活跃的对象，包括不存在任何引用外部指针的对象以及从根对象可达的对象；</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>三色标记法工作原理：</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>初始状态所有对象都是白色。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>从</span><span
lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif'>root</span><span
style='font-size:12.0pt;font-family:宋体'>根出发扫描所有根对象，将被它引用的对象标记为灰色。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>分析灰色对象是否引用了其它对象。如果没有引用其它对象则将该灰色对象标记为黑色；如果有引用则将它变为黑色的同时将它引用的对象也变为灰色。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:宋体'>重复步骤</span><span
lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif'>3</span><span
style='font-size:12.0pt;font-family:宋体'>，直到灰色对象队列为空。此时白色对象即为垃圾对象，进行回收。</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc17636"><span
lang=EN-US style='font-family:宋体'>4.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:黑体'>屏障</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc31956"><span
lang=EN-US style='font-family:"Arial",sans-serif'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>编译</span></a></h1>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>（待补充）。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc9177"></a><a
name="_Toc29184"><span lang=EN-US style='font-family:"Arial",sans-serif'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-family:宋体'>参考文献</span></a></h1>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Golang</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>垃圾回收</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'><a
href="https://blog.csdn.net/sinat_40292249/article/details/122176270"><span
style='color:windowtext;text-decoration:none'>https://blog.csdn.net/sinat_40292249/article/details/122176270</span></a></span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Golang</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>源码分析</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>https://cloud.tencent.com/developer/article/2064594</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Channel</span><span
style='font-size:12.0pt;line-height:150%;font-family:宋体'>原理</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'><a
href="https://zhuanlan.zhihu.com/p/547757268"><span style='color:windowtext;
text-decoration:none'>https://zhuanlan.zhihu.com/p/547757268</span></a></span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'><a
href="https://www.cnblogs.com/33debug/p/12068699.html"><span style='color:windowtext;
text-decoration:none'>golang</span><span lang=EN-US style='font-family:宋体;
color:windowtext;text-decoration:none'><span lang=EN-US>内存分配原理</span></span></a></span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>https://www.cnblogs.com/33debug/p/12068699.html</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

</div>

</body>

</html>
