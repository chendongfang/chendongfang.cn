<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>mybatis</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:微软雅黑;
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@微软雅黑";}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
h1
	{margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:240%;
	page-break-after:avoid;
	font-size:22.0pt;
	font-family:"Calibri",sans-serif;
	font-weight:bold;}
h2
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:172%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Arial",sans-serif;
	font-weight:bold;}
h3
	{margin-right:0cm;
	margin-left:0cm;
	font-size:13.5pt;
	font-family:宋体;
	font-weight:bold;}
h4
	{margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:155%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial",sans-serif;
	font-weight:bold;}
h5
	{mso-style-link:"标题 5 字符";
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:156%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Calibri",sans-serif;
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"正文文本 字符";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoBodyTextFirstIndent, li.MsoBodyTextFirstIndent, div.MsoBodyTextFirstIndent
	{mso-style-link:"正文文本首行缩进 字符";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#954F72;
	text-decoration:underline;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Calibri",sans-serif;}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:宋体;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
span.5
	{mso-style-name:"标题 5 字符";
	mso-style-link:"标题 5";
	font-family:"Calibri",sans-serif;
	font-weight:bold;}
p.COR-, li.COR-, div.COR-
	{mso-style-name:COR-代码;
	mso-style-link:"COR-代码 Char";
	margin-top:7.8pt;
	margin-right:0cm;
	margin-bottom:7.8pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:12.0pt;
	background:#E6E6E6;
	word-break:break-all;
	font-size:10.5pt;
	font-family:"Courier New";}
span.COR-Char
	{mso-style-name:"COR-代码 Char";
	mso-style-link:COR-代码;
	font-family:"Courier New";
	background:#E6E6E6;}
span.a
	{mso-style-name:"正文文本 字符";
	mso-style-link:正文文本;
	font-family:"Calibri",sans-serif;}
span.a0
	{mso-style-name:"正文文本首行缩进 字符";
	mso-style-link:正文文本首行缩进;
	font-family:"Calibri",sans-serif;}
.MsoChpDefault
	{font-size:10.0pt;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	layout-grid:15.6pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN link=blue vlink="#954F72" style='word-wrap:break-word;
text-justify-trim:punctuation'>

<div class=WordSection1 style='layout-grid:15.6pt'>

<h1 align=center style='text-align:center'><a name="_Toc127397682"><span
lang=EN-US>Mybatis</span></a></h1>

<p class=MsoToc1><span
class=MsoHyperlink><span lang=EN-US><a href="#_Toc127397682">Mybatis</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397683">1.<span style='color:windowtext;text-decoration:none'>     </span>Source</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397684">1.1 Version</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397685">1.2 Introduce</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397686">2.<span style='color:windowtext;text-decoration:none'>     </span>Session</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397687">2.1 SqlSessionManager</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397688">2.2 SqlSession</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397689">2.3 DefaultSqlSession</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397690">2.4 SqlSessionFactory</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397691">3.<span style='color:windowtext;text-decoration:none'>     </span>Executor</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397692">3.1 Executor</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397693">3.2 BaseExecutor</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397694">3.3 CachingExecutor</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397695">4.<span style='color:windowtext;text-decoration:none'>     </span>Handler</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397696">4.1 StatementHandler</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397697">4.2 ParameterHandler</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397698">4.3 ResultHandler</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397699">5.<span style='color:windowtext;text-decoration:none'>     </span>cache</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397700">5.1 cache</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397701">5.2 CacheKey</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397702">5.3 TransactionalCacheManager</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397703">5.4 CachingExecutor</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397704">6.<span style='color:windowtext;text-decoration:none'>     </span>reflection</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397705">6.1 Invoker</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397706">6.2 Reflector</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397707">7.<span style='color:windowtext;text-decoration:none'>     </span>binding</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397708">7.1 MapperProxy</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397709">7.2 MapperMethod</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397710">8.<span style='color:windowtext;text-decoration:none'>     </span>mapping</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397711">8.1 BoundSql</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397712">8.2 MappedStatement</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397713">8.3 ParameterMapping</a></span></span></p>

<p class=MsoToc3><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397714">8.4 ResultMapping</a></span></span></p>

<p class=MsoToc2><span class=MsoHyperlink><span lang=EN-US><a
href="#_Toc127397715">9.<span style='color:windowtext;text-decoration:none'>     </span><span
lang=EN-US style='font-family:宋体'><span lang=EN-US>参考文献</span></span></a></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397683"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>Source</span></a></h2>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397684"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>1.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>Version</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>Version</span><span
style='font-family:宋体;color:black;background:white'>：</span><span lang=EN-US
style='color:black;background:white'>mybatis-3.5.2-sources</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397685"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>1.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>Introduce</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
style='font-family:宋体;color:black;background:white'>整体流程图</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US><img border=0 width=790 height=773 id="图片 1"
src="mybatis.files/image001.gif" alt="IMG_256"></span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397686"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>Session</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;font-family:"Calibri",sans-serif'>2.1 </span><span lang=EN-US
style='font-size:12.0pt;font-family:"Calibri",sans-serif'> <a
name="_Toc127397687">SqlSessionManager</a></span></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.
SqlSessionManager</span><span style='font-family:宋体;color:black;background:
white'>的主要属性</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
SqlSessionManager implements SqlSessionFactory, SqlSession {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
SqlSessionFactory sqlSessionFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final SqlSession
sqlSessionProxy;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
ThreadLocal&lt;SqlSession&gt; localSqlSession = new ThreadLocal&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
SqlSessionManager(SqlSessionFactory sqlSessionFactory) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.sqlSessionFactory =
sqlSessionFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.sqlSessionProxy =
(SqlSession) Proxy.newProxyInstance(</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
SqlSessionFactory.class.getClassLoader(),</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        new
Class[]{SqlSession.class},</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        new
SqlSessionInterceptor());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.
SqlSessionManager</span><span style='font-family:宋体;color:black;background:
white'>的事务提交，关闭等</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>@Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public void commit(boolean
force) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final SqlSession
sqlSession = localSqlSession.get();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (sqlSession == null)
{</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throw new
SqlSessionException(&quot;Error:  Cannot commit.  No managed session is
started.&quot;);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
sqlSession.commit(force);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public void rollback() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final SqlSession
sqlSession = localSqlSession.get();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (sqlSession == null)
{</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throw new
SqlSessionException(&quot;Error:  Cannot rollback.  No managed session is
started.&quot;);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    sqlSession.rollback();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397688"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>2.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>SqlSession</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session. SqlSession</span><span
style='font-family:宋体;color:black;background:white'>的主要方法</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public interface SqlSession
extends Closeable {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  &lt;T&gt; T
selectOne(String statement);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>&lt;T&gt; T selectOne(String
statement, Object parameter);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  int insert(String
statement);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>…</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397689"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>2.3 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>DefaultSqlSession</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.defaults.DefaultSqlSession</span><span
style='font-family:宋体;color:black;background:white'>的执行性流程，</span><span
lang=EN-US style='color:black;background:white'>selectList</span><span
style='font-family:宋体;color:black;background:white'>案例</span></p>

<p class=COR-><span lang=EN-US style='color:black'>@Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public &lt;E&gt;
List&lt;E&gt; selectList(String statement, Object parameter, RowBounds
rowBounds) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      MappedStatement ms =
configuration.getMappedStatement(statement);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return
executor.query(ms, wrapCollection(parameter), rowBounds,
Executor.NO_RESULT_HANDLER);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch (Exception e) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throw
ExceptionFactory.wrapException(&quot;Error querying database.  Cause: &quot; +
e, e);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } finally {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
ErrorContext.instance().reset();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397690"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>2.4 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>SqlSessionFactory</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.
SqlSessionFactory</span><span style='font-family:宋体;color:black;background:
white'>的主要方法</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public interface
SqlSessionFactory {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession openSession();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(boolean autoCommit);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(Connection connection);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(TransactionIsolationLevel level);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(ExecutorType execType);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(ExecutorType execType, boolean autoCommit);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(ExecutorType execType, TransactionIsolationLevel level);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  SqlSession
openSession(ExecutorType execType, Connection connection);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  Configuration
getConfiguration();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.defaults.
DefaultSqlSessionFactory</span><span style='font-family:宋体;color:black;
background:white'>的获取</span><span lang=EN-US style='color:black;background:
white'>SqlSession</span><span style='font-family:宋体;color:black;background:
white'>的方法</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private SqlSession
openSessionFromDataSource(ExecutorType execType, TransactionIsolationLevel
level, boolean autoCommit) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Transaction tx = null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      final Environment
environment = configuration.getEnvironment();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      final
TransactionFactory transactionFactory =
getTransactionFactoryFromEnvironment(environment);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      tx =
transactionFactory.newTransaction(environment.getDataSource(), level,
autoCommit);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      final Executor
executor = configuration.newExecutor(tx, execType);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return new
DefaultSqlSession(configuration, executor, autoCommit);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch (Exception e) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      closeTransaction(tx);
// may have fetched a connection so lets call close()</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throw
ExceptionFactory.wrapException(&quot;Error opening session.  Cause: &quot; + e,
e);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } finally {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
ErrorContext.instance().reset();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397691"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>Executor</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397692"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>3.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>Executor</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. Executor</span><span
style='font-family:宋体;color:black;background:white'>的主要方法</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public interface Executor {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  ResultHandler
NO_RESULT_HANDLER = null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  int update(MappedStatement
ms, Object parameter) throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  &lt;E&gt; List&lt;E&gt;
query(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler
resultHandler, CacheKey cacheKey, BoundSql boundSql) throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  &lt;E&gt; List&lt;E&gt;
query(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler
resultHandler) throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  &lt;E&gt; Cursor&lt;E&gt;
queryCursor(MappedStatement ms, Object parameter, RowBounds rowBounds) throws
SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  List&lt;BatchResult&gt;
flushStatements() throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void commit(boolean
required) throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void rollback(boolean
required) throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  CacheKey
createCacheKey(MappedStatement ms, Object parameterObject, RowBounds rowBounds,
BoundSql boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  boolean
isCached(MappedStatement ms, CacheKey key);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void clearLocalCache();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void
deferLoad(MappedStatement ms, MetaObject resultObject, String property,
CacheKey key, Class&lt;?&gt; targetType);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  Transaction
getTransaction();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void close(boolean
forceRollback);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  boolean isClosed();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void
setExecutorWrapper(Executor executor);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397693"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>3.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>BaseExecutor</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. BaseExecutor</span><span
style='font-family:宋体;color:black;background:white'>的模板方法</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>protected abstract int
doUpdate(MappedStatement ms, Object parameter)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected abstract
List&lt;BatchResult&gt; doFlushStatements(boolean isRollback)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected abstract
&lt;E&gt; List&lt;E&gt; doQuery(MappedStatement ms, Object parameter, RowBounds
rowBounds, ResultHandler resultHandler, BoundSql boundSql)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected abstract
&lt;E&gt; Cursor&lt;E&gt; doQueryCursor(MappedStatement ms, Object parameter,
RowBounds rowBounds, BoundSql boundSql)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>3.2.1 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>SimpleExecutor</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. SimpleExecutor</span><span
style='font-family:宋体;color:black;background:white'>的通过</span><span lang=EN-US
style='color:black;background:white'>StatementHandler</span><span
style='font-family:宋体;color:black;background:white'>实现</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public &lt;E&gt;
List&lt;E&gt; doQuery(MappedStatement ms, Object parameter, RowBounds
rowBounds, ResultHandler resultHandler, BoundSql boundSql) throws SQLException
{</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Statement stmt = null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      Configuration
configuration = ms.getConfiguration();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      StatementHandler
handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds,
resultHandler, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      stmt =
prepareStatement(handler, ms.getStatementLog());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return
handler.query(stmt, resultHandler);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } finally {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      closeStatement(stmt);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>3.2.2 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>ReuseExecutor</span></h4>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. ReuseExecutor</span><span
style='font-family:宋体;color:black;background:white'>的通过</span><span lang=EN-US
style='color:black;background:white'>prepareStatement</span><span
style='font-family:宋体;color:black;background:white'>复用</span><span lang=EN-US
style='color:black;background:white'>Statement</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;String, Statement&gt; statementMap = new HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Statement
prepareStatement(StatementHandler handler, Log statementLog) throws
SQLException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Statement stmt;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    BoundSql boundSql = handler.getBoundSql();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    String sql =
boundSql.getSql();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if
(hasStatementFor(sql)) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      stmt =
getStatement(sql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
applyTransactionTimeout(stmt);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      Connection connection
= getConnection(statementLog);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      stmt = handler.prepare(connection,
transaction.getTimeout());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      putStatement(sql,
stmt);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
handler.parameterize(stmt);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return stmt;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean
hasStatementFor(String sql) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return
statementMap.keySet().contains(sql) &amp;&amp; !statementMap.get(sql).getConnection().isClosed();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch (SQLException e)
{</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return false;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>3.2.3 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>BatchExecutor</span><span
style='font-size:12.0pt;line-height:155%;font-family:黑体'>（待补充）</span></h4>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>--todo</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>3.2.4 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>ClosedExecutor</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.loader.
ResultLoaderMap. ClosedExecutor</span><span style='font-family:宋体;color:black;
background:white'>是</span><span lang=EN-US style='color:black;background:white'>ResultLoaderMap</span><span
style='font-family:宋体;color:black;background:white'>使用</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private static final class
ClosedExecutor extends BaseExecutor {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    public ClosedExecutor()
{</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      super(null, null);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    public boolean
isClosed() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return true;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397694"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>3.3 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>CachingExecutor</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. CachingExecutor</span><span
style='font-family:宋体;color:black;background:white'>是使用</span><span lang=EN-US
style='color:black;background:white'>TransactionalCacheManager</span><span
style='font-family:宋体;color:black;background:white'>和</span><span lang=EN-US
style='color:black;background:white'>CacheKey</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class CachingExecutor
implements Executor {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final Executor
delegate;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
TransactionalCacheManager tcm = new TransactionalCacheManager();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public CachingExecutor(Executor
delegate) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.delegate =
delegate;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
delegate.setExecutorWrapper(this);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.cache.TransactionalCacheManager
</span><span style='font-family:宋体;color:black;background:white'>使用</span><span
lang=EN-US style='color:black;background:white'>Map</span><span
style='font-family:宋体;color:black;background:white'>作为缓存</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
TransactionalCacheManager {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;Cache, TransactionalCache&gt; transactionalCaches = new
HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. CachingExecutor</span><span
style='font-family:宋体;color:black;background:white'>是使用</span><span lang=EN-US
style='color:black;background:white'>query </span><span style='font-family:
宋体;color:black;background:white'>方法</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public &lt;E&gt;
List&lt;E&gt; query(MappedStatement ms, Object parameterObject, RowBounds rowBounds,
ResultHandler resultHandler, CacheKey key, BoundSql boundSql)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Cache cache =
ms.getCache();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (cache != null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
flushCacheIfRequired(ms);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      if (ms.isUseCache()
&amp;&amp; resultHandler == null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
ensureNoOutParams(ms, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
@SuppressWarnings(&quot;unchecked&quot;)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        List&lt;E&gt; list =
(List&lt;E&gt;) tcm.getObject(cache, key);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        if (list == null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          list =
delegate.query(ms, parameterObject, rowBounds, resultHandler, key, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>         
tcm.putObject(cache, key, list); // issue #578 and #116</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        return list;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return
delegate.query(ms, parameterObject, rowBounds, resultHandler, key, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:4.8pt;margin-right:0cm;margin-bottom:0cm;
margin-left:1.2pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
12.0pt'>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397695"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>Handler</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397696"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>4.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>StatementHandler</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.statement</span><span
style='font-family:宋体;color:black;background:white'>。</span><span lang=EN-US
style='color:black;background:white'>StatementHandler</span><span
style='font-family:宋体;color:black;background:white'>是主要方法</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public interface
StatementHandler {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  Statement
prepare(Connection connection, Integer transactionTimeout)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void
parameterize(Statement statement)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void batch(Statement
statement)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  int update(Statement
statement)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  &lt;E&gt; List&lt;E&gt;
query(Statement statement, ResultHandler resultHandler)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  &lt;E&gt; Cursor&lt;E&gt;
queryCursor(Statement statement)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  BoundSql getBoundSql();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  ParameterHandler
getParameterHandler();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>4.1.1 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>RoutingStatementHandler</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.statement.RoutingStatementHandler</span><span
style='font-family:宋体;color:black;background:white'>是构造方法</span></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
RoutingStatementHandler implements StatementHandler {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
StatementHandler delegate;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
RoutingStatementHandler(Executor executor, MappedStatement ms, Object
parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)
{</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    switch
(ms.getStatementType()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case STATEMENT:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        delegate = new
SimpleStatementHandler(executor, ms, parameter, rowBounds, resultHandler,
boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case PREPARED:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        delegate = new
PreparedStatementHandler(executor, ms, parameter, rowBounds, resultHandler,
boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case CALLABLE:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        delegate = new
CallableStatementHandler(executor, ms, parameter, rowBounds, resultHandler,
boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      default:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        throw new
ExecutorException(&quot;Unknown statement type: &quot; +
ms.getStatementType());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>4.1.2 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>BaseStatementHandler</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.statement.
BaseStatementHandler</span><span style='font-family:宋体;color:black;background:
white'>是基本属性</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public abstract class
BaseStatementHandler implements StatementHandler {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final
Configuration configuration;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final
ObjectFactory objectFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final
TypeHandlerRegistry typeHandlerRegistry;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final
ResultSetHandler resultSetHandler;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final
ParameterHandler parameterHandler;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final Executor
executor;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final
MappedStatement mappedStatement;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected final RowBounds
rowBounds;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected BoundSql
boundSql;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  protected
BaseStatementHandler(Executor executor, MappedStatement mappedStatement, Object
parameterObject, RowBounds rowBounds, ResultHandler resultHandler, BoundSql
boundSql) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.configuration =
mappedStatement.getConfiguration();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.executor =
executor;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.mappedStatement =
mappedStatement;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.rowBounds =
rowBounds;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.typeHandlerRegistry
= configuration.getTypeHandlerRegistry();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.objectFactory =
configuration.getObjectFactory();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (boundSql == null) {
// issue #435, get the key before calculating the statement</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      generateKeys(parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      boundSql =
mappedStatement.getBoundSql(parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.boundSql =
boundSql;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.parameterHandler =
configuration.newParameterHandler(mappedStatement, parameterObject, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.resultSetHandler =
configuration.newResultSetHandler(executor, mappedStatement, rowBounds,
parameterHandler, resultHandler, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>4.1.3 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>SimpleStatementHandler</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.statement.
SimpleStatementHandler</span><span style='font-family:宋体;color:black;
background:white'>的使用</span><span lang=EN-US style='color:black;background:
white'>java.sql.Statement</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
SimpleStatementHandler extends BaseStatementHandler {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
SimpleStatementHandler(Executor executor, MappedStatement mappedStatement,
Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql
boundSql) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    super(executor,
mappedStatement, parameter, rowBounds, resultHandler, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public int
update(Statement statement) throws SQLException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    String sql =
boundSql.getSql();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Object parameterObject =
boundSql.getParameterObject();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    KeyGenerator
keyGenerator = mappedStatement.getKeyGenerator();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    int rows;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (keyGenerator
instanceof Jdbc3KeyGenerator) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      statement.execute(sql,
Statement.RETURN_GENERATED_KEYS);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      rows =
statement.getUpdateCount();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      keyGenerator.processAfter(executor,
mappedStatement, statement, parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } else if (keyGenerator
instanceof SelectKeyGenerator) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
statement.execute(sql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      rows =
statement.getUpdateCount();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
keyGenerator.processAfter(executor, mappedStatement, statement,
parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
statement.execute(sql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      rows =
statement.getUpdateCount();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return rows;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>4.1.4 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>PreparedStatementHandler</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.statement.
PreparedStatementHandler</span><span style='font-family:宋体;color:black;
background:white'>的使用</span><span lang=EN-US style='color:black;background:
white'>java.sql. PreparedStatement</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
PreparedStatementHandler extends BaseStatementHandler {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
PreparedStatementHandler(Executor executor, MappedStatement mappedStatement,
Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql
boundSql) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    super(executor,
mappedStatement, parameter, rowBounds, resultHandler, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public int
update(Statement statement) throws SQLException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    PreparedStatement ps =
(PreparedStatement) statement;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    ps.execute();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    int rows =
ps.getUpdateCount();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Object parameterObject =
boundSql.getParameterObject();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    KeyGenerator
keyGenerator = mappedStatement.getKeyGenerator();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
keyGenerator.processAfter(executor, mappedStatement, ps, parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return rows;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>4.1.5 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>CallableStatementHandler</span></h4>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.statement.
CallableStatementHandler</span><span style='font-family:宋体;color:black;
background:white'>的使用</span><span lang=EN-US style='color:black;background:
white'>java.sql. CallableStatement</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
CallableStatementHandler extends BaseStatementHandler {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public CallableStatementHandler(Executor
executor, MappedStatement mappedStatement, Object parameter, RowBounds
rowBounds, ResultHandler resultHandler, BoundSql boundSql) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    super(executor,
mappedStatement, parameter, rowBounds, resultHandler, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public int
update(Statement statement) throws SQLException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    CallableStatement cs =
(CallableStatement) statement;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    cs.execute();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    int rows =
cs.getUpdateCount();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Object parameterObject =
boundSql.getParameterObject();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    KeyGenerator
keyGenerator = mappedStatement.getKeyGenerator();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
keyGenerator.processAfter(executor, mappedStatement, cs, parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
resultSetHandler.handleOutputParameters(cs);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return rows;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397697"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>4.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>ParameterHandler</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.scripting.defaults.
DefaultParameterHandler</span><span style='font-family:宋体;color:black;
background:white'>的處理</span><span lang=EN-US style='color:black;background:
white'>ParameterMapping</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>@Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public void
setParameters(PreparedStatement ps) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
ErrorContext.instance().activity(&quot;setting parameters&quot;).object(mappedStatement.getParameterMap().getId());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
List&lt;ParameterMapping&gt; parameterMappings =
boundSql.getParameterMappings();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (parameterMappings !=
null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      for (int i = 0; i &lt;
parameterMappings.size(); i++) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        ParameterMapping
parameterMapping = parameterMappings.get(i);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        if
(parameterMapping.getMode() != ParameterMode.OUT) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          Object value;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          String
propertyName = parameterMapping.getProperty();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          if
(boundSql.hasAdditionalParameter(propertyName)) { // issue #448 ask first for
additional params</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            value =
boundSql.getAdditionalParameter(propertyName);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          } else if
(parameterObject == null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            value = null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          } else if
(typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            value =
parameterObject;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            MetaObject
metaObject = configuration.newMetaObject(parameterObject);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            value =
metaObject.getValue(propertyName);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          TypeHandler
typeHandler = parameterMapping.getTypeHandler();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          JdbcType jdbcType
= parameterMapping.getJdbcType();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          if (value == null
&amp;&amp; jdbcType == null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            jdbcType =
configuration.getJdbcTypeForNull();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            typeHandler.setParameter(ps,
i + 1, value, jdbcType);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          } catch
(TypeException | SQLException e) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            throw new
TypeException(&quot;Could not set parameters for mapping: &quot; +
parameterMapping + &quot;. Cause: &quot; + e, e);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397698"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>4.3 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>ResultHandler</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt;font-family:Consolas;
color:black;background:#E8F2FE'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.
ResultHandler</span><span style='font-family:宋体;color:black;background:white'>方法</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public interface
ResultHandler&lt;T&gt; {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void
handleResult(ResultContext&lt;? extends T&gt; resultContext);</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt;font-family:Consolas;
color:black;background:#E8F2FE'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt;font-family:Consolas;
color:black;background:#E8F2FE'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor.result.
DefaultMapResultHandler</span><span style='font-family:宋体;color:black;
background:white'>反射出</span><span lang=EN-US style='color:black;background:
white'>result</span><span style='font-family:宋体;color:black;background:white'>對象</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
DefaultMapResultHandler&lt;K, V&gt; implements ResultHandler&lt;V&gt; {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final Map&lt;K,
V&gt; mappedResults;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final String
mapKey;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
ObjectFactory objectFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
ObjectWrapperFactory objectWrapperFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
ReflectorFactory reflectorFactory;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'> 
@SuppressWarnings(&quot;unchecked&quot;)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
DefaultMapResultHandler(String mapKey, ObjectFactory objectFactory,
ObjectWrapperFactory objectWrapperFactory, ReflectorFactory reflectorFactory) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.objectFactory =
objectFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
this.objectWrapperFactory = objectWrapperFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.reflectorFactory =
reflectorFactory;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.mappedResults =
objectFactory.create(Map.class);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.mapKey = mapKey;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public void
handleResult(ResultContext&lt;? extends V&gt; context) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final V value =
context.getResultObject();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final MetaObject mo =
MetaObject.forObject(value, objectFactory, objectWrapperFactory,
reflectorFactory);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    // TODO is that
assignment always true?</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final K key = (K)
mo.getValue(mapKey);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    mappedResults.put(key,
value);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session.defaults.
DefaultSqlSession</span><span style='font-family:宋体;color:black;background:
white'>示例</span><span lang=EN-US style='color:black;background:white'>selectMap</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public &lt;K, V&gt;
Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey,
RowBounds rowBounds) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final List&lt;? extends
V&gt; list = selectList(statement, parameter, rowBounds);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final
DefaultMapResultHandler&lt;K, V&gt; mapResultHandler = new
DefaultMapResultHandler&lt;&gt;(mapKey,</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            configuration.getObjectFactory(),
configuration.getObjectWrapperFactory(), configuration.getReflectorFactory());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final
DefaultResultContext&lt;V&gt; context = new DefaultResultContext&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    for (V o : list) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
context.nextResultObject(o);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      mapResultHandler.handleResult(context);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return
mapResultHandler.getMappedResults();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397699"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>cache</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397700"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>5.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>cache</span></a></h3>

<p class=MsoNormal><span lang=EN-US><img border=0 width=915 height=740 id="图片 2"
src="mybatis.files/image002.gif" alt=Mybatis缓存机制></span><span lang=EN-US>ss</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public interface Cache {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  String getId();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void putObject(Object key,
Object value);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  Object getObject(Object
key);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  Object removeObject(Object
key);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  void clear();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  int getSize();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  default ReadWriteLock
getReadWriteLock() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397701"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>5.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>CacheKey</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.cache .CacheKey</span><span
style='font-family:宋体;color:black;background:white'>内容</span></p>

<p class=COR-><span lang=EN-US style='color:black'>private List&lt;Object&gt;
updateList;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public CacheKey() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.hashcode =
DEFAULT_HASHCODE;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.multiplier =
DEFAULT_MULTIPLYER;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.count = 0;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.updateList = new
ArrayList&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397702"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>5.3 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>TransactionalCacheManager</span></a></h3>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.cache.TransactionalCacheManager
</span><span style='font-family:宋体;color:black;background:white'>使用</span><span
lang=EN-US style='color:black;background:white'>Map</span><span
style='font-family:宋体;color:black;background:white'>作为缓存</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
TransactionalCacheManager {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;Cache, TransactionalCache&gt; transactionalCaches = new
HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;font-family:"Calibri",sans-serif'>5.4 </span><span lang=EN-US
style='font-size:12.0pt;font-family:"Calibri",sans-serif'> <a
name="_Toc127397703">CachingExecutor</a></span></h3>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.session. Configuration</span><span
style='font-family:宋体;color:black;background:white'>配置中</span><span lang=EN-US
style='color:black;background:white'>cacheEnabled</span><span style='font-family:
宋体;color:black;background:white'>存在时候开始使用二级缓存</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Executor
newExecutor(Transaction transaction, ExecutorType executorType) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    executorType =
executorType == null ? defaultExecutorType : executorType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    executorType =
executorType == null ? ExecutorType.SIMPLE : executorType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Executor executor;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (ExecutorType.BATCH
== executorType) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      executor = new
BatchExecutor(this, transaction);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } else if
(ExecutorType.REUSE == executorType) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      executor = new
ReuseExecutor(this, transaction);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      executor = new
SimpleExecutor(this, transaction);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (cacheEnabled) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      executor = new
CachingExecutor(executor);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    executor = (Executor)
interceptorChain.pluginAll(executor);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return executor;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.executor. CachingExecutor</span><span
style='font-family:宋体;color:black;background:white'>是缓存使用二级缓存》一级缓存</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public &lt;E&gt;
List&lt;E&gt; query(MappedStatement ms, Object parameterObject, RowBounds
rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws SQLException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Cache cache =
ms.getCache();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (cache != null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
flushCacheIfRequired(ms);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      if (ms.isUseCache()
&amp;&amp; resultHandler == null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
ensureNoOutParams(ms, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
@SuppressWarnings(&quot;unchecked&quot;)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        List&lt;E&gt; list =
(List&lt;E&gt;) tcm.getObject(cache, key);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        if (list == null) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          list =
delegate.query(ms, parameterObject, rowBounds, resultHandler, key, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>         
tcm.putObject(cache, key, list); // issue #578 and #116</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        return list;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return
delegate.query(ms, parameterObject, rowBounds, resultHandler, key, boundSql);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397704"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>reflection</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397705"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>6.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>Invoker</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>6.1.1 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>MethodInvoker</span></h4>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.reflection MethodInvoker</span><span
style='font-family:宋体;color:black;background:white'>主要内容</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class MethodInvoker
implements Invoker {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Class&lt;?&gt; type;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final Method
method;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
MethodInvoker(Method method) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.method = method;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if
(method.getParameterTypes().length == 1) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      type =
method.getParameterTypes()[0];</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      type =
method.getReturnType();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Object
invoke(Object target, Object[] args) throws IllegalAccessException,
InvocationTargetException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return
method.invoke(target, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch (IllegalAccessException
e) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      if
(Reflector.canControlMemberAccessible()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
method.setAccessible(true);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        return
method.invoke(target, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        throw e;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Class&lt;?&gt;
getType() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return type;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>6.1.2 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>GetFieldInvoker</span></h4>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.reflection. GetFieldInvoker</span><span
style='font-family:宋体;color:black;background:white'>主要内容</span></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p class=COR-><span lang=EN-US style='color:black'>public class GetFieldInvoker
implements Invoker {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final Field field;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
GetFieldInvoker(Field field) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.field = field;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Object
invoke(Object target, Object[] args) throws IllegalAccessException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      return
field.get(target);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch
(IllegalAccessException e) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      if
(Reflector.canControlMemberAccessible()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        field.setAccessible(true);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        return
field.get(target);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        throw e;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Class&lt;?&gt;
getType() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return field.getType();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US style='font-size:
12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>6.1.3 </span><span
lang=EN-US style='font-size:12.0pt;line-height:155%;font-family:"Calibri",sans-serif'>SetFieldInvoker</span></h4>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.reflection. GetFieldInvoker</span><span
style='font-family:宋体;color:black;background:white'>主要内容</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class SetFieldInvoker
implements Invoker {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final Field field;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
SetFieldInvoker(Field field) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.field = field;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Object
invoke(Object target, Object[] args) throws IllegalAccessException {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      field.set(target,
args[0]);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch
(IllegalAccessException e) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      if
(Reflector.canControlMemberAccessible()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
field.setAccessible(true);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        field.set(target,
args[0]);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        throw e;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Class&lt;?&gt;
getType() {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return field.getType();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><u><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'><span style='text-decoration:none'>&nbsp;</span></span></u></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397706"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>6.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>Reflector</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.reflection Reflector</span><span
style='font-family:宋体;color:black;background:white'>主要内容</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class Reflector {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Class&lt;?&gt; type;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final String[] readablePropertyNames;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final String[]
writablePropertyNames;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;String, Invoker&gt; setMethods = new HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;String, Invoker&gt; getMethods = new HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;String, Class&lt;?&gt;&gt; setTypes = new HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;String, Class&lt;?&gt;&gt; getTypes = new HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
Constructor&lt;?&gt; defaultConstructor;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Map&lt;String,
String&gt; caseInsensitivePropertyMap = new HashMap&lt;&gt;();</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
Reflector(Class&lt;?&gt; clazz) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    type = clazz;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>   
addDefaultConstructor(clazz);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    addGetMethods(clazz);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    addSetMethods(clazz);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    addFields(clazz);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    readablePropertyNames =
getMethods.keySet().toArray(new String[0]);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    writablePropertyNames =
setMethods.keySet().toArray(new String[0]);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    for (String propName :
readablePropertyNames) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
caseInsensitivePropertyMap.put(propName.toUpperCase(Locale.ENGLISH), propName);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    for (String propName :
writablePropertyNames) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
caseInsensitivePropertyMap.put(propName.toUpperCase(Locale.ENGLISH), propName);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas'>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397707"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>binding</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397708"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>7.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>MapperProxy</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.binding. MapperProxy</span><span
style='font-family:宋体;color:black;background:white'>反射</span><span lang=EN-US
style='color:black;background:white'>MapperMethod</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt;color:black;
background:white'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
MapperProxy&lt;T&gt; implements InvocationHandler, Serializable {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private static final long
serialVersionUID = -6424540398559729838L;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final SqlSession
sqlSession;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Class&lt;T&gt; mapperInterface;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;Method, MapperMethod&gt; methodCache;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
MapperProxy(SqlSession sqlSession, Class&lt;T&gt; mapperInterface,
Map&lt;Method, MapperMethod&gt; methodCache) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.sqlSession =
sqlSession;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.mapperInterface =
mapperInterface;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.methodCache =
methodCache;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  @Override</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Object
invoke(Object proxy, Method method, Object[] args) throws Throwable {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    try {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      if
(Object.class.equals(method.getDeclaringClass())) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        return
method.invoke(this, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      } else if
(method.isDefault()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        return
invokeDefaultMethod(proxy, method, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    } catch (Throwable t) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throw
ExceptionUtil.unwrapThrowable(t);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final MapperMethod
mapperMethod = cachedMapperMethod(method);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return
mapperMethod.execute(sqlSession, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private MapperMethod
cachedMapperMethod(Method method) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return
methodCache.computeIfAbsent(method, k -&gt; new MapperMethod(mapperInterface,
method, sqlSession.getConfiguration()));</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Object
invokeDefaultMethod(Object proxy, Method method, Object[] args)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throws Throwable {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final Constructor&lt;MethodHandles.Lookup&gt;
constructor = MethodHandles.Lookup.class</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
.getDeclaredConstructor(Class.class, int.class);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if
(!constructor.isAccessible()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>     
constructor.setAccessible(true);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    final Class&lt;?&gt;
declaringClass = method.getDeclaringClass();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return constructor</span></p>

<p class=COR-><span lang=EN-US style='color:black'>       
.newInstance(declaringClass,</span></p>

<p class=COR-><span lang=EN-US style='color:black'>           
MethodHandles.Lookup.PRIVATE | MethodHandles.Lookup.PROTECTED</span></p>

<p class=COR-><span lang=EN-US style='color:black'>                |
MethodHandles.Lookup.PACKAGE | MethodHandles.Lookup.PUBLIC)</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        .unreflectSpecial(method,
declaringClass).bindTo(proxy).invokeWithArguments(args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397709"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>7.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>MapperMethod</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.binding. MapperMethod</span><span
style='font-family:宋体;color:black;background:white'>执行</span><span lang=EN-US
style='color:black;background:white'>execute </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class MapperMethod {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final SqlCommand
command;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
MethodSignature method;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public
MapperMethod(Class&lt;?&gt; mapperInterface, Method method, Configuration
config) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.command = new
SqlCommand(config, mapperInterface, method);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    this.method = new
MethodSignature(config, mapperInterface, method);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  public Object execute(SqlSession
sqlSession, Object[] args) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    Object result;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    switch
(command.getType()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case INSERT: {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        Object param =
method.convertArgsToSqlCommandParam(args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        result =
rowCountResult(sqlSession.insert(command.getName(), param));</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case UPDATE: {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        Object param =
method.convertArgsToSqlCommandParam(args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        result =
rowCountResult(sqlSession.update(command.getName(), param));</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case DELETE: {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        Object param =
method.convertArgsToSqlCommandParam(args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        result =
rowCountResult(sqlSession.delete(command.getName(), param));</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case SELECT:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        if
(method.returnsVoid() &amp;&amp; method.hasResultHandler()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          executeWithResultHandler(sqlSession,
args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          result = null;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        } else if
(method.returnsMany()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          result =
executeForMany(sqlSession, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        } else if
(method.returnsMap()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          result =
executeForMap(sqlSession, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        } else if
(method.returnsCursor()) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          result =
executeForCursor(sqlSession, args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        } else {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          Object param =
method.convertArgsToSqlCommandParam(args);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          result =
sqlSession.selectOne(command.getName(), param);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          if
(method.returnsOptional()</span></p>

<p class=COR-><span lang=EN-US style='color:black'>              &amp;&amp;
(result == null || !method.getReturnType().equals(result.getClass()))) {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>            result =
Optional.ofNullable(result);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      case FLUSH:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        result = sqlSession.flushStatements();</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        break;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      default:</span></p>

<p class=COR-><span lang=EN-US style='color:black'>        throw new
BindingException(&quot;Unknown execution method for: &quot; +
command.getName());</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    if (result == null
&amp;&amp; method.getReturnType().isPrimitive() &amp;&amp; !method.returnsVoid())
{</span></p>

<p class=COR-><span lang=EN-US style='color:black'>      throw new
BindingException(&quot;Mapper method '&quot; + command.getName()</span></p>

<p class=COR-><span lang=EN-US style='color:black'>          + &quot; attempted
to return null from a method with a primitive return type (&quot; +
method.getReturnType() + &quot;).&quot;);</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    }</span></p>

<p class=COR-><span lang=EN-US style='color:black'>    return result;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  }</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397710"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>mapping</span></a></h2>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397711"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>8.1 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>BoundSql</span></a></h3>

<p class=MsoNormal><b><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'>&nbsp;</span></b></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.mapping. BoundSql</span><span
style='font-family:宋体;color:black;background:white'>内容</span><span
style='color:black;background:white'> </span></p>

<p class=MsoNormal><b><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'>&nbsp;</span></b></p>

<p class=COR-><span lang=EN-US style='color:black'>public class BoundSql {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final String sql;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
List&lt;ParameterMapping&gt; parameterMappings;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final Object
parameterObject;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final
Map&lt;String, Object&gt; additionalParameters;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private final MetaObject
metaParameters;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyTextFirstIndent style='text-indent:10.5pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397712"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>8.2 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>MappedStatement</span></a></h3>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.mapping. MappedStatement</span><span
style='font-family:宋体;color:black;background:white'>执行内容</span></p>

<p class=MsoNormal><b><span lang=EN-US style='font-size:14.0pt;font-family:
Consolas;color:black;background:#E8F2FE'>&nbsp;</span></b></p>

<p class=COR-><span lang=EN-US style='color:black'>public final class
MappedStatement {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String resource;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Configuration
configuration;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String id;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Integer fetchSize;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Integer timeout;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private StatementType
statementType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private ResultSetType
resultSetType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private SqlSource
sqlSource;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Cache cache;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private ParameterMap
parameterMap;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultMap&gt; resultMaps;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean
flushCacheRequired;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean useCache;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean
resultOrdered;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private SqlCommandType
sqlCommandType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private KeyGenerator
keyGenerator;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String[]
keyProperties;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String[]
keyColumns;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean
hasNestedResultMaps;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String databaseId;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Log statementLog;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private LanguageDriver
lang;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String[]
resultSets;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas;color:black'>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397713"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>8.3 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>ParameterMapping</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-US style='font-size:14.0pt;font-family:Consolas'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.mapping. ParameterMapping</span><span
style='font-family:宋体;color:black;background:white'>内容</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class
ParameterMapping {</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Configuration
configuration;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String property;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private ParameterMode
mode;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Class&lt;?&gt;
javaType = Object.class;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private JdbcType jdbcType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Integer
numericScale;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
TypeHandler&lt;?&gt; typeHandler;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String
resultMapId;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String
jdbcTypeName;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String expression;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.mapping. ParameterMap</span><span
style='font-family:宋体;color:black;background:white'>内容</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class ParameterMap {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String id;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Class&lt;?&gt;
type;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ParameterMapping&gt; parameterMappings;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397714"><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>8.4 </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Calibri",sans-serif'>ResultMapping</span></a></h3>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.mapping. ResultMapping</span><span
style='font-family:宋体;color:black;background:white'>内容</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>public class ResultMapping {</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Configuration
configuration;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String property;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String column;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Class&lt;?&gt;
javaType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private JdbcType jdbcType;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
TypeHandler&lt;?&gt; typeHandler;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String
nestedResultMapId;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String
nestedQueryId;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Set&lt;String&gt;
notNullColumns;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String
columnPrefix;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultFlag&gt; flags;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultMapping&gt; composites;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String resultSet;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String
foreignColumn;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean lazy;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>org.apache.ibatis.mapping. ResultMap</span><span
style='font-family:宋体;color:black;background:white'>内容</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='font-size:14.0pt;font-family:Consolas;
color:black'>  </span><span lang=EN-US style='color:black'>private
Configuration configuration;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private String id;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Class&lt;?&gt;
type;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultMapping&gt; resultMappings;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultMapping&gt; idResultMappings;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultMapping&gt; constructorResultMappings;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private
List&lt;ResultMapping&gt; propertyResultMappings;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Set&lt;String&gt;
mappedColumns;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Set&lt;String&gt;
mappedProperties;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Discriminator
discriminator;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean
hasNestedResultMaps;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private boolean hasNestedQueries;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>  private Boolean
autoMapping;</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=COR-><span lang=EN-US style='color:black'>}</span></p>

<p class=COR-><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><a name="_Toc127397715"><span
lang=EN-US style='font-size:12.0pt;line-height:172%;font-family:"Calibri",sans-serif'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;line-height:172%;font-family:黑体'>参考文献</span></a></h2>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>Mybatis</span><span
style='font-family:宋体;color:black;background:white'>官网</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US><a href="https://blog.mybatis.org/p/about.html"><span
style='color:black;background:white;text-decoration:none'>https://blog.mybatis.org/p/about.html</span></a></span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>Mybatis</span><span
style='font-family:宋体;color:black;background:white'>二级缓存</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US><a href="https://blog.csdn.net/qq_39470742/article/details/88600176"><span
style='color:black;text-decoration:none'>https://blog.csdn.net/qq_39470742/article/details/88600176</span></a></span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>Mybatis</span><span
style='font-family:宋体;color:black;background:white'>基本原理</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US><a href="https://segmentfault.com/a/1190000041688841"><span
style='color:black;background:white;text-decoration:none'>https://segmentfault.com/a/1190000041688841</span></a></span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>Mybatis sqlsession</span><span
style='font-family:宋体;color:black;background:white'>流程</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>https://blog.csdn.net/javalingyu/article/details/124504454</span></p>

<p style='margin-top:14.4pt;text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='color:black;background:white'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>&nbsp;</span></p>

</div>

</body>

</html>
