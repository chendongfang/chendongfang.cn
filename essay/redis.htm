<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>redis-CHEN DONGFANG</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:"Tms Rmn";
	panose-1:2 2 6 3 4 5 5 2 3 4;}
@font-face
	{font-family:Helv;
	panose-1:2 11 6 4 2 2 2 3 2 4;}
@font-face
	{font-family:"New York";
	panose-1:2 4 5 3 6 5 6 2 3 4;}
@font-face
	{font-family:System;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:Batang;
	panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 1 6 1 0 1 1 1 1 1;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
	{font-family:Dotum;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:MingLiU;
	panose-1:2 1 6 9 0 1 1 1 1 1;}
@font-face
	{font-family:Mincho;
	panose-1:2 2 6 9 4 3 5 8 3 5;}
@font-face
	{font-family:Gulim;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:"Angsana New";
	panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
	{font-family:"Cordia New";
	panose-1:2 11 3 4 2 2 2 2 2 4;}
@font-face
	{font-family:Mangal;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Latha;
	panose-1:2 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sylfaen;
	panose-1:1 10 5 2 5 3 6 3 3 3;}
@font-face
	{font-family:Vrinda;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Raavi;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Shruti;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sendnya;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Gautami;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Tunga;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Estrangelo Edessa";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Yu Gothic";
	panose-1:2 11 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:等线;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Palatino Linotype";
	panose-1:2 4 5 2 5 5 5 3 3 4;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"等线 Light";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"Segoe UI Emoji";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:微软雅黑;
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
h1
	{margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:240%;
	page-break-after:avoid;
	font-size:22.0pt;
	font-family:"Calibri",sans-serif;}
h2
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:172%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Arial",sans-serif;}
h3
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:172%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Calibri",sans-serif;}
h4
	{margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:155%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial",sans-serif;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:63.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri",sans-serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#954F72;
	text-decoration:underline;}
p.WPSOffice1, li.WPSOffice1, div.WPSOffice1
	{mso-style-name:"WPSOffice手动目录 1";
	margin:0cm;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
p.WPSOffice2, li.WPSOffice2, div.WPSOffice2
	{mso-style-name:"WPSOffice手动目录 2";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
p.WPSOffice3, li.WPSOffice3, div.WPSOffice3
	{mso-style-name:"WPSOffice手动目录 3";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:20.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
span.msoIns
	{mso-style-name:"";
	text-decoration:underline;
	color:teal;}
span.msoDel
	{mso-style-name:"";
	text-decoration:line-through;
	color:red;}
.MsoChpDefault
	{font-size:10.0pt;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	layout-grid:15.6pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN link=blue vlink="#954F72" style='word-wrap:break-word;
text-justify-trim:punctuation'>

<div class=WordSection1 style='layout-grid:15.6pt'>

<h1 align=center style='text-align:center'><a name="_Toc11665"><span
lang=EN-US style='font-family:"Arial",sans-serif'>Redis</span></a></h1>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-family:宋体'>目录</span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc11665"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Redis</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc20860"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>1. version</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc695"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>2. Struct</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc10112"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.1. </span><span style='color:windowtext;
text-decoration:none'>Client</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc8555"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.2. </span><span style='color:windowtext;
text-decoration:none'>Redisdb</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc1480"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.3. </span><span style='color:windowtext;
text-decoration:none'>Dict</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc390"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.4. </span><span style='color:windowtext;
text-decoration:none'>dictEntry</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc30265"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.5. </span><span style='color:windowtext;
text-decoration:none'>dictType</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc30981"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.6. </span><span style='color:windowtext;
text-decoration:none'>redisObject</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc17380"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>2.7. </span><span style='color:windowtext;
text-decoration:none'>sds</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc18353"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>3. Data</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc13436"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1. </span><span style='color:windowtext;
text-decoration:none'>String</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc21816"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>&nbsp;set</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc3734"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>get</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc23799"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.1.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>del</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc23252"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2. </span><span style='color:windowtext;
text-decoration:none'>Hash</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc23796"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>create</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc32608"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>set</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc2532"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>get</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc4209"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.2.4. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>del</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc22578"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.3. </span><span style='color:windowtext;
text-decoration:none'>List</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc17829"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.3.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>create</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc27229"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.3.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Set</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc17266"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.3.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Get</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc30505"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.3.4. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Del</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc8460"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.4. </span><span style='color:windowtext;
text-decoration:none'>Set</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc3705"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.4.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>create</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc5732"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.4.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Add</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc6597"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.4.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Rem</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc23338"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.4.4. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Member</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc7570"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.5. </span><span style='color:windowtext;
text-decoration:none'>zset</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc18181"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.5.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Create</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc11093"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.5.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Add</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc1115"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.5.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Get</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc12188"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.6. </span><span style='color:windowtext;
text-decoration:none'>Stream</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc29262"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.6.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>stream</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc26244"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.6.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Create</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc30704"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.6.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Add</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc20662"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.6.4. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>XREADGROUP</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc22961"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>3.6.5. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>ack</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc5514"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>4. Algorithm</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc27536"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.1. </span><span style='color:windowtext;
text-decoration:none'>list</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc25343"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.1.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>quicklist</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc3488"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.2. </span><span style='color:windowtext;
text-decoration:none'>hash</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc8867"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.2.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>listpack</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc3544"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.2.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>skip</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc21163"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.3. </span><span style='color:windowtext;
text-decoration:none'>zset</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc8526"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.3.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>zskiplist</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc3264"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>4.3.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Zset</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc30789"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>5. Pipeline</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc20566"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>6. keyspace
notifications</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc19385"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>7. Pub/sub</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc5245"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.1. </span><span style='color:windowtext;
text-decoration:none'>list</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc30804"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.2. </span><span style='color:windowtext;
text-decoration:none'>pub</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc1431"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.3. </span><span style='color:windowtext;
text-decoration:none'>sub</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc6632"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>8. db</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc13652"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.1. </span><span style='color:windowtext;
text-decoration:none'>replication</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc29671"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.1.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>sync</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc30681"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.1.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>replication</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc5745"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.2. </span><span style='color:windowtext;
text-decoration:none'>Rdb</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc16144"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.2.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>rio</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc27883"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.2.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Savedb</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc3430"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.2.3. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>file</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc2623"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.3. </span><span style='color:windowtext;
text-decoration:none'>Aof</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc9092"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.3.1. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>Append</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc26680"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>8.3.2. </span><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>file</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc26821"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>9. thread</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc14994"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>9.1. </span><span style='color:windowtext;
text-decoration:none'>Event</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc19580"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>9.2. </span><span style='color:windowtext;
text-decoration:none'>Io thread</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc15288"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>10. HA</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc3654"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.1. </span><span style='color:windowtext;
text-decoration:none'>Sentinel</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc18503"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.1.1. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Ping</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc3572"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.1.2. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Select</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc1996"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.1.3. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Salveof</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc2011"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2. </span><span style='color:windowtext;
text-decoration:none'>Cluster</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc5210"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.1. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Cluster
node</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc2184"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.2. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Cluster
link</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc24555"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.3. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Cluster
state</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc31529"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.4. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Gossip</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc19881"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.5. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Msg</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc4140"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.6. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Slot</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc26253"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.7. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Corn</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc26079"><span style='font-family:
宋体;color:windowtext;text-decoration:none'>10.2.8. </span><span
style='font-family:"Arial",sans-serif;color:windowtext;text-decoration:none'>Query
node&amp;move</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc3067"><span style='font-family:
"Arial",sans-serif;color:windowtext;text-decoration:none'>11. References</span></a></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc20860"><span
lang=EN-US style='font-family:"Arial",sans-serif'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>version</span></a></h1>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>redis-7.0.8</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc695"><span lang=EN-US
style='font-family:"Arial",sans-serif'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Struct</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc10112"><span
lang=EN-US style='font-family:宋体'>2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Client</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct client {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t id;            /* Client incremental unique ID. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t flags;         /* Client flags: CLIENT_* macros. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    connection *conn;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int resp;               /* RESP protocol version. Can be 2 or
3. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    redisDb *db;            /* Pointer to currently SELECTed DB.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *name;             /* As set by CLIENT SETNAME. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds querybuf;           /* Buffer we use to accumulate client
queries. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t qb_pos;          /* The position we have read in
querybuf. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t querybuf_peak;   /* Recent (100ms or more) peak of
querybuf size. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int argc;               /* Num of arguments of current
command. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj **argv;            /* Arguments of current command. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int argv_len;           /* Size of argv array (may be more
than argc) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int original_argc;      /* Num of arguments of original
command if arguments were rewritten. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj **original_argv;   /* Arguments of original command if
arguments were rewritten. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t argv_len_sum;    /* Sum of lengths of objects in argv
list. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct redisCommand *cmd, *lastcmd;  /* Last command executed.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct redisCommand *realcmd; /* The original command that was
executed by the client,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                     Used to update error stats in
case the c-&gt;cmd was modified</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                     during the command invocation
(like on GEOADD for example). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    user *user;             /* User associated with this
connection. If the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                               user is set to NULL the connection
can do</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                               anything (admin). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int reqtype;            /* Request protocol type: PROTO_REQ_*
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int multibulklen;       /* Number of multi bulk arguments left
to read. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long bulklen;           /* Length of bulk argument in multi
bulk request. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *reply;            /* List of reply objects to send to
the client. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long long reply_bytes; /* Tot bytes of objects in
reply list. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *deferred_reply_errors;    /* Used for module thread safe
contexts. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t sentlen;         /* Amount of bytes already sent in the
current</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                               buffer or object being sent. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    time_t ctime;           /* Client creation time. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long duration;          /* Current command duration. Used for
measuring latency of blocking/non-blocking cmds */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int slot;               /* The slot the client is executing
against. Set to -1 if no slot is being used */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictEntry *cur_script;  /* Cached pointer to the dictEntry of
the script being executed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    time_t lastinteraction; /* Time of the last interaction, used
for timeout */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    time_t obuf_soft_limit_reached_time;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int authenticated;      /* Needed when the default user
requires auth. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int replstate;          /* Replication state if this is a
slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int repl_start_cmd_stream_on_ack; /* Install slave write
handler on first ACK. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int repldbfd;           /* Replication DB file descriptor. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    off_t repldboff;        /* Replication DB file offset. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    off_t repldbsize;       /* Replication DB file size. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds replpreamble;       /* Replication DB preamble. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long read_reploff; /* Read replication offset if this is
a master. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long reploff;      /* Applied replication offset if this
is a master. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long repl_applied; /* Applied replication data count in
querybuf, if this is a replica. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long repl_ack_off; /* Replication ack offset, if this is
a slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long repl_ack_time;/* Replication ack time, if this is a
slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long repl_last_partial_write; /* The last time the server
did a partial write from the RDB child pipe to this replica  */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long psync_initial_offset; /* FULLRESYNC reply offset
other slaves</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       copying this slave output
buffer</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       should use. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char replid[CONFIG_RUN_ID_SIZE+1]; /* Master replication ID
(if master). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int slave_listening_port; /* As configured with: REPLCONF
listening-port */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char *slave_addr;       /* Optionally given by REPLCONF
ip-address */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int slave_capa;         /* Slave capabilities: SLAVE_CAPA_*
bitwise OR. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int slave_req;          /* Slave requirements: SLAVE_REQ_* */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    multiState mstate;      /* MULTI/EXEC state */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int btype;              /* Type of blocking op if
CLIENT_BLOCKED. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    blockingState bpop;     /* blocking state */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long woff;         /* Last write global replication
offset. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *watched_keys;     /* Keys WATCHED for MULTI/EXEC CAS */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *pubsub_channels;  /* channels a client is interested in
(SUBSCRIBE) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *pubsub_patterns;  /* patterns a client is interested in
(SUBSCRIBE) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *pubsubshard_channels;  /* shard level channels a client
is interested in (SSUBSCRIBE) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds peerid;             /* Cached peer ID. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds sockname;           /* Cached connection target address.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *client_list_node; /* list node in client list */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *postponed_list_node; /* list node within the
postponed list */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *pending_read_list_node; /* list node in clients
pending read list */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    RedisModuleUserChangedFunc auth_callback; /* Module callback
to execute</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                               * when the
authenticated user</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                               * changes. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *auth_callback_privdata; /* Private data that is passed
when the auth</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   * changed callback is executed.
Opaque for</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   * Redis Core. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *auth_module;      /* The module that owns the callback,
which is used</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                             * to disconnect the client if the
module is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                             * unloaded for cleanup. Opaque for
Redis Core.*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If this client is in tracking mode and this field is non
zero,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * invalidation messages for keys fetched by this client will
be send to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the specified client ID. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t client_tracking_redirection;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    rax *client_tracking_prefixes; /* A dictionary of prefixes we
are already</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                      subscribed to in BCAST mode,
in the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                      context of client side
caching. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* In updateClientMemoryUsage() we track the memory usage of</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * each client and add it to the sum of all the clients of a
given type,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * however we need to remember what was the old contribution
of each</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * client, and in which category the client was, in order to
remove it</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * before adding it the new value. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t last_memory_usage;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int last_memory_type;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *mem_usage_bucket_node;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clientMemUsageBucket *mem_usage_bucket;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *ref_repl_buf_node; /* Referenced node of replication
buffer blocks,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                  * see the definition of
replBufBlock. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t ref_block_pos;        /* Access position of referenced
buffer block,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                  * i.e. the next offset to send.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Response buffer */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t buf_peak; /* Peak used size of buffer in last 5 sec
interval. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t buf_peak_last_reset_time; /* keeps the last time the
buffer peak value was reset */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int bufpos;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t buf_usable_size; /* Usable size of buffer. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char *buf;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} client;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc8555"><span
lang=EN-US style='font-family:宋体'>2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Redisdb</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct redisDb {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *dict;                 /* The keyspace for this DB */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *expires;              /* Timeout of keys with a timeout
set */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *blocking_keys;        /* Keys with clients waiting for
data (BLPOP)*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *ready_keys;           /* Blocked keys that received a
PUSH */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *watched_keys;         /* WATCHED keys for MULTI/EXEC CAS
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int id;                     /* Database ID */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long avg_ttl;          /* Average TTL, just for stats */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long expires_cursor; /* Cursor of the active expire
cycle. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *defrag_later;         /* List of key names to attempt to
defrag one by one, gradually. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterSlotToKeyMapping *slots_to_keys; /* Array of slots to
keys. Only used in cluster mode (db 0). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} redisDb;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc1480"><span
lang=EN-US style='font-family:宋体'>2.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Dict</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct dict {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictEntry **table;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictType *type;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long size;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long sizemask;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long used;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *privdata;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} dict;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc390"><span
lang=EN-US style='font-family:宋体'>2.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>dictEntry</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct dictEntry {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *key;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *val;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct dictEntry *next;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} dictEntry;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc30265"><span
lang=EN-US style='font-family:宋体'>2.5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>dictType</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct dictType {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned int (*hashFunction)(const void *key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *(*keyDup)(void *privdata, const void *key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *(*valDup)(void *privdata, const void *obj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int (*keyCompare)(void *privdata, const void *key1, const void
*key2);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void (*keyDestructor)(void *privdata, void *key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void (*valDestructor)(void *privdata, void *obj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} dictType;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc30981"><span
lang=EN-US style='font-family:宋体'>2.6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>redisObject</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct redisObject {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned type:4;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned encoding:4;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned lru:LRU_BITS; /* LRU time (relative to global
lru_clock) or</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            * LFU data (least significant 8 bits
frequency</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            * and most significant 16 bits access
time). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int refcount;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} robj;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc17380"><span
lang=EN-US style='font-family:宋体'>2.7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>sds</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef char *sds;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc18353"><span
lang=EN-US style='font-family:"Arial",sans-serif'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Data</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc13436"><span
lang=EN-US style='font-family:宋体'>3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>String</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc21816"><span
lang=EN-US style='font-family:宋体'>3.1.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;set</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void setGenericCommand(client *c, int flags, robj *key, robj *val,
robj *expire, int unit, robj *ok_reply, robj *abort_reply) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long milliseconds = 0; /* initialized to avoid any
harmness warning */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int found = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int setkey_flags = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (expire &amp;&amp; getExpireMillisecondsOrReply(c, expire,
flags, unit, &amp;milliseconds) != C_OK) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (flags &amp; OBJ_SET_GET) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (getGenericCommand(c) == C_ERR) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    found = (lookupKeyWrite(c-&gt;db,key) != NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((flags &amp; OBJ_SET_NX &amp;&amp; found) ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        (flags &amp; OBJ_SET_XX &amp;&amp; !found))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!(flags &amp; OBJ_SET_GET)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReply(c, abort_reply ? abort_reply :
shared.null[c-&gt;resp]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    setkey_flags |= (flags &amp; OBJ_KEEPTTL) ? SETKEY_KEEPTTL :
0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    setkey_flags |= found ? SETKEY_ALREADY_EXIST :
SETKEY_DOESNT_EXIST;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    setKey(c,c-&gt;db,key,val,setkey_flags);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>   
notifyKeyspaceEvent(NOTIFY_STRING,&quot;set&quot;,key,c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (expire) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        setExpire(c,c-&gt;db,key,milliseconds);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Propagate as SET Key Value PXAT millisecond-timestamp
if there is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * EX/PX/EXAT/PXAT flag. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj *milliseconds_obj =
createStringObjectFromLongLong(milliseconds);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        rewriteClientCommandVector(c, 5, shared.set, key, val,
shared.pxat, milliseconds_obj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        decrRefCount(milliseconds_obj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
notifyKeyspaceEvent(NOTIFY_GENERIC,&quot;expire&quot;,key,c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!(flags &amp; OBJ_SET_GET)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReply(c, ok_reply ? ok_reply : shared.ok);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Propagate without the GET argument (Isn't needed if we had
expire since in that case we completely re-written the command argv) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((flags &amp; OBJ_SET_GET) &amp;&amp; !expire) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int argc = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj **argv = zmalloc((c-&gt;argc-1)*sizeof(robj*));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        for (j=0; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            char *a = c-&gt;argv[j]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Skip GET which may be repeated multiple times. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (j &gt;= 3 &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                (a[0] == 'g' || a[0] == 'G') &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                (a[1] == 'e' || a[1] == 'E') &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                (a[2] == 't' || a[2] == 'T') &amp;&amp; a[3] ==
'\0')</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            argv[argc++] = c-&gt;argv[j];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            incrRefCount(c-&gt;argv[j]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        replaceClientCommandVector(c, argc, argv);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc3734"><span
lang=EN-US style='font-family:宋体'>3.1.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>get</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int getGenericCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((o = lookupKeyReadOrReply(c,c-&gt;argv[1],shared.null[c-&gt;resp]))
== NULL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return C_OK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (checkType(c,o,OBJ_STRING)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return C_ERR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyBulk(c,o);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return C_OK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc23799"><span
lang=EN-US style='font-family:宋体'>3.1.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>del</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void getdelCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (getGenericCommand(c) == C_ERR) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int deleted = server.lazyfree_lazy_user_del ?
dbAsyncDelete(c-&gt;db, c-&gt;argv[1]) :</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                  dbSyncDelete(c-&gt;db, c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (deleted) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Propagate as DEL/UNLINK command */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj *aux = server.lazyfree_lazy_user_del ? shared.unlink
: shared.del;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        rewriteClientCommandVector(c,2,aux,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        signalModifiedKey(c, c-&gt;db, c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        notifyKeyspaceEvent(NOTIFY_GENERIC, &quot;del&quot;,
c-&gt;argv[1], c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.dirty++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc23252"><span
lang=EN-US style='font-family:宋体'>3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Hash</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc23796"><span
lang=EN-US style='font-family:宋体'>3.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>create</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>robj *createHashObject(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char *zl = lpNew(0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o = createObject(OBJ_HASH, zl);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    o-&gt;encoding = OBJ_ENCODING_LISTPACK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc32608"><span
lang=EN-US style='font-family:宋体'>3.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>set</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void hsetCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int i, created = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((c-&gt;argc % 2) == 1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyErrorArity(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((o = hashTypeLookupWriteOrCreate(c,c-&gt;argv[1])) ==
NULL) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    hashTypeTryConversion(o,c-&gt;argv,2,c-&gt;argc-1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (i = 2; i &lt; c-&gt;argc; i += 2)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        created +=
!hashTypeSet(o,c-&gt;argv[i]-&gt;ptr,c-&gt;argv[i+1]-&gt;ptr,HASH_SET_COPY);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* HMSET (deprecated) and HSET return value is different. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char *cmdname = c-&gt;argv[0]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (cmdname[1] == 's' || cmdname[1] == 'S') {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* HSET */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyLongLong(c, created);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* HMSET */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReply(c, shared.ok);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    signalModifiedKey(c,c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>   
notifyKeyspaceEvent(NOTIFY_HASH,&quot;hset&quot;,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty += (c-&gt;argc - 2)/2;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc2532"><span
lang=EN-US style='font-family:宋体'>3.2.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>get</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void hgetCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((o =
lookupKeyReadOrReply(c,c-&gt;argv[1],shared.null[c-&gt;resp])) == NULL ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        checkType(c,o,OBJ_HASH)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addHashFieldToReply(c, o, c-&gt;argv[2]-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc4209"><span
lang=EN-US style='font-family:宋体'>3.2.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>del</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void hdelCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j, deleted = 0, keyremoved = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((o = lookupKeyWriteOrReply(c,c-&gt;argv[1],shared.czero))
== NULL ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        checkType(c,o,OBJ_HASH)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 2; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (hashTypeDelete(o,c-&gt;argv[j]-&gt;ptr)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            deleted++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (hashTypeLength(o) == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                dbDelete(c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                keyremoved = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (deleted) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        signalModifiedKey(c,c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
notifyKeyspaceEvent(NOTIFY_HASH,&quot;hdel&quot;,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (keyremoved)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
notifyKeyspaceEvent(NOTIFY_GENERIC,&quot;del&quot;,c-&gt;argv[1],</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.dirty += deleted;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyLongLong(c,deleted);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc22578"><span
lang=EN-US style='font-family:宋体'>3.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>List</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc17829"><span
lang=EN-US style='font-family:宋体'>3.3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>create</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>robj *createQuicklistObject(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist *l = quicklistCreate();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o = createObject(OBJ_LIST,l);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    o-&gt;encoding = OBJ_ENCODING_QUICKLIST;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc27229"><span
lang=EN-US style='font-family:宋体'>3.3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Set</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void pushGenericCommand(client *c, int where, int xx) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *lobj = lookupKeyWrite(c-&gt;db, c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (checkType(c,lobj,OBJ_LIST)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!lobj) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (xx) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReply(c, shared.czero);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        lobj = createQuicklistObject();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        quicklistSetOptions(lobj-&gt;ptr,
server.list_max_listpack_size,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            server.list_compress_depth);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dbAdd(c-&gt;db,c-&gt;argv[1],lobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 2; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listTypePush(lobj,c-&gt;argv[j],where);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.dirty++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyLongLong(c, listTypeLength(lobj));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char *event = (where == LIST_HEAD) ? &quot;lpush&quot; :
&quot;rpush&quot;;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    signalModifiedKey(c,c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    notifyKeyspaceEvent(NOTIFY_LIST,event,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc17266"><span
lang=EN-US style='font-family:宋体'>3.3.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Get</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void popGenericCommand(client *c, int where) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int hascount = (c-&gt;argc == 3);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long count = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (c-&gt;argc &gt; 3) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyErrorArity(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else if (hascount) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Parse the optional count argument. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if
(getPositiveLongFromObjectOrReply(c,c-&gt;argv[2],&amp;count,NULL) != C_OK) </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o = lookupKeyWriteOrReply(c, c-&gt;argv[1], hascount ?
shared.nullarray[c-&gt;resp]: shared.null[c-&gt;resp]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (o == NULL || checkType(c, o, OBJ_LIST))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (hascount &amp;&amp; !count) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Fast exit path. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReply(c,shared.emptyarray);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!count) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Pop a single element. This is POP's original behavior
that replies</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * with a bulk string. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        value = listTypePop(o,where);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverAssert(value != NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyBulk(c,value);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        decrRefCount(value);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listElementsRemoved(c,c-&gt;argv[1],where,o,1,NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Pop a range of elements. An addition to the original
POP command,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         *  which replies with a multi-bulk. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        long llen = listTypeLength(o);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        long rangelen = (count &gt; llen) ? llen : count;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        long rangestart = (where == LIST_HEAD) ? 0 : -rangelen;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        long rangeend = (where == LIST_HEAD) ? rangelen - 1 : -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int reverse = (where == LIST_HEAD) ? 0 : 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addListRangeReply(c,o,rangestart,rangeend,reverse);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listTypeDelRange(o,rangestart,rangelen);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
listElementsRemoved(c,c-&gt;argv[1],where,o,rangelen,NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc30505"><span
lang=EN-US style='font-family:宋体'>3.3.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Del</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void lmoveHandlePush(client *c, robj *dstkey, robj *dstobj, robj
*value,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                     int where) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Create the list if the key does not exist */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!dstobj) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dstobj = createQuicklistObject();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        quicklistSetOptions(dstobj-&gt;ptr,
server.list_max_listpack_size,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            server.list_compress_depth);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dbAdd(c-&gt;db,dstkey,dstobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    signalModifiedKey(c,c-&gt;db,dstkey);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listTypePush(dstobj,value,where);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    notifyKeyspaceEvent(NOTIFY_LIST,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        where == LIST_HEAD ? &quot;lpush&quot; :
&quot;rpush&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        dstkey,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Always send the pushed value to the client. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyBulk(c,value);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc8460"><span
lang=EN-US style='font-family:宋体'>3.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Set</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc3705"><span
lang=EN-US style='font-family:宋体'>3.4.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>create</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>robj
*createSetObject(void) {</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>   
dict *d = dictCreate(&amp;setDictType);</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>   
robj *o = createObject(OBJ_SET,d);</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>   
o-&gt;encoding = OBJ_ENCODING_HT;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>   
return o;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc5732"><span
lang=EN-US style='font-family:宋体'>3.4.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Add</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void saddCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *set;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j, added = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    set = lookupKeyWrite(c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (checkType(c,set,OBJ_SET)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (set == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        set = setTypeCreate(c-&gt;argv[2]-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dbAdd(c-&gt;db,c-&gt;argv[1],set);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 2; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (setTypeAdd(set,c-&gt;argv[j]-&gt;ptr)) added++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (added) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        signalModifiedKey(c,c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
notifyKeyspaceEvent(NOTIFY_SET,&quot;sadd&quot;,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty += added;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyLongLong(c,added);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc6597"><span
lang=EN-US style='font-family:宋体'>3.4.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Rem</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void sremCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *set;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j, deleted = 0, keyremoved = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((set =
lookupKeyWriteOrReply(c,c-&gt;argv[1],shared.czero)) == NULL ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        checkType(c,set,OBJ_SET)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 2; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (setTypeRemove(set,c-&gt;argv[j]-&gt;ptr)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            deleted++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (setTypeSize(set) == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                dbDelete(c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                keyremoved = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (deleted) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        signalModifiedKey(c,c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        notifyKeyspaceEvent(NOTIFY_SET,&quot;srem&quot;,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (keyremoved)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
notifyKeyspaceEvent(NOTIFY_GENERIC,&quot;del&quot;,c-&gt;argv[1],</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.dirty += deleted;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyLongLong(c,deleted);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc23338"><span
lang=EN-US style='font-family:宋体'>3.4.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Member</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void sismemberCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *set;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((set = lookupKeyReadOrReply(c,c-&gt;argv[1],shared.czero))
== NULL ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        checkType(c,set,OBJ_SET)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (setTypeIsMember(set,c-&gt;argv[2]-&gt;ptr))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReply(c,shared.cone);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReply(c,shared.czero);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc7570"><span
lang=EN-US style='font-family:宋体'>3.5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>zset</span></a></h2>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc18181"><span
lang=EN-US style='font-family:宋体'>3.5.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Create</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>robj *createZsetObject(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zset *zs = zmalloc(sizeof(*zs));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zs-&gt;dict = dictCreate(&amp;zsetDictType);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zs-&gt;zsl = zslCreate();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    o = createObject(OBJ_ZSET,zs);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    o-&gt;encoding = OBJ_ENCODING_SKIPLIST;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>robj *createZsetListpackObject(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char *lp = lpNew(0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o = createObject(OBJ_ZSET,lp);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    o-&gt;encoding = OBJ_ENCODING_LISTPACK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc11093"><span
lang=EN-US style='font-family:宋体'>3.5.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Add</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void zaddGenericCommand(client *c, int flags) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    static char *nanerr = &quot;resulting score is not a number
(NaN)&quot;;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *key = c-&gt;argv[1];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *zobj;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds ele;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    double score = 0, *scores = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j, elements, ch = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int scoreidx = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The following vars are used in order to track what the
command actually</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * did during the execution, to reply to the client and to
trigger the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * notification of keyspace change. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int added = 0;      /* Number of new elements added. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int updated = 0;    /* Number of elements with updated score.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int processed = 0;  /* Number of elements processed, may
remain zero with</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                           options like XX. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Parse options. At the end 'scoreidx' is set to the argument
position</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * of the score of the first score-element pair. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    scoreidx = 2;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while(scoreidx &lt; c-&gt;argc) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *opt = c-&gt;argv[scoreidx]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!strcasecmp(opt,&quot;nx&quot;)) flags |= ZADD_IN_NX;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;xx&quot;)) flags |=
ZADD_IN_XX;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;ch&quot;)) ch = 1; /*
Return num of elements added or updated. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;incr&quot;)) flags |=
ZADD_IN_INCR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;gt&quot;)) flags |=
ZADD_IN_GT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;lt&quot;)) flags |=
ZADD_IN_LT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        scoreidx++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Turn options into simple to check vars. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int incr = (flags &amp; ZADD_IN_INCR) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int nx = (flags &amp; ZADD_IN_NX) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int xx = (flags &amp; ZADD_IN_XX) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int gt = (flags &amp; ZADD_IN_GT) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int lt = (flags &amp; ZADD_IN_LT) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* After the options, we expect to have an even number of
args, since</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * we expect any number of score-element pairs. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    elements = c-&gt;argc-scoreidx;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (elements % 2 || !elements) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyErrorObject(c,shared.syntaxerr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    elements /= 2; /* Now this holds the number of score-element
pairs. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Check for incompatible options. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (nx &amp;&amp; xx) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;XX and NX options at the same time are not
compatible&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((gt &amp;&amp; nx) || (lt &amp;&amp; nx) || (gt &amp;&amp;
lt)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;GT, LT, and/or NX options at the same time are
not compatible&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Note that XX is compatible with either GT or LT */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (incr &amp;&amp; elements &gt; 1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;INCR option supports a single increment-element
pair&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Start parsing all the scores, we need to emit any syntax
error</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * before executing additions to the sorted set, as the
command should</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * either execute fully or nothing at all. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    scores = zmalloc(sizeof(double)*elements);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; elements; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if
(getDoubleFromObjectOrReply(c,c-&gt;argv[scoreidx+j*2],&amp;scores[j],NULL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            != C_OK) goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Lookup the key and create the sorted set if does not exist.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zobj = lookupKeyWrite(c-&gt;db,key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (checkType(c,zobj,OBJ_ZSET)) goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (zobj == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (xx) goto reply_to_client; /* No key + XX option:
nothing to do. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.zset_max_listpack_entries == 0 ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.zset_max_listpack_value &lt;
sdslen(c-&gt;argv[scoreidx+1]-&gt;ptr))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            zobj = createZsetObject();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            zobj = createZsetListpackObject();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dbAdd(c-&gt;db,key,zobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; elements; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        double newscore;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        score = scores[j];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int retflags = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ele = c-&gt;argv[scoreidx+1+j*2]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int retval = zsetAdd(zobj, score, ele, flags, &amp;retflags,
&amp;newscore);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retval == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyError(c,nanerr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retflags &amp; ZADD_OUT_ADDED) added++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retflags &amp; ZADD_OUT_UPDATED) updated++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!(retflags &amp; ZADD_OUT_NOP)) processed++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        score = newscore;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty += (added+updated);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>reply_to_client:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (incr) { /* ZINCRBY or INCR option. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (processed)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyDouble(c,score);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyNull(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else { /* ZADD. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyLongLong(c,ch ? added+updated : added);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>cleanup:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zfree(scores);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (added || updated) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        signalModifiedKey(c,c-&gt;db,key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        notifyKeyspaceEvent(NOTIFY_ZSET,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            incr ? &quot;zincr&quot; : &quot;zadd&quot;, key,
c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc1115"><span
lang=EN-US style='font-family:宋体'>3.5.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Get</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void zaddGenericCommand(client *c, int flags) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    static char *nanerr = &quot;resulting score is not a number
(NaN)&quot;;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *key = c-&gt;argv[1];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *zobj;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds ele;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    double score = 0, *scores = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j, elements, ch = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int scoreidx = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The following vars are used in order to track what the
command actually</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * did during the execution, to reply to the client and to
trigger the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * notification of keyspace change. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int added = 0;      /* Number of new elements added. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int updated = 0;    /* Number of elements with updated score.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int processed = 0;  /* Number of elements processed, may
remain zero with</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                           options like XX. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Parse options. At the end 'scoreidx' is set to the argument
position</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * of the score of the first score-element pair. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    scoreidx = 2;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while(scoreidx &lt; c-&gt;argc) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *opt = c-&gt;argv[scoreidx]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!strcasecmp(opt,&quot;nx&quot;)) flags |= ZADD_IN_NX;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;xx&quot;)) flags |=
ZADD_IN_XX;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;ch&quot;)) ch = 1; /*
Return num of elements added or updated. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;incr&quot;)) flags |=
ZADD_IN_INCR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;gt&quot;)) flags |=
ZADD_IN_GT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else if (!strcasecmp(opt,&quot;lt&quot;)) flags |= ZADD_IN_LT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        scoreidx++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Turn options into simple to check vars. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int incr = (flags &amp; ZADD_IN_INCR) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int nx = (flags &amp; ZADD_IN_NX) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int xx = (flags &amp; ZADD_IN_XX) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int gt = (flags &amp; ZADD_IN_GT) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int lt = (flags &amp; ZADD_IN_LT) != 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* After the options, we expect to have an even number of
args, since</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * we expect any number of score-element pairs. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    elements = c-&gt;argc-scoreidx;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (elements % 2 || !elements) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyErrorObject(c,shared.syntaxerr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    elements /= 2; /* Now this holds the number of score-element
pairs. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Check for incompatible options. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (nx &amp;&amp; xx) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;XX and NX options at the same time are not
compatible&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((gt &amp;&amp; nx) || (lt &amp;&amp; nx) || (gt &amp;&amp;
lt)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;GT, LT, and/or NX options at the same time are
not compatible&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Note that XX is compatible with either GT or LT */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (incr &amp;&amp; elements &gt; 1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;INCR option supports a single increment-element
pair&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Start parsing all the scores, we need to emit any syntax
error</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * before executing additions to the sorted set, as the
command should</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * either execute fully or nothing at all. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    scores = zmalloc(sizeof(double)*elements);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; elements; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if
(getDoubleFromObjectOrReply(c,c-&gt;argv[scoreidx+j*2],&amp;scores[j],NULL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            != C_OK) goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Lookup the key and create the sorted set if does not exist.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zobj = lookupKeyWrite(c-&gt;db,key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (checkType(c,zobj,OBJ_ZSET)) goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (zobj == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (xx) goto reply_to_client; /* No key + XX option:
nothing to do. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.zset_max_listpack_entries == 0 ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.zset_max_listpack_value &lt;
sdslen(c-&gt;argv[scoreidx+1]-&gt;ptr))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            zobj = createZsetObject();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            zobj = createZsetListpackObject();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dbAdd(c-&gt;db,key,zobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; elements; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        double newscore;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        score = scores[j];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int retflags = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ele = c-&gt;argv[scoreidx+1+j*2]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int retval = zsetAdd(zobj, score, ele, flags,
&amp;retflags, &amp;newscore);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retval == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyError(c,nanerr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retflags &amp; ZADD_OUT_ADDED) added++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retflags &amp; ZADD_OUT_UPDATED) updated++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!(retflags &amp; ZADD_OUT_NOP)) processed++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        score = newscore;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty += (added+updated);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>reply_to_client:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (incr) { /* ZINCRBY or INCR option. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (processed)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyDouble(c,score);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyNull(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else { /* ZADD. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyLongLong(c,ch ? added+updated : added);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>cleanup:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zfree(scores);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (added || updated) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        signalModifiedKey(c,c-&gt;db,key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        notifyKeyspaceEvent(NOTIFY_ZSET,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            incr ? &quot;zincr&quot; : &quot;zadd&quot;, key,
c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc12188"><span
lang=EN-US style='font-family:宋体'>3.6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Stream</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc29262"><span
lang=EN-US style='font-family:宋体'>3.6.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>stream</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct raxNode {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t iskey:1;     /* Does this node contain a key? */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t isnull:1;    /* Associated value is NULL (don't store
it). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t iscompr:1;   /* Node is compressed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t size:29;     /* Number of children, or compressed
string len. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Data layout is as follows:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * If node is not compressed we have 'size' bytes, one for
each children</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * character, and 'size' raxNode pointers, point to each child
node.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * Note how the character is not stored in the children but in
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * edge of the parents:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * [header iscompr=0][abc][a-ptr][b-ptr][c-ptr](value-ptr?)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * if node is compressed (iscompr bit is 1) the node has 1 children.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * In that case the 'size' bytes of the string stored
immediately at</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the start of the data section, represent a sequence of
successive</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * nodes linked one after the other, for which only the last
one in</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the sequence is actually represented as a node, and pointed
to by</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the current compressed node.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * [header iscompr=1][xyz][z-ptr](value-ptr?)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * Both compressed and not compressed nodes can represent a
key</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * with associated data in the radix tree at any level (not
just terminal</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * nodes).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * If the node has an associated key (iskey=1) and is not NULL</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * (isnull=0), then after the raxNode pointers pointing to the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * children, an additional value pointer is present (as you
can see</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * in the representation above as &quot;value-ptr&quot;
field).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char data[];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} raxNode;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct rax {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    raxNode *head;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t numele;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t numnodes;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} rax;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct streamID {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t ms;        /* Unix time in milliseconds. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t seq;       /* Sequence number. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} streamID;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct stream {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    rax *rax;               /* The radix tree holding the stream.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t length;        /* Current number of elements inside
this stream. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID last_id;       /* Zero if there are yet no items. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID first_id;      /* The first non-tombstone entry, zero
if empty. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID max_deleted_entry_id;  /* The maximal ID that was
deleted. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t entries_added; /* All time count of elements added.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    rax *cgroups;           /* Consumer groups dictionary: name
-&gt; streamCG */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} stream;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc26244"><span
lang=EN-US style='font-family:宋体'>3.6.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Create</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>robj *createStreamObject(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    stream *s = streamNew();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o = createObject(OBJ_STREAM,s);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    o-&gt;encoding = OBJ_ENCODING_STREAM;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* Create a new stream data structure. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>stream *streamNew(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    stream *s = zmalloc(sizeof(*s));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;rax = raxNew();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;length = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;first_id.ms = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;first_id.seq = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;last_id.ms = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;last_id.seq = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;max_deleted_entry_id.seq = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;max_deleted_entry_id.ms = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;entries_added = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s-&gt;cgroups = NULL; /* Created on demand to save memory when
not used. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return s;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc30704"><span
lang=EN-US style='font-family:宋体'>3.6.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Add</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void xaddCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Parse options. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamAddTrimArgs parsed_args;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int idpos = streamParseAddOrTrimArgsOrReply(c,
&amp;parsed_args, 1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (idpos &lt; 0)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return; /* streamParseAddOrTrimArgsOrReply already
replied. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int field_pos = idpos+1; /* The ID is always one argument
before the first field */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Check arity. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((c-&gt;argc - field_pos) &lt; 2 || ((c-&gt;argc-field_pos)
% 2) == 1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyErrorArity(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Return ASAP if minimal ID (0-0) was given so we avoid
possibly creating</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * a new stream and have streamAppendItem fail, leaving an
empty key in the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * database. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (parsed_args.id_given &amp;&amp; parsed_args.seq_given
&amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        parsed_args.id.ms == 0 &amp;&amp; parsed_args.id.seq == 0)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;The ID specified in XADD must be
greater than 0-0&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Lookup the stream at key. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    stream *s;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((o =
streamTypeLookupWriteOrCreate(c,c-&gt;argv[1],parsed_args.no_mkstream)) ==
NULL) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    s = o-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Return ASAP if the stream has reached the last possible ID
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (s-&gt;last_id.ms == UINT64_MAX &amp;&amp;
s-&gt;last_id.seq == UINT64_MAX) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;The stream has exhausted the last
possible ID, &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        &quot;unable to add more items&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Append using the low level function and return the ID. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID id;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if
(streamAppendItem(s,c-&gt;argv+field_pos,(c-&gt;argc-field_pos)/2,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        &amp;id,parsed_args.id_given ? &amp;parsed_args.id :
NULL,parsed_args.seq_given) == C_ERR)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (errno == EDOM)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyError(c,&quot;The ID specified in XADD is
equal or smaller than &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            &quot;the target stream top
item&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyError(c,&quot;Elements are too large to be
stored&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds replyid = createStreamIDString(&amp;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyBulkCBuffer(c, replyid, sdslen(replyid));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    signalModifiedKey(c,c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>   
notifyKeyspaceEvent(NOTIFY_STREAM,&quot;xadd&quot;,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Trim if needed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (parsed_args.trim_strategy != TRIM_STRATEGY_NONE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (streamTrim(s, &amp;parsed_args)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
notifyKeyspaceEvent(NOTIFY_STREAM,&quot;xtrim&quot;,c-&gt;argv[1],c-&gt;db-&gt;id);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (parsed_args.approx_trim) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* In case our trimming was limited (by LIMIT or by ~)
we must</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * re-write the relevant trim argument to make sure
there will be</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * no inconsistencies in AOF loading or in the replica.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * It's enough to check only args-&gt;approx because
there is no</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * way LIMIT is given without the ~ option. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
streamRewriteApproxSpecifier(c,parsed_args.trim_strategy_arg_idx-1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamRewriteTrimArgument(c,s,parsed_args.trim_strategy,parsed_args.trim_strategy_arg_idx);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Let's rewrite the ID argument with the one actually
generated for</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * AOF/replication propagation. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!parsed_args.id_given || !parsed_args.seq_given) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj *idarg = createObject(OBJ_STRING, replyid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        rewriteClientCommandArgument(c, idpos, idarg);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        decrRefCount(idarg);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sdsfree(replyid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We need to signal to blocked clients that there is new data
on this</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * stream. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    signalKeyAsReady(c-&gt;db, c-&gt;argv[1], OBJ_STREAM);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc20662"><span
lang=EN-US style='font-family:宋体'>3.6.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>XREADGROUP</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void xreadCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long timeout = -1; /* -1 means, no BLOCK argument given.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long count = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int streams_count = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int streams_arg = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int noack = 0;          /* True if NOACK option was specified.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID static_ids[STREAMID_STATIC_VECTOR_LEN];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID *ids = static_ids;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamCG **groups = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int xreadgroup = sdslen(c-&gt;argv[0]-&gt;ptr) == 10; /* XREAD
or XREADGROUP? */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *groupname = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *consumername = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Parse arguments. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int i = 1; i &lt; c-&gt;argc; i++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int moreargs = c-&gt;argc-i-1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *o = c-&gt;argv[i]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!strcasecmp(o,&quot;BLOCK&quot;) &amp;&amp; moreargs)
{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (c-&gt;flags &amp; CLIENT_SCRIPT) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /*</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * Although the CLIENT_DENY_BLOCKING flag should
protect from blocking the client</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * on Lua/MULTI/RM_Call we want special treatment
for Lua to keep backward compatibility.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * There is no sense to use BLOCK option within
Lua. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyErrorFormat(c, &quot;%s command is not
allowed with BLOCK option from scripts&quot;, (char *)c-&gt;argv[0]-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            i++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if
(getTimeoutFromObjectOrReply(c,c-&gt;argv[i],&amp;timeout,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                UNIT_MILLISECONDS) != C_OK) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (!strcasecmp(o,&quot;COUNT&quot;) &amp;&amp;
moreargs) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            i++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if
(getLongLongFromObjectOrReply(c,c-&gt;argv[i],&amp;count,NULL) != C_OK)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (count &lt; 0) count = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (!strcasecmp(o,&quot;STREAMS&quot;) &amp;&amp;
moreargs) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streams_arg = i+1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streams_count = (c-&gt;argc-streams_arg);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if ((streams_count % 2) != 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyError(c,&quot;Unbalanced XREAD list of
streams: &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;for each stream key an ID or
'$' must be &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;specified.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streams_count /= 2; /* We have two arguments for each
stream. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (!strcasecmp(o,&quot;GROUP&quot;) &amp;&amp;
moreargs &gt;= 2) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!xreadgroup) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyError(c,&quot;The GROUP option is only
supported by &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;XREADGROUP. You called XREAD
instead.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            groupname = c-&gt;argv[i+1];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            consumername = c-&gt;argv[i+2];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            i += 2;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (!strcasecmp(o,&quot;NOACK&quot;)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!xreadgroup) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyError(c,&quot;The NOACK option is only
supported by &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;XREADGROUP. You called XREAD
instead.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            noack = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyErrorObject(c,shared.syntaxerr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* STREAMS option is mandatory. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (streams_arg == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyErrorObject(c,shared.syntaxerr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If the user specified XREADGROUP then it must also</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * provide the GROUP option. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (xreadgroup &amp;&amp; groupname == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;Missing GROUP option for
XREADGROUP&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Parse the IDs and resolve the group name. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (streams_count &gt; STREAMID_STATIC_VECTOR_LEN)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ids = zmalloc(sizeof(streamID)*streams_count);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (groupname) groups =
zmalloc(sizeof(streamCG*)*streams_count);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int i = streams_arg + streams_count; i &lt; c-&gt;argc;
i++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Specifying &quot;$&quot; as last-known-id means that
the client wants to be</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * served with just the messages that will arrive into the
stream</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * starting from now. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int id_idx = i - streams_arg - streams_count;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj *key = c-&gt;argv[i-streams_count];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj *o = lookupKeyRead(c-&gt;db,key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (checkType(c,o,OBJ_STREAM)) goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        streamCG *group = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If a group was specified, than we need to be sure that
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * key and group actually exist. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (groupname) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (o == NULL ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                (group =
streamLookupCG(o-&gt;ptr,groupname-&gt;ptr)) == NULL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyErrorFormat(c, &quot;-NOGROUP No such key
'%s' or consumer &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       &quot;group '%s' in
XREADGROUP with GROUP &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       &quot;option&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   
(char*)key-&gt;ptr,(char*)groupname-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            groups[id_idx] = group;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (strcmp(c-&gt;argv[i]-&gt;ptr,&quot;$&quot;) == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (xreadgroup) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyError(c,&quot;The $ ID is meaningless in
the context of &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;XREADGROUP: you want to read
the history of &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;this consumer by specifying
a proper ID, or &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;use the &gt; ID to get new
messages. The $ ID would &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;just return an empty result
set.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (o) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                stream *s = o-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                ids[id_idx] = s-&gt;last_id;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                ids[id_idx].ms = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                ids[id_idx].seq = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (strcmp(c-&gt;argv[i]-&gt;ptr,&quot;&gt;&quot;)
== 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!xreadgroup) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyError(c,&quot;The &gt; ID can be specified
only when calling &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;XREADGROUP using the GROUP
&lt;group&gt; &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                &quot;&lt;consumer&gt;
option.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* We use just the maximum ID to signal this is a
&quot;&gt;&quot; ID, anyway</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * the code handling the blocking clients will have to
update the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * ID later in order to match the changing consumer
group last ID. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            ids[id_idx].ms = UINT64_MAX;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            ids[id_idx].seq = UINT64_MAX;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (streamParseStrictIDOrReply(c,c-&gt;argv[i],ids+id_idx,0,NULL)
!= C_OK)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Try to serve the client synchronously. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t arraylen = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *arraylen_ptr = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int i = 0; i &lt; streams_count; i++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj *o = lookupKeyRead(c-&gt;db,c-&gt;argv[streams_arg+i]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (o == NULL) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        stream *s = o-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        streamID *gt = ids+i; /* ID must be greater than this. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int serve_synchronously = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int serve_history = 0; /* True for XREADGROUP with ID !=
&quot;&gt;&quot;. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Check if there are the conditions to serve the client</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * synchronously. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (groups) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* If the consumer is blocked on a group, we always
serve it</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * synchronously (serving its local history) if the ID
specified</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * was not the special &quot;&gt;&quot; ID. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (gt-&gt;ms != UINT64_MAX ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                gt-&gt;seq != UINT64_MAX)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serve_synchronously = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serve_history = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (s-&gt;length) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* We also want to serve a consumer in a consumer
group</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * synchronously in case the group top item
delivered is smaller</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * than what the stream has inside. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                streamID maxid, *last =
&amp;groups[i]-&gt;last_id;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                streamLastValidID(s, &amp;maxid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (streamCompareID(&amp;maxid, last) &gt; 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    serve_synchronously = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    *gt = *last;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (s-&gt;length) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* For consumers without a group, we serve
synchronously if we can</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * actually provide at least one item from the stream.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamID maxid;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamLastValidID(s, &amp;maxid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (streamCompareID(&amp;maxid, gt) &gt; 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serve_synchronously = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (serve_synchronously) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            arraylen++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (arraylen == 1) arraylen_ptr =
addReplyDeferredLen(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* streamReplyWithRange() handles the 'start' ID as
inclusive,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * so start from the next ID, since we want only
messages with</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * IDs greater than start. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamID start = *gt;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamIncrID(&amp;start);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Emit the two elements sub-array consisting of the
name</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * of the stream and the data we extracted from it. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (c-&gt;resp == 2) addReplyArrayLen(c,2);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyBulk(c,c-&gt;argv[streams_arg+i]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamConsumer *consumer = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamPropInfo spi =
{c-&gt;argv[i+streams_arg],groupname};</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (groups) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                consumer =
streamLookupConsumer(groups[i],consumername-&gt;ptr,SLC_DEFAULT);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (consumer == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    consumer = streamCreateConsumer(groups[i],consumername-&gt;ptr,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                                   
c-&gt;argv[streams_arg+i],</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                                   
c-&gt;db-&gt;id,SCC_DEFAULT);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    if (noack)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        streamPropagateConsumerCreation(c,spi.keyname,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                                       
spi.groupname,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                                       
consumer-&gt;name);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            int flags = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (noack) flags |= STREAM_RWR_NOACK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (serve_history) flags |= STREAM_RWR_HISTORY;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamReplyWithRange(c,s,&amp;start,NULL,count,0,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                 groups ? groups[i] : NULL,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                 consumer, flags, &amp;spi);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (groups) server.dirty++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     /* We replied synchronously! Set the top array len and return
to caller. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (arraylen) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (c-&gt;resp == 2)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            setDeferredArrayLen(c,arraylen_ptr,arraylen);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            setDeferredMapLen(c,arraylen_ptr,arraylen);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Block if needed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (timeout != -1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If we are not allowed to block the client, the only
thing</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * we can do is treating it as a timeout (even with
timeout 0). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (c-&gt;flags &amp; CLIENT_DENY_BLOCKING) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyNullArray(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        blockForKeys(c, BLOCKED_STREAM, c-&gt;argv+streams_arg,
streams_count,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                     -1, timeout, NULL, NULL, ids);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If no COUNT is given and we block, set a relatively
small count:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * in case the ID provided is too low, we do not want the
server to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * block just to serve this client a huge stream of
messages. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        c-&gt;bpop.xread_count = count ? count :
XREAD_BLOCKED_DEFAULT_COUNT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If this is a XREADGROUP + GROUP we need to remember for
which</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * group and consumer name we are blocking, so later when
one of the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * keys receive more data, we can call
streamReplyWithRange() passing</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the right arguments. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (groupname) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            incrRefCount(groupname);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            incrRefCount(consumername);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            c-&gt;bpop.xread_group = groupname;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            c-&gt;bpop.xread_consumer = consumername;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            c-&gt;bpop.xread_group_noack = noack;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            c-&gt;bpop.xread_group = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            c-&gt;bpop.xread_consumer = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        goto cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* No BLOCK option, nor any stream we can serve. Reply as with
a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * timeout happened. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyNullArray(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Continue to cleanup... */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>cleanup: /* Cleanup. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The command is propagated (in the READGROUP form) as a side
effect</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * of calling lower level APIs. So stop any implicit
propagation. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    preventCommandPropagation(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (ids != static_ids) zfree(ids);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zfree(groups);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc22961"><span
lang=EN-US style='font-family:宋体'>3.6.5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>ack</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void xackCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamCG *group = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *o = lookupKeyRead(c-&gt;db,c-&gt;argv[1]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (o) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (checkType(c,o,OBJ_STREAM)) return; /* Type error. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        group = streamLookupCG(o-&gt;ptr,c-&gt;argv[2]-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* No key or group? Nothing to ack. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (o == NULL || group == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReply(c,shared.czero);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Start parsing the IDs, so that we abort ASAP if there is a
syntax</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * error: the return value of this command cannot be an error
in case</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the client successfully acknowledged some messages, so it
should be</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * executed in a &quot;all or nothing&quot; fashion. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID static_ids[STREAMID_STATIC_VECTOR_LEN];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    streamID *ids = static_ids;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int id_count = c-&gt;argc-3;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (id_count &gt; STREAMID_STATIC_VECTOR_LEN)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ids = zmalloc(sizeof(streamID)*id_count);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int j = 3; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if
(streamParseStrictIDOrReply(c,c-&gt;argv[j],&amp;ids[j-3],0,NULL) != C_OK) goto
cleanup;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int acknowledged = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int j = 3; j &lt; c-&gt;argc; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        unsigned char buf[sizeof(streamID)];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        streamEncodeID(buf,&amp;ids[j-3]);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Lookup the ID in the group PEL: it will have a reference
to the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * NACK structure that will have a reference to the
consumer, so that</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * we are able to remove the entry from both PELs. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        streamNACK *nack = raxFind(group-&gt;pel,buf,sizeof(buf));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (nack != raxNotFound) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            raxRemove(group-&gt;pel,buf,sizeof(buf),NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
raxRemove(nack-&gt;consumer-&gt;pel,buf,sizeof(buf),NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            streamFreeNACK(nack);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            acknowledged++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.dirty++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyLongLong(c,acknowledged);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>cleanup:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (ids != static_ids) zfree(ids);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc5514"><span
lang=EN-US style='font-family:"Arial",sans-serif'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Algorithm</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc27536"><span
lang=EN-US style='font-family:宋体'>4.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>list</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc25343"><span
lang=EN-US style='font-family:宋体'>4.1.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>quicklist</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* Create a new quicklist.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'> * Free with quicklistRelease(). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>quicklist *quicklistCreate(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct quicklist *quicklist;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist = zmalloc(sizeof(*quicklist));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist-&gt;head = quicklist-&gt;tail = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist-&gt;len = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist-&gt;count = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist-&gt;compress = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist-&gt;fill = -2;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    quicklist-&gt;bookmark_count = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return quicklist;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc3488"><span
lang=EN-US style='font-family:宋体'>4.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>hash</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc8867"><span
lang=EN-US style='font-family:宋体'>4.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>listpack</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* When string is used, it is provided with the length (slen).
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char *sval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t slen;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* When integer is used, 'sval' is NULL, and lval holds the
value. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long lval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} listpackEntry;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc3544"><span
lang=EN-US style='font-family:宋体'>4.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>skip</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>unsigned char *lpInsert(unsigned char *lp, unsigned char *elestr,
unsigned char *eleint,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        uint32_t size, unsigned char *p, int
where, unsigned char **newp)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>{   </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>  unsigned char intenc[LP_MAX_INT_ENCODING_LEN];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char backlen[LP_MAX_BACKLEN_SIZE];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t enclen; /* The length of the encoded element. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int delete = (elestr == NULL &amp;&amp; eleint == NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* when deletion, it is conceptually replacing the element
with a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * zero-length element. So whatever we get passed as 'where',
set</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * it to LP_REPLACE. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (delete) where = LP_REPLACE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If we need to insert after the current element, we just
jump to the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * next element (that could be the EOF one) and handle the
case of</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * inserting before. So the function will actually deal with
just two</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * cases: LP_BEFORE and LP_REPLACE. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (where == LP_AFTER) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        p = lpSkip(p);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        where = LP_BEFORE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ASSERT_INTEGRITY(lp, p);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Store the offset of the element 'p', so that we can obtain
its</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * address again after a reallocation. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long poff = p-lp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int enctype;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (elestr) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Calling lpEncodeGetType() results into the encoded
version of the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        * element to be stored into 'intenc' in case it is
representable as</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        * an integer: in that case, the function returns
LP_ENCODING_INT.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        * Otherwise if LP_ENCODING_STR is returned, we'll have to
call</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        * lpEncodeString() to actually write the encoded string on
place later.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        * Whatever the returned encoding is, 'enclen' is populated
with the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        * length of the encoded element. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        enctype = lpEncodeGetType(elestr,size,intenc,&amp;enclen);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (enctype == LP_ENCODING_INT) eleint = intenc;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else if (eleint) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        enctype = LP_ENCODING_INT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        enclen = size; /* 'size' is the length of the encoded
integer element. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        enctype = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        enclen = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We need to also encode the backward-parsable length of the
element</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * and append it to the end: this allows to traverse the
listpack from</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the end to the start. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long backlen_size = (!delete) ?
lpEncodeBacklen(backlen,enclen) : 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t old_listpack_bytes = lpGetTotalBytes(lp);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t replaced_len  = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (where == LP_REPLACE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        replaced_len = lpCurrentEncodedSizeUnsafe(p);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        replaced_len += lpEncodeBacklen(NULL,replaced_len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ASSERT_INTEGRITY_LEN(lp, p, replaced_len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t new_listpack_bytes = old_listpack_bytes + enclen +
backlen_size</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                  - replaced_len;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (new_listpack_bytes &gt; UINT32_MAX) return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We now need to reallocate in order to make space or shrink
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * allocation (in case 'when' value is LP_REPLACE and the new
element is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * smaller). However we do that before memmoving the memory to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * make room for the new element if the final allocation will
get</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * larger, or we do it after if the final allocation will get
smaller. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char *dst = lp + poff; /* May be updated after
reallocation. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Realloc before: we need more room. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (new_listpack_bytes &gt; old_listpack_bytes &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        new_listpack_bytes &gt; lp_malloc_size(lp)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if ((lp = lp_realloc(lp,new_listpack_bytes)) == NULL)
return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dst = lp + poff;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Setup the listpack relocating the elements to make the
exact room</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * we need to store the new one. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (where == LP_BEFORE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
memmove(dst+enclen+backlen_size,dst,old_listpack_bytes-poff);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else { /* LP_REPLACE. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        long lendiff = (enclen+backlen_size)-replaced_len;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        memmove(dst+replaced_len+lendiff,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                dst+replaced_len,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                old_listpack_bytes-poff-replaced_len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Realloc after: we need to free space. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (new_listpack_bytes &lt; old_listpack_bytes) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if ((lp = lp_realloc(lp,new_listpack_bytes)) == NULL)
return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dst = lp + poff;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Store the entry. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (newp) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        *newp = dst;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* In case of deletion, set 'newp' to NULL if the next
element is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the EOF element. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (delete &amp;&amp; dst[0] == LP_EOF) *newp = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!delete) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (enctype == LP_ENCODING_INT) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            memcpy(dst,eleint,enclen);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            lpEncodeString(dst,elestr,size);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dst += enclen;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        memcpy(dst,backlen,backlen_size);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dst += backlen_size;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Update header. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (where != LP_REPLACE || delete) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        uint32_t num_elements = lpGetNumElements(lp);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (num_elements != LP_HDR_NUMELE_UNKNOWN) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!delete)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                lpSetNumElements(lp,num_elements+1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                lpSetNumElements(lp,num_elements-1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    lpSetTotalBytes(lp,new_listpack_bytes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>#if 0</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* This code path is normally disabled: what it does is to
force listpack</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * to return *always* a new pointer after performing some
modification to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the listpack, even if the previous allocation was enough.
This is useful</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * in order to spot bugs in code using listpacks: by doing so
we can find</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * if the caller forgets to set the new pointer where the
listpack reference</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * is stored, after an update. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char *oldlp = lp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    lp = lp_malloc(new_listpack_bytes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    memcpy(lp,oldlp,new_listpack_bytes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (newp) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        unsigned long offset = (*newp)-oldlp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        *newp = lp + offset;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Make sure the old allocation contains garbage. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    memset(oldlp,'A',new_listpack_bytes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    lp_free(oldlp);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>#endif</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return lp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>unsigned char *lpNew(size_t capacity) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char *lp = lp_malloc(capacity &gt; LP_HDR_SIZE+1 ?
capacity : LP_HDR_SIZE+1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (lp == NULL) return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    lpSetTotalBytes(lp,LP_HDR_SIZE+1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    lpSetNumElements(lp,0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    lp[LP_HDR_SIZE] = LP_EOF;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return lp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc21163"><span
lang=EN-US style='font-family:宋体'>4.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>zset</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc8526"><span
lang=EN-US style='font-family:宋体'>4.3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>zskiplist</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct zskiplist {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct zskiplistNode *header, *tail;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long length;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int level;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} zskiplist;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc3264"><span
lang=EN-US style='font-family:宋体'>4.3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Zset</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct zset {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *dict;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zskiplist *zsl;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} zset;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>zskiplist *zslCreate(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zskiplist *zsl;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zsl = zmalloc(sizeof(*zsl));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zsl-&gt;level = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zsl-&gt;length = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zsl-&gt;header = zslCreateNode(ZSKIPLIST_MAXLEVEL,0,NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; ZSKIPLIST_MAXLEVEL; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        zsl-&gt;header-&gt;level[j].forward = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        zsl-&gt;header-&gt;level[j].span = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zsl-&gt;header-&gt;backward = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zsl-&gt;tail = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return zsl;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc30789"><span
lang=EN-US style='font-family:"Arial",sans-serif'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Pipeline</span></a></h1>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void modulePipeReadable(aeEventLoop *el, int fd, void *privdata,
int mask) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    UNUSED(el);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    UNUSED(fd);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    UNUSED(mask);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    UNUSED(privdata);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char buf[128];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while (read(fd, buf, sizeof(buf)) == sizeof(buf));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Handle event loop events if pipe was written from event
loop API */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoopHandleOneShotEvents();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>static void eventLoopHandleOneShotEvents() {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_mutex_lock(&amp;moduleEventLoopMutex);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (moduleEventLoopOneShots) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        while (listLength(moduleEventLoopOneShots)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            listNode *ln = listFirst(moduleEventLoopOneShots);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            EventLoopOneShot *oneshot = ln-&gt;value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            listDelNode(moduleEventLoopOneShots, ln);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Unlock mutex before the callback. Another oneshot
event can be</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * added in the callback, it will need to lock the
mutex. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            pthread_mutex_unlock(&amp;moduleEventLoopMutex);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            oneshot-&gt;func(oneshot-&gt;user_data);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            zfree(oneshot);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Lock again for the next iteration */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            pthread_mutex_lock(&amp;moduleEventLoopMutex);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_mutex_unlock(&amp;moduleEventLoopMutex);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc20566"><span
lang=EN-US style='font-family:"Arial",sans-serif'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>keyspace
notifications</span></a></h1>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void notifyKeyspaceEvent(int type, char *event, robj *key, int
dbid) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds chan;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *chanobj, *eventobj;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int len = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char buf[24];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If any modules are interested in events, notify the module
system now.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * This bypasses the notifications configuration, but the
module engine</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * will only call event subscribers if the event type matches
the types</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * they are interested in. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     moduleNotifyKeyspaceEvent(type, event, key, dbid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If notifications for this class of events are off, return
ASAP. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!(server.notify_keyspace_events &amp; type)) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventobj = createStringObject(event,strlen(event));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* __keyspace@&lt;db&gt;__:&lt;key&gt; &lt;event&gt;
notifications. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.notify_keyspace_events &amp; NOTIFY_KEYSPACE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdsnewlen(&quot;__keyspace@&quot;,11);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        len = ll2string(buf,sizeof(buf),dbid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdscatlen(chan, buf, len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdscatlen(chan, &quot;__:&quot;, 3);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdscatsds(chan, key-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chanobj = createObject(OBJ_STRING, chan);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pubsubPublishMessage(chanobj, eventobj, 0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        decrRefCount(chanobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* __keyevent@&lt;db&gt;__:&lt;event&gt; &lt;key&gt;
notifications. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.notify_keyspace_events &amp; NOTIFY_KEYEVENT) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdsnewlen(&quot;__keyevent@&quot;,11);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (len == -1) len = ll2string(buf,sizeof(buf),dbid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdscatlen(chan, buf, len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdscatlen(chan, &quot;__:&quot;, 3);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chan = sdscatsds(chan, eventobj-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        chanobj = createObject(OBJ_STRING, chan);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pubsubPublishMessage(chanobj, key, 0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        decrRefCount(chanobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    decrRefCount(eventobj);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void moduleNotifyKeyspaceEvent(int type, const char *event, robj
*key, int dbid) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Don't do anything if there aren't any subscribers */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (listLength(moduleKeyspaceSubscribers) == 0) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listIter li;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *ln;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listRewind(moduleKeyspaceSubscribers,&amp;li);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Remove irrelevant flags from the type mask */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    type &amp;= ~(NOTIFY_KEYEVENT | NOTIFY_KEYSPACE);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while((ln = listNext(&amp;li))) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        RedisModuleKeyspaceSubscriber *sub = ln-&gt;value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Only notify subscribers on events matching the
registration,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * and avoid subscribers triggering themselves */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if ((sub-&gt;event_mask &amp; type) &amp;&amp;
sub-&gt;active == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            RedisModuleCtx ctx;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            moduleCreateContext(&amp;ctx, sub-&gt;module,
REDISMODULE_CTX_TEMP_CLIENT);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            selectDb(ctx.client, dbid);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* mark the handler as active to avoid reentrant
loops.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * If the subscriber performs an action triggering
itself,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * it will not be notified about it. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sub-&gt;active = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sub-&gt;notify_callback(&amp;ctx, type, event, key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sub-&gt;active = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            moduleFreeContext(&amp;ctx);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc19385"><span
lang=EN-US style='font-family:"Arial",sans-serif'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Pub/sub</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc5245"><span
lang=EN-US style='font-family:宋体'>8.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>list</span></a></h2>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* Node, List, and Iterator are the only data structures used
currently. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct listNode {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct listNode *prev;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct listNode *next;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} listNode;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct listIter {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *next;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int direction;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} listIter;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct list {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *head;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *tail;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void *(*dup)(void *ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void (*free)(void *ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int (*match)(void *ptr, void *key);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long len;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} list;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>list *listCreate(void)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct list *list;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((list = zmalloc(sizeof(*list))) == NULL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list-&gt;head = list-&gt;tail = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list-&gt;len = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list-&gt;dup = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list-&gt;free = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list-&gt;match = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return list;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc30804"><span
lang=EN-US style='font-family:宋体'>8.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>pub</span></a></h2>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/*</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'> * Publish a message to all the subscribers.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'> */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int pubsubPublishMessageInternal(robj *channel, robj *message,
pubsubtype type) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int receivers = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictEntry *de;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictIterator *di;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *ln;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listIter li;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Send to clients listening for that channel */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    de = dictFind(*type.serverPubSubChannels, channel);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (de) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        list *list = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listNode *ln;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listIter li;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listRewind(list,&amp;li);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        while ((ln = listNext(&amp;li)) != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            client *c = ln-&gt;value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
addReplyPubsubMessage(c,channel,message,*type.messageBulk);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            updateClientMemUsageAndBucket(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            receivers++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (type.shard) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Shard pubsub ignores patterns. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return receivers;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Send to clients listening to matching channels */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    di = dictGetIterator(server.pubsub_patterns);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (di) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        channel = getDecodedObject(channel);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        while((de = dictNext(di)) != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            robj *pattern = dictGetKey(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            list *clients = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!stringmatchlen((char*)pattern-&gt;ptr,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                sdslen(pattern-&gt;ptr),</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                (char*)channel-&gt;ptr,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                sdslen(channel-&gt;ptr),0))
continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            listRewind(clients,&amp;li);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            while ((ln = listNext(&amp;li)) != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                client *c = listNodeValue(ln);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                addReplyPubsubPatMessage(c,pattern,channel,message);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                updateClientMemUsageAndBucket(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                receivers++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        decrRefCount(channel);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        dictReleaseIterator(di);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return receivers;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc1431"><span
lang=EN-US style='font-family:宋体'>8.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>sub</span></a></h2>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int pubsubSubscribeChannel(client *c, robj *channel, pubsubtype
type) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictEntry *de;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *clients = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int retval = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Add the channel to the client -&gt; channels hash table */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (dictAdd(type.clientPubSubChannels(c),channel,NULL) ==
DICT_OK) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        retval = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        incrRefCount(channel);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Add the client to the channel -&gt; list of clients
hash table */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        de = dictFind(*type.serverPubSubChannels, channel);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (de == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clients = listCreate();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            dictAdd(*type.serverPubSubChannels, channel, clients);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            incrRefCount(channel);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clients = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listAddNodeTail(clients,c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Notify the client */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    addReplyPubsubSubscribed(c,channel,type);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc6632"><span
lang=EN-US style='font-family:"Arial",sans-serif'>8.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>db</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc13652"><span
lang=EN-US style='font-family:宋体'>8.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>replication</span></a></h2>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc29671"><span
lang=EN-US style='font-family:宋体'>8.1.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>sync</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void syncCommand(client *c) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* ignore SYNC if already slave or in monitor mode */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (c-&gt;flags &amp; CLIENT_SLAVE) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Check if this is a failover request to a replica with the
same replid and</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * become a master if so. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (c-&gt;argc &gt; 3 &amp;&amp;
!strcasecmp(c-&gt;argv[0]-&gt;ptr,&quot;psync&quot;) &amp;&amp; </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        !strcasecmp(c-&gt;argv[3]-&gt;ptr,&quot;failover&quot;))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_WARNING, &quot;Failover request received for
replid %s.&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            (unsigned char *)c-&gt;argv[1]-&gt;ptr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!server.masterhost) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyError(c, &quot;PSYNC FAILOVER can't be sent to
a master.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!strcasecmp(c-&gt;argv[1]-&gt;ptr,server.replid)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            replicationUnsetMaster();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sds client = catClientInfoString(sdsempty(),c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_NOTICE,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                &quot;MASTER MODE enabled (failover request from
'%s')&quot;,client);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sdsfree(client);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            addReplyError(c, &quot;PSYNC FAILOVER replid must match
my replid.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;            </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Don't let replicas sync with us while we're failing over */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.failover_state != NO_FAILOVER) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;-NOMASTERLINK Can't SYNC while
failing over&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Refuse SYNC requests if we are a slave but the link with
our master</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * is not ok... */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.masterhost &amp;&amp; server.repl_state !=
REPL_STATE_CONNECTED) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;-NOMASTERLINK Can't SYNC while not
connected with my master&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* SYNC can't be issued when the server has pending data to
send to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the client about already issued commands. We need a fresh
reply</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * buffer registering the differences between the BGSAVE and
the current</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * dataset, so that we can copy to other slaves if needed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (clientHasPendingReplies(c)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;SYNC and PSYNC are invalid with
pending output&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Fail sync if slave doesn't support EOF capability but wants
a filtered RDB. This is because we force filtered</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * RDB's to be generated over a socket and not through a file
to avoid conflicts with the snapshot files. Forcing</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * use of a socket is handled, if needed, in
`startBgsaveForReplication`. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (c-&gt;slave_req &amp; SLAVE_REQ_RDB_MASK &amp;&amp;
!(c-&gt;slave_capa &amp; SLAVE_CAPA_EOF)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        addReplyError(c,&quot;Filtered replica requires EOF
capability&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    serverLog(LL_NOTICE,&quot;Replica %s asks for
synchronization&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        replicationGetSlaveName(c));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Try a partial resynchronization if this is a PSYNC command.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * If it fails, we continue with usual full resynchronization,
however</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * when this happens replicationSetupSlaveForFullResync will
replied</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * with:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * +FULLRESYNC &lt;replid&gt; &lt;offset&gt;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * So the slave knows the new replid and offset to try a PSYNC
later</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * if the connection with the master is lost. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!strcasecmp(c-&gt;argv[0]-&gt;ptr,&quot;psync&quot;)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        long long psync_offset;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (getLongLongFromObjectOrReply(c, c-&gt;argv[2],
&amp;psync_offset, NULL) != C_OK) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_WARNING, &quot;Replica %s asks for
synchronization but with a wrong offset&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                      replicationGetSlaveName(c));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (masterTryPartialResynchronization(c, psync_offset) ==
C_OK) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.stat_sync_partial_ok++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return; /* No full resync needed, return. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            char *master_replid = c-&gt;argv[1]-&gt;ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Increment stats for failed PSYNCs, but only if the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * replid is not &quot;?&quot;, as this is used by
slaves to force a full</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * resync on purpose when they are not able to
partially</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * resync. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (master_replid[0] != '?')
server.stat_sync_partial_err++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If a slave uses SYNC, we are dealing with an old
implementation</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * of the replication protocol (like redis-cli --slave).
Flag the client</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * so that we don't expect to receive REPLCONF ACK
feedbacks. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        c-&gt;flags |= CLIENT_PRE_PSYNC;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Full resynchronization. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.stat_sync_full++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Setup the slave as one waiting for BGSAVE to start. The
following code</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * paths will change the state if we handle the slave
differently. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    c-&gt;replstate = SLAVE_STATE_WAIT_BGSAVE_START;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.repl_disable_tcp_nodelay)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        connDisableTcpNoDelay(c-&gt;conn); /* Non critical if it
fails. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    c-&gt;repldbfd = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    c-&gt;flags |= CLIENT_SLAVE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listAddNodeTail(server.slaves,c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Create the replication backlog if needed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (listLength(server.slaves) == 1 &amp;&amp;
server.repl_backlog == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* When we create the backlog from scratch, we always use
a new</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * replication ID and clear the ID2, since there is no
valid</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * past history. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        changeReplicationId();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clearReplicationId2();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        createReplicationBacklog();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_NOTICE,&quot;Replication backlog created, my
new &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            &quot;replication IDs are '%s' and
'%s'&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            server.replid, server.replid2);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* CASE 1: BGSAVE is in progress, with disk target. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.child_type == CHILD_TYPE_RDB &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.rdb_child_type == RDB_CHILD_TYPE_DISK)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Ok a background save is in progress. Let's check if it
is a good</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * one for replication, i.e. if there is another slave
that is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * registering differences since the server forked to
save. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        client *slave;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listNode *ln;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listIter li;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        listRewind(server.slaves,&amp;li);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        while((ln = listNext(&amp;li))) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            slave = ln-&gt;value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* If the client needs a buffer of commands, we can't
use</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * a replica without replication buffer. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (slave-&gt;replstate == SLAVE_STATE_WAIT_BGSAVE_END
&amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                (!(slave-&gt;flags &amp; CLIENT_REPL_RDBONLY) ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 (c-&gt;flags &amp; CLIENT_REPL_RDBONLY)))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* To attach this slave, we check that it has at least all
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * capabilities of the slave that triggered the current
BGSAVE</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * and its exact requirements. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (ln &amp;&amp; ((c-&gt;slave_capa &amp;
slave-&gt;slave_capa) == slave-&gt;slave_capa) &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            c-&gt;slave_req == slave-&gt;slave_req) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Perfect, the server is already registering
differences for</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * another slave. Set the right state, and copy the
buffer.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * We don't copy buffer if clients don't want. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!(c-&gt;flags &amp; CLIENT_REPL_RDBONLY))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                copyReplicaOutputBuffer(c,slave);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
replicationSetupSlaveForFullResync(c,slave-&gt;psync_initial_offset);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_NOTICE,&quot;Waiting for end of BGSAVE
for SYNC&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* No way, we need to wait for the next BGSAVE in
order to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * register differences. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_NOTICE,&quot;Can't attach the replica to
the current BGSAVE. Waiting for next BGSAVE for SYNC&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* CASE 2: BGSAVE is in progress, with socket target. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else if (server.child_type == CHILD_TYPE_RDB &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>               server.rdb_child_type == RDB_CHILD_TYPE_SOCKET)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* There is an RDB child process but it is writing
directly to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * children sockets. We need to wait for the next BGSAVE</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * in order to synchronize. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_NOTICE,&quot;Current BGSAVE has socket
target. Waiting for next BGSAVE for SYNC&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* CASE 3: There is no BGSAVE is in progress. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.repl_diskless_sync &amp;&amp; (c-&gt;slave_capa
&amp; SLAVE_CAPA_EOF) &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.repl_diskless_sync_delay)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Diskless replication RDB child is created inside</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * replicationCron() since we want to delay its start
a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * few seconds to wait for more slaves to arrive. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_NOTICE,&quot;Delay next BGSAVE for
diskless SYNC&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* We don't have a BGSAVE in progress, let's start
one. Diskless</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * or disk-based mode is determined by replica's
capacity. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!hasActiveChildProcess()) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                startBgsaveForReplication(c-&gt;slave_capa,
c-&gt;slave_req);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serverLog(LL_NOTICE,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    &quot;No BGSAVE in progress, but another BG
operation is active. &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    &quot;BGSAVE for replication delayed&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc30681"><span
lang=EN-US style='font-family:宋体'>8.1.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>replication</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int replicaPutOnline(client *slave) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (slave-&gt;flags &amp; CLIENT_REPL_RDBONLY) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        slave-&gt;replstate = SLAVE_STATE_RDB_TRANSMITTED;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* The client asked for RDB only so we should close it
ASAP */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_NOTICE,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                  &quot;RDB transfer completed, rdb only replica
(%s) should be disconnected asap&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                  replicationGetSlaveName(slave));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    slave-&gt;replstate = SLAVE_STATE_ONLINE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    slave-&gt;repl_ack_time = server.unixtime; /* Prevent false
timeout. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    refreshGoodSlavesCount();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Fire the replica change modules event. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    moduleFireServerEvent(REDISMODULE_EVENT_REPLICA_CHANGE,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                          REDISMODULE_SUBEVENT_REPLICA_CHANGE_ONLINE,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                          NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    serverLog(LL_NOTICE,&quot;Synchronization with replica %s
succeeded&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        replicationGetSlaveName(slave));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void moduleFireServerEvent(uint64_t eid, int subid, void *data) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Fast path to return ASAP if there is nothing to do,
avoiding to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * setup the iterator and so forth: we want this call to be
extremely</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * cheap if there are no registered modules. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (listLength(RedisModule_EventListeners) == 0) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listIter li;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listNode *ln;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    listRewind(RedisModule_EventListeners,&amp;li);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while((ln = listNext(&amp;li))) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        RedisModuleEventListener *el = ln-&gt;value;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (el-&gt;event.id == eid) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            RedisModuleCtx ctx;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (eid == REDISMODULE_EVENT_CLIENT_CHANGE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* In the case of client changes, we're pushing
the real client</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * so the event handler can mutate it if needed.
For example,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * to change its authentication state in a way
that does not</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * depend on specific commands executed later.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>               
moduleCreateContext(&amp;ctx,el-&gt;module,REDISMODULE_CTX_NONE);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                ctx.client = (client *) data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduleCreateContext(&amp;ctx,el-&gt;module,REDISMODULE_CTX_TEMP_CLIENT);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            void *moduledata = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            RedisModuleClientInfoV1 civ1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            RedisModuleReplicationInfoV1 riv1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            RedisModuleModuleChangeV1 mcv1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Event specific context and data pointer setup. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (eid == REDISMODULE_EVENT_CLIENT_CHANGE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>               
serverAssert(modulePopulateClientInfoStructure(&amp;civ1,data, el-&gt;event.dataver)
== REDISMODULE_OK);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = &amp;civ1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid ==
REDISMODULE_EVENT_REPLICATION_ROLE_CHANGED) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>               
serverAssert(modulePopulateReplicationInfoStructure(&amp;riv1,el-&gt;event.dataver)
== REDISMODULE_OK);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = &amp;riv1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid == REDISMODULE_EVENT_FLUSHDB) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                RedisModuleFlushInfoV1 *fi = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (fi-&gt;dbnum != -1)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    selectDb(ctx.client, fi-&gt;dbnum);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid == REDISMODULE_EVENT_MODULE_CHANGE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                RedisModule *m = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (m == el-&gt;module) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    moduleFreeContext(&amp;ctx);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                mcv1.version = REDISMODULE_MODULE_CHANGE_VERSION;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                mcv1.module_name = m-&gt;name;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                mcv1.module_version = m-&gt;ver;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = &amp;mcv1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid == REDISMODULE_EVENT_LOADING_PROGRESS)
{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid == REDISMODULE_EVENT_CRON_LOOP) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid == REDISMODULE_EVENT_SWAPDB) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (eid == REDISMODULE_EVENT_CONFIG) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                moduledata = data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            el-&gt;module-&gt;in_hook++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            el-&gt;callback(&amp;ctx,el-&gt;event,subid,moduledata);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            el-&gt;module-&gt;in_hook--;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            moduleFreeContext(&amp;ctx);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc5745"><span
lang=EN-US style='font-family:宋体'>8.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Rdb</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc16144"><span
lang=EN-US style='font-family:宋体'>8.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>rio</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>struct _rio {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Backend functions.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * Since this functions do not tolerate short writes or reads
the return</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * value is simplified to: zero on error, non zero on complete
success. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t (*read)(struct _rio *, void *buf, size_t len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t (*write)(struct _rio *, const void *buf, size_t len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    off_t (*tell)(struct _rio *);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int (*flush)(struct _rio *);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The update_cksum method if not NULL is used to compute the
checksum of</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * all the data that was read or written so far. The method
should be</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * designed so that can be called with the current checksum,
and the buf</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * and len fields pointing to the new block of data to add to
the checksum</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * computation. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    void (*update_cksum)(struct _rio *, const void *buf, size_t
len);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The current checksum and flags (see RIO_FLAG_*) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t cksum, flags;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* number of bytes read or written */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t processed_bytes;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* maximum single read or write chunk size */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t max_processing_chunk;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Backend-specific vars. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    union {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* In-memory buffer target. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sds ptr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            off_t pos;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } buffer;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Stdio file pointer target. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            FILE *fp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            off_t buffered; /* Bytes written since last fsync. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            off_t autosync; /* fsync after 'autosync' bytes
written. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } file;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Connection object (used to read from socket) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            connection *conn;   /* Connection */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            off_t pos;    /* pos in buf that was returned */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sds buf;      /* buffered data */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            size_t read_limit;  /* don't allow to buffer/read more
than that */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            size_t read_so_far; /* amount of data read from the
rio (not buffered) */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } conn;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* FD target (used to write to pipe). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            int fd;       /* File descriptor. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            off_t pos;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sds buf;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } fd;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } io;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>};</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct _rio rio;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc27883"><span
lang=EN-US style='font-family:宋体'>8.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Savedb</span></a></h3>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* Save the DB on disk. Return C_ERR on error, C_OK on success. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int rdbSave(int req, char *filename, rdbSaveInfo *rsi) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char tmpfile[256];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char cwd[MAXPATHLEN]; /* Current working dir path for error
messages. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    FILE *fp = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    rio rdb;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int error = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char *err_op;    /* For a detailed log */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    snprintf(tmpfile,256,&quot;temp-%d.rdb&quot;, (int) getpid());</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    fp = fopen(tmpfile,&quot;w&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!fp) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *str_err = strerror(errno);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *cwdp = getcwd(cwd,MAXPATHLEN);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_WARNING,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;Failed opening the temp RDB file %s (in server
root dir %s) &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;for saving: %s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            tmpfile,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            cwdp ? cwdp : &quot;unknown&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            str_err);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return C_ERR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    rioInitWithFile(&amp;rdb,fp);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    startSaving(RDBFLAGS_NONE);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.rdb_save_incremental_fsync)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        rioSetAutoSync(&amp;rdb,REDIS_AUTOSYNC_BYTES);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (rdbSaveRio(req,&amp;rdb,&amp;error,RDBFLAGS_NONE,rsi) ==
C_ERR) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        errno = error;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        err_op = &quot;rdbSaveRio&quot;;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        goto werr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Make sure data will not remain on the OS's output buffers
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (fflush(fp)) { err_op = &quot;fflush&quot;; goto werr; }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (fsync(fileno(fp))) { err_op = &quot;fsync&quot;; goto
werr; }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (fclose(fp)) { fp = NULL; err_op = &quot;fclose&quot;; goto
werr; }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    fp = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Use RENAME to make sure the DB file is changed atomically
only</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * if the generate DB file is ok. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (rename(tmpfile,filename) == -1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *str_err = strerror(errno);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        char *cwdp = getcwd(cwd,MAXPATHLEN);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_WARNING,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;Error moving temp DB file %s on the final &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            &quot;destination %s (in server root dir %s):
%s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            tmpfile,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            filename,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            cwdp ? cwdp : &quot;unknown&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            str_err);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        unlink(tmpfile);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        stopSaving(0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return C_ERR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (fsyncFileDir(filename) == -1) { err_op =
&quot;fsyncFileDir&quot;; goto werr; }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    serverLog(LL_NOTICE,&quot;DB saved on disk&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.dirty = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.lastsave = time(NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.lastbgsave_status = C_OK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    stopSaving(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return C_OK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>werr:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    serverLog(LL_WARNING,&quot;Write error saving DB on disk(%s):
%s&quot;, err_op, strerror(errno));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (fp) fclose(fp);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unlink(tmpfile);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    stopSaving(0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return C_ERR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc3430"><span
lang=EN-US style='font-family:宋体'>8.2.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>file</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void rioInitWithFile(rio *r, FILE *fp) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    *r = rioFileIO;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    r-&gt;io.file.fp = fp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    r-&gt;io.file.buffered = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    r-&gt;io.file.autosync = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc2623"><span
lang=EN-US style='font-family:宋体'>8.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Aof</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc9092"><span
lang=EN-US style='font-family:宋体'>8.3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Append</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* Called when the user switches from &quot;appendonly yes&quot;
to &quot;appendonly no&quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'> * at runtime using the CONFIG command. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void stopAppendOnly(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    serverAssert(server.aof_state != AOF_OFF);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    flushAppendOnlyFile(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (redis_fsync(server.aof_fd) == -1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_WARNING,&quot;Fail to fsync the AOF file:
%s&quot;,strerror(errno));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.aof_fsync_offset = server.aof_current_size;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.aof_last_fsync = server.unixtime;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    close(server.aof_fd);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_fd = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_selected_db = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_state = AOF_OFF;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_rewrite_scheduled = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_last_incr_size = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    killAppendOnlyChild();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sdsfree(server.aof_buf);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_buf = sdsempty();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc26680"><span
lang=EN-US style='font-family:宋体'>8.3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>file</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void flushAppendOnlyFile(int force) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    ssize_t nwritten;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int sync_in_progress = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t latency;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (sdslen(server.aof_buf) == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Check if we need to do fsync even the aof buffer is
empty,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * because previously in AOF_FSYNC_EVERYSEC mode, fsync is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * called only when aof buffer is not empty, so if users</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * stop write commands before fsync called in one second,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the data in page cache cannot be flushed in time. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.aof_fsync == AOF_FSYNC_EVERYSEC &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_fsync_offset != server.aof_current_size
&amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.unixtime &gt; server.aof_last_fsync &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            !(sync_in_progress = aofFsyncInProgress())) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            goto try_fsync;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.aof_fsync == AOF_FSYNC_EVERYSEC)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sync_in_progress = aofFsyncInProgress();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.aof_fsync == AOF_FSYNC_EVERYSEC &amp;&amp; !force)
{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* With this append fsync policy we do background
fsyncing.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * If the fsync is still in progress we can try to delay</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the write for a couple of seconds. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (sync_in_progress) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (server.aof_flush_postponed_start == 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* No previous write postponing, remember that we
are</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * postponing the flush and return. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                server.aof_flush_postponed_start =
server.unixtime;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else if (server.unixtime -
server.aof_flush_postponed_start &lt; 2) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* We were already waiting for fsync to finish,
but for less</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * than two seconds this is still ok. Postpone
again. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Otherwise fall through, and go write since we can't
wait</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * over two seconds. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_delayed_fsync++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_NOTICE,&quot;Asynchronous AOF fsync is
taking too long (disk is busy?). Writing the AOF buffer without waiting for
fsync to complete, this may slow down Redis.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We want to perform a single write. This should be
guaranteed atomic</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * at least if the filesystem we are writing is a real
physical one.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * While this will save us against the server being killed I
don't think</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * there is much to do about the whole server stopping for
power problems</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * or alike */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.aof_flush_sleep &amp;&amp; sdslen(server.aof_buf))
{</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        usleep(server.aof_flush_sleep);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    latencyStartMonitor(latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    nwritten =
aofWrite(server.aof_fd,server.aof_buf,sdslen(server.aof_buf));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    latencyEndMonitor(latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We want to capture different events for delayed writes:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * when the delay happens with a pending fsync, or with a
saving child</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * active, and when the above two conditions are missing.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * We also use an additional event name to save all samples
which is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * useful for graphing / monitoring purposes. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (sync_in_progress) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
latencyAddSampleIfNeeded(&quot;aof-write-pending-fsync&quot;,latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else if (hasActiveChildProcess()) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        latencyAddSampleIfNeeded(&quot;aof-write-active-child&quot;,latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
latencyAddSampleIfNeeded(&quot;aof-write-alone&quot;,latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    latencyAddSampleIfNeeded(&quot;aof-write&quot;,latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We performed the write so reset the postponed flush
sentinel to zero. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_flush_postponed_start = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (nwritten != (ssize_t)sdslen(server.aof_buf)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        static time_t last_write_error_log = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int can_log = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Limit logging rate to 1 line per
AOF_WRITE_LOG_ERROR_RATE seconds. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if ((server.unixtime - last_write_error_log) &gt;
AOF_WRITE_LOG_ERROR_RATE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            can_log = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            last_write_error_log = server.unixtime;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Log the AOF write error and record the error code. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (nwritten == -1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (can_log) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serverLog(LL_WARNING,&quot;Error writing to the
AOF file: %s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    strerror(errno));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_last_write_errno = errno;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (can_log) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serverLog(LL_WARNING,&quot;Short write while
writing to &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       &quot;the AOF file:
(nwritten=%lld, &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       &quot;expected=%lld)&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       (long long)nwritten,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       (long
long)sdslen(server.aof_buf));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (ftruncate(server.aof_fd,
server.aof_last_incr_size) == -1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (can_log) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    serverLog(LL_WARNING, &quot;Could not remove
short write &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                             &quot;from the append-only file. 
Redis may refuse &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                             &quot;to load the AOF the next time
it starts.  &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                             &quot;ftruncate: %s&quot;,
strerror(errno));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* If the ftruncate() succeeded we can set
nwritten to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * -1 since there is no longer partial data into
the AOF. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                nwritten = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_last_write_errno = ENOSPC;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Handle the AOF write error. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.aof_fsync == AOF_FSYNC_ALWAYS) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* We can't recover when the fsync policy is ALWAYS
since the reply</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * for the client is already in the output buffers
(both writes and</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * reads), and the changes to the db can't be rolled
back. Since we</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * have a contract with the user that on acknowledged
or observed</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * writes are is synced on disk, we must exit. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_WARNING,&quot;Can't recover from AOF
write error when the AOF fsync policy is 'always'. Exiting...&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            exit(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Recover from failed write leaving data into the
buffer. However</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * set an error to stop accepting writes as long as
the error</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * condition is not cleared. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_last_write_status = C_ERR;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Trim the sds buffer if there was a partial write,
and there</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * was no way to undo it with ftruncate(2). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (nwritten &gt; 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                server.aof_current_size += nwritten;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                server.aof_last_incr_size += nwritten;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                sdsrange(server.aof_buf,nwritten,-1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return; /* We'll try again on the next call... */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Successful write(2). If AOF was in error state, restore
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * OK state and log the event. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.aof_last_write_status == C_ERR) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_WARNING,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                &quot;AOF write error looks solved, Redis can
write again.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_last_write_status = C_OK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_current_size += nwritten;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.aof_last_incr_size += nwritten;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Re-use AOF buffer when it is small enough. The maximum
comes from the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * arena size of 4k minus some overhead (but is otherwise
arbitrary). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((sdslen(server.aof_buf)+sdsavail(server.aof_buf)) &lt;
4000) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sdsclear(server.aof_buf);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sdsfree(server.aof_buf);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.aof_buf = sdsempty();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>try_fsync:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Don't fsync if no-appendfsync-on-rewrite is set to yes and
there are</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * children doing I/O in the background. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.aof_no_fsync_on_rewrite &amp;&amp;
hasActiveChildProcess())</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Perform the fsync if needed. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.aof_fsync == AOF_FSYNC_ALWAYS) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* redis_fsync is defined as fdatasync() for Linux in
order to avoid</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * flushing metadata. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        latencyStartMonitor(latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Let's try to get this data on the disk. To guarantee
data safe when</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the AOF fsync policy is 'always', we should exit if
failed to fsync</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * AOF (see comment next to the exit(1) after write error
above). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (redis_fsync(server.aof_fd) == -1) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_WARNING,&quot;Can't persist AOF for fsync
error when the &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>              &quot;AOF fsync policy is 'always': %s.
Exiting...&quot;, strerror(errno));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            exit(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        latencyEndMonitor(latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>       
latencyAddSampleIfNeeded(&quot;aof-fsync-always&quot;,latency);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.aof_fsync_offset = server.aof_current_size;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.aof_last_fsync = server.unixtime;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else if ((server.aof_fsync == AOF_FSYNC_EVERYSEC &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                server.unixtime &gt; server.aof_last_fsync)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!sync_in_progress) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            aof_background_fsync(server.aof_fd);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.aof_fsync_offset = server.aof_current_size;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.aof_last_fsync = server.unixtime;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc26821"><span
lang=EN-US style='font-family:"Arial",sans-serif'>9.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>thread</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc14994"><span
lang=EN-US style='font-family:宋体'>9.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Event</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>aeEventLoop *aeCreateEventLoop(int setsize) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    aeEventLoop *eventLoop;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int i;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    monotonicInit();    /* just in case the calling app didn't
initialize */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((eventLoop = zmalloc(sizeof(*eventLoop))) == NULL) goto
err;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;events = zmalloc(sizeof(aeFileEvent)*setsize);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;fired = zmalloc(sizeof(aeFiredEvent)*setsize);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (eventLoop-&gt;events == NULL || eventLoop-&gt;fired ==
NULL) goto err;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;setsize = setsize;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;timeEventHead = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;timeEventNextId = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;stop = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;maxfd = -1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;beforesleep = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;aftersleep = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    eventLoop-&gt;flags = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (aeApiCreate(eventLoop) == -1) goto err;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Events with mask == AE_NONE are not set. So let's
initialize the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * vector with it. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (i = 0; i &lt; setsize; i++)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        eventLoop-&gt;events[i].mask = AE_NONE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return eventLoop;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>err:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (eventLoop) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        zfree(eventLoop-&gt;events);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        zfree(eventLoop-&gt;fired);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        zfree(eventLoop);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc19580"><span
lang=EN-US style='font-family:宋体'>9.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US>Io thread</span></a></h2>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void InitServerLast() {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    bioInit();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    initThreadedIO();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    set_jemalloc_bg_thread(server.jemalloc_bg_thread);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.initial_memory_usage = zmalloc_used_memory();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void bioInit(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_attr_t attr;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_t thread;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t stacksize;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Initialization of state vars and objects */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; BIO_NUM_OPS; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pthread_mutex_init(&amp;bio_mutex[j],NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pthread_cond_init(&amp;bio_newjob_cond[j],NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pthread_cond_init(&amp;bio_step_cond[j],NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        bio_jobs[j] = listCreate();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        bio_pending[j] = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Set the stack size as by default it may be small in some
system */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_attr_init(&amp;attr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_attr_getstacksize(&amp;attr,&amp;stacksize);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!stacksize) stacksize = 1; /* The world is full of Solaris
Fixes */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while (stacksize &lt; REDIS_THREAD_STACK_SIZE) stacksize *= 2;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    pthread_attr_setstacksize(&amp;attr, stacksize);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Ready to spawn our threads. We use the single argument the thread</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * function accepts in order to pass the job ID the thread is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * responsible of. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (j = 0; j &lt; BIO_NUM_OPS; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        void *arg = (void*)(unsigned long) j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if
(pthread_create(&amp;thread,&amp;attr,bioProcessBackgroundJobs,arg) != 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_WARNING,&quot;Fatal: Can't initialize
Background Jobs.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            exit(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        bio_threads[j] = thread;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* Initialize the data structures needed for threaded I/O. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void initThreadedIO(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.io_threads_active = 0; /* We start with threads not
active. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Indicate that io-threads are currently idle */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    io_threads_op = IO_THREADS_OP_IDLE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Don't spawn any thread if the user selected a single
thread:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * we'll handle I/O directly from the main thread. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.io_threads_num == 1) return;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.io_threads_num &gt; IO_THREADS_MAX_NUM) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        serverLog(LL_WARNING,&quot;Fatal: too many I/O threads
configured. &quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                             &quot;The maximum number is
%d.&quot;, IO_THREADS_MAX_NUM);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        exit(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Spawn and initialize the I/O threads. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int i = 0; i &lt; server.io_threads_num; i++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Things we do for all the threads including the main
thread. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        io_threads_list[i] = listCreate();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (i == 0) continue; /* Thread 0 is the main thread. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Things we do only for the additional threads. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pthread_t tid;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pthread_mutex_init(&amp;io_threads_mutex[i],NULL);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        setIOPendingCount(i, 0);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        pthread_mutex_lock(&amp;io_threads_mutex[i]); /* Thread
will be stopped. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if
(pthread_create(&amp;tid,NULL,IOThreadMain,(void*)(long)i) != 0) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_WARNING,&quot;Fatal: Can't initialize IO
thread.&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            exit(1);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        io_threads[i] = tid;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<h1><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></h1>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc15288"><span
lang=EN-US style='font-family:"Arial",sans-serif'>10.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>HA</span></a></h1>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc3654"><span
lang=EN-US style='font-family:宋体'>10.1.<span style='font:7.0pt "Times New Roman"'>
</span></span><span lang=EN-US>Sentinel</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc18503"><span
lang=EN-US style='font-family:宋体'>10.1.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Ping</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int sentinelSendPing(sentinelRedisInstance *ri) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int retval = redisAsyncCommand(ri-&gt;link-&gt;cc,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelPingReplyCallback, ri, &quot;%s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelInstanceMapCommand(ri,&quot;PING&quot;));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (retval == C_OK) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ri-&gt;link-&gt;pending_commands++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ri-&gt;link-&gt;last_ping_time = mstime();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* We update the active ping time only if we received the
pong for</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the previous ping, otherwise we are technically waiting
since the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * first ping that did not receive a reply. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (ri-&gt;link-&gt;act_ping_time == 0)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            ri-&gt;link-&gt;act_ping_time =
ri-&gt;link-&gt;last_ping_time;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc3572"><span
lang=EN-US style='font-family:宋体'>10.1.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Select</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>sentinelRedisInstance *sentinelSelectSlave(sentinelRedisInstance
*master) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sentinelRedisInstance **instance =</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        zmalloc(sizeof(instance[0])*dictSize(master-&gt;slaves));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sentinelRedisInstance *selected = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int instances = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictIterator *di;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictEntry *de;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t max_master_down_time = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (master-&gt;flags &amp; SRI_S_DOWN)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        max_master_down_time += mstime() -
master-&gt;s_down_since_time;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    max_master_down_time += master-&gt;down_after_period * 10;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    di = dictGetIterator(master-&gt;slaves);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while((de = dictNext(di)) != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelRedisInstance *slave = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mstime_t info_validity_time;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (slave-&gt;flags &amp; (SRI_S_DOWN|SRI_O_DOWN))
continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (slave-&gt;link-&gt;disconnected) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (mstime() - slave-&gt;link-&gt;last_avail_time &gt;
sentinel_ping_period*5) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (slave-&gt;slave_priority == 0) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If the master is in SDOWN state we get INFO for slaves
every second.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * Otherwise we get it with the usual period so we need to
account for</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * a larger delay. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (master-&gt;flags &amp; SRI_S_DOWN)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            info_validity_time = sentinel_ping_period*5;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        else</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            info_validity_time = sentinel_info_period*3;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (mstime() - slave-&gt;info_refresh &gt;
info_validity_time) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (slave-&gt;master_link_down_time &gt;
max_master_down_time) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        instance[instances++] = slave;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictReleaseIterator(di);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (instances) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        qsort(instance,instances,sizeof(sentinelRedisInstance*),</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            compareSlavesForPromotion);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        selected = instance[0];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    zfree(instance);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return selected;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc1996"><span
lang=EN-US style='font-family:宋体'>10.1.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Salveof</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>int sentinelSendSlaveOf(sentinelRedisInstance *ri, const
sentinelAddr *addr) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char portstr[32];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    const char *host;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If host is NULL we send SLAVEOF NO ONE that will turn the
instance</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    * into a master. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!addr) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        host = &quot;NO&quot;;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        memcpy(portstr,&quot;ONE&quot;,4);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        host = announceSentinelAddr(addr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ll2string(portstr,sizeof(portstr),addr-&gt;port);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* In order to send SLAVEOF in a safe way, we send a
transaction performing</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the following tasks:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * 1) Reconfigure the instance according to the specified
host/port params.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * 2) Rewrite the configuration.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * 3) Disconnect all clients (but this one sending the
command) in order</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *    to trigger the ask-master-on-reconnection protocol for
connected</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *    clients.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * Note that we don't check the replies returned by commands,
since we</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * will observe instead the effects in the next INFO output.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    retval = redisAsyncCommand(ri-&gt;link-&gt;cc,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelDiscardReplyCallback, ri, &quot;%s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelInstanceMapCommand(ri,&quot;MULTI&quot;));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (retval == C_ERR) return retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    ri-&gt;link-&gt;pending_commands++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    retval = redisAsyncCommand(ri-&gt;link-&gt;cc,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelDiscardReplyCallback, ri, &quot;%s %s %s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelInstanceMapCommand(ri,&quot;SLAVEOF&quot;),</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        host, portstr);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (retval == C_ERR) return retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    ri-&gt;link-&gt;pending_commands++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    retval = redisAsyncCommand(ri-&gt;link-&gt;cc,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelDiscardReplyCallback, ri, &quot;%s REWRITE&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelInstanceMapCommand(ri,&quot;CONFIG&quot;));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (retval == C_ERR) return retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    ri-&gt;link-&gt;pending_commands++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* CLIENT KILL TYPE &lt;type&gt; is only supported starting
from Redis 2.8.12,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * however sending it to an instance not understanding this
command is not</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * an issue because CLIENT is variadic command, so Redis will
not</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * recognized as a syntax error, and the transaction will not
fail (but</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * only the unsupported command will fail). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (int type = 0; type &lt; 2; type++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        retval = redisAsyncCommand(ri-&gt;link-&gt;cc,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sentinelDiscardReplyCallback, ri, &quot;%s KILL TYPE
%s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            sentinelInstanceMapCommand(ri,&quot;CLIENT&quot;),</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            type == 0 ? &quot;normal&quot; : &quot;pubsub&quot;);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (retval == C_ERR) return retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ri-&gt;link-&gt;pending_commands++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    retval = redisAsyncCommand(ri-&gt;link-&gt;cc,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelDiscardReplyCallback, ri, &quot;%s&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        sentinelInstanceMapCommand(ri,&quot;EXEC&quot;));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (retval == C_ERR) return retval;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    ri-&gt;link-&gt;pending_commands++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return C_OK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:1.0cm;text-indent:-1.0cm'><a name="_Toc2011"><span
lang=EN-US style='font-family:宋体'>10.2.<span style='font:7.0pt "Times New Roman"'>
</span></span><span lang=EN-US>Cluster</span></a></h2>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc5210"><span
lang=EN-US style='font-family:宋体'>10.2.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Cluster
node</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct clusterNode {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t ctime; /* Node object creation time. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char name[CLUSTER_NAMELEN]; /* Node name, hex string,
sha1-size */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int flags;      /* CLUSTER_NODE_... */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t configEpoch; /* Last configEpoch observed for this
node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char slots[CLUSTER_SLOTS/8]; /* slots handled by this
node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t *slot_info_pairs; /* Slots info represented as (start/end)
pair (consecutive index). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int slot_info_pairs_count; /* Used number of slots in
slot_info_pairs */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int numslots;   /* Number of slots handled by this node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int numslaves;  /* Number of slave nodes, if this is a master
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct clusterNode **slaves; /* pointers to slave nodes */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct clusterNode *slaveof; /* pointer to the master node.
Note that it</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                    may be NULL even if the node
is a slave</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                    if we don't have the master
node in our</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                    tables. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long long last_in_ping_gossip; /* The number of the
last carried in the ping gossip section */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t ping_sent;      /* Unix time we sent latest ping */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t pong_received;  /* Unix time we received the pong */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t data_received;  /* Unix time we received any data */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t fail_time;      /* Unix time when FAIL flag was set
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t voted_time;     /* Last time we voted for a slave of
this master */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t repl_offset_time;  /* Unix time we received offset
for this node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t orphaned_time;     /* Starting time of orphaned
master condition */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long repl_offset;      /* Last known repl offset for this
node. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char ip[NET_IP_STR_LEN];    /* Latest known IP address of this
node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds hostname;               /* The known hostname for this
node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int port;                   /* Latest known clients port (TLS
or plain). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int pport;                  /* Latest known clients plaintext
port. Only used</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   if the main clients port is for
TLS. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int cport;                  /* Latest known cluster port of
this node. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterLink *link;          /* TCP/IP link established toward
this node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterLink *inbound_link;  /* TCP/IP link accepted from this
node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    list *fail_reports;         /* List of nodes signaling this as
failing */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} clusterNode;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc2184"><span
lang=EN-US style='font-family:宋体'>10.2.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Cluster
link</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* clusterLink encapsulates everything needed to talk with a
remote node. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct clusterLink {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t ctime;             /* Link creation time */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    connection *conn;           /* Connection to remote node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    sds sndbuf;                 /* Packet send buffer */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char *rcvbuf;               /* Packet reception buffer */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t rcvbuf_len;          /* Used size of rcvbuf */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    size_t rcvbuf_alloc;        /* Allocated size of rcvbuf */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct clusterNode *node;   /* Node related to this link.
Initialized to NULL when unknown */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int inbound;                /* 1 if this link is an inbound
link accepted from the related node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} clusterLink;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc24555"><span
lang=EN-US style='font-family:宋体'>10.2.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Cluster
state</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct clusterState {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *myself;  /* This node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t currentEpoch;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int state;            /* CLUSTER_OK, CLUSTER_FAIL, ... */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int size;             /* Num of master nodes with at least one
slot */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *nodes;          /* Hash table of name -&gt; clusterNode
structures */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dict *nodes_black_list; /* Nodes we don't re-add for a few
seconds. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *migrating_slots_to[CLUSTER_SLOTS];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *importing_slots_from[CLUSTER_SLOTS];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *slots[CLUSTER_SLOTS];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    rax *slots_to_channels;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The following fields are used to take the slave state on
elections. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t failover_auth_time; /* Time of previous or next
election. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int failover_auth_count;    /* Number of votes received so
far. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int failover_auth_sent;     /* True if we already asked for
votes. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int failover_auth_rank;     /* This slave rank for current
auth request. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t failover_auth_epoch; /* Epoch of the current
election. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int cant_failover_reason;   /* Why a slave is currently not
able to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   failover. See the
CANT_FAILOVER_* macros. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Manual failover state in common. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t mf_end;            /* Manual failover time limit (ms
unixtime).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   It is zero if there is no MF in
progress. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Manual failover state of master. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *mf_slave;      /* Slave performing the manual
failover. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Manual failover state of slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long mf_master_offset; /* Master offset the slave needs
to start MF</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   or -1 if still not received. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int mf_can_start;           /* If non-zero signal that the
manual failover</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                   can start requesting masters
vote. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The following fields are used by masters to take state on
elections. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t lastVoteEpoch;     /* Epoch of the last vote granted.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int todo_before_sleep; /* Things to do in
clusterBeforeSleep(). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Stats */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Messages received and sent by type. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long stats_bus_messages_sent[CLUSTERMSG_TYPE_COUNT];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long stats_bus_messages_received[CLUSTERMSG_TYPE_COUNT];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    long long stats_pfail_nodes;    /* Number of nodes in PFAIL
status,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       excluding nodes without
address. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned long long stat_cluster_links_buffer_limit_exceeded; 
/* Total number of cluster links freed due to exceeding buffer limit */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} clusterState;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc31529"><span
lang=EN-US style='font-family:宋体'>10.2.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Gossip</span></a></h3>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char nodename[CLUSTER_NAMELEN];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t ping_sent;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t pong_received;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char ip[NET_IP_STR_LEN];  /* IP address last time it was seen
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t port;              /* base port last time it was seen
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t cport;             /* cluster port last time it was
seen */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t flags;             /* node-&gt;flags copy */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t pport;             /* plaintext-port, when base port
is TLS */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t notused1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} clusterMsgDataGossip;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc19881"><span
lang=EN-US style='font-family:宋体'>10.2.5.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Msg</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>union clusterMsgData {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* PING, MEET and PONG */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Array of N clusterMsgDataGossip structures */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterMsgDataGossip gossip[1];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Extension data that can optionally be sent for
ping/meet/pong</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * messages. We can't explicitly define them here though,
since</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the gossip array isn't the real length of the gossip
data. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } ping;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* FAIL */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterMsgDataFail about;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } fail;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* PUBLISH */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterMsgDataPublish msg;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } publish;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* UPDATE */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterMsgDataUpdate nodecfg;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } update;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* MODULE */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterMsgModule msg;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } module;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>};</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>#define CLUSTER_PROTO_VER 1 /* Cluster bus protocol version. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>typedef struct {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char sig[4];        /* Signature &quot;RCmb&quot; (Redis
Cluster message bus). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint32_t totlen;    /* Total length of this message */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t ver;       /* Protocol version, currently set to 1.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t port;      /* TCP base port number. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t type;      /* Message type */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t count;     /* Only used for some kind of messages. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t currentEpoch;  /* The epoch accordingly to the
sending node. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t configEpoch;   /* The config epoch if it's a master,
or the last</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                               epoch advertised by its master if
it is a</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                               slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t offset;    /* Master replication offset if node is a
master or</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                           processed replication offset if node is
a slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char sender[CLUSTER_NAMELEN]; /* Name of the sender node */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char myslots[CLUSTER_SLOTS/8];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char slaveof[CLUSTER_NAMELEN];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char myip[NET_IP_STR_LEN];    /* Sender IP, if not all zeroed.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t extensions; /* Number of extensions sent along with
this packet. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    char notused1[30];   /* 30 bytes reserved for future usage. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t pport;      /* Sender TCP plaintext port, if base
port is TLS */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t cport;      /* Sender TCP cluster bus port */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint16_t flags;      /* Sender node flags */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char state; /* Cluster state from the POV of the
sender */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    unsigned char mflags[3]; /* Message flags:
CLUSTERMSG_FLAG[012]_... */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    union clusterMsgData data;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>} clusterMsg;</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc4140"><span
lang=EN-US style='font-family:宋体'>10.2.6.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Slot</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>unsigned int keyHashSlot(char *key, int keylen) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int s, e; /* start-end indexes of { and } */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (s = 0; s &lt; keylen; s++)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (key[s] == '{') break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* No '{' ? Hash the whole key. This is the base case. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (s == keylen) return crc16(key,keylen) &amp; 0x3FFF;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* '{' found? Check if we have the corresponding '}'. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (e = s+1; e &lt; keylen; e++)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (key[e] == '}') break;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* No '}' or nothing between {} ? Hash the whole key. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (e == keylen || e == s+1) return crc16(key,keylen) &amp;
0x3FFF;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If we are here there is both a { and a } on its right. Hash</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * what is in the middle between { and }. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return crc16(key+s+1,e-s-1) &amp; 0x3FFF;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc26253"><span
lang=EN-US style='font-family:宋体'>10.2.7.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Corn</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>/* This is executed 10 times every second */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>void clusterCron(void) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictIterator *di;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictEntry *de;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int update_state = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int orphaned_masters; /* How many masters there are without ok
slaves. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int max_slaves; /* Max number of ok slaves for a single
master. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int this_slaves; /* Number of ok slaves for our master (if we
are slave). */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t min_pong = 0, now = mstime();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *min_pong_node = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    static unsigned long long iteration = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    mstime_t handshake_timeout;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    iteration++; /* Number of times this function was called so
far. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterUpdateMyselfHostname();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* The handshake timeout is the time after which a handshake
node that was</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * not turned into a normal node is removed from the nodes.
Usually it is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * just the NODE_TIMEOUT value, but when NODE_TIMEOUT is too
small we use</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * the value of 1 second. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    handshake_timeout = server.cluster_node_timeout;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (handshake_timeout &lt; 1000) handshake_timeout = 1000;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Clear so clusterNodeCronHandleReconnect can count the
number of nodes in PFAIL. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.cluster-&gt;stats_pfail_nodes = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Clear so clusterNodeCronUpdateClusterLinksMemUsage can
count the current memory usage of all cluster links. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    server.stat_cluster_links_memory = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Run through some of the operations we want to do on each
cluster node. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    di = dictGetSafeIterator(server.cluster-&gt;nodes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while((de = dictNext(di)) != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterNode *node = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* The sequence goes:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * 1. We try to shrink link buffers if possible.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * 2. We free the links whose buffers are still oversized
after possible shrinking.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * 3. We update the latest memory usage of cluster links.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * 4. We immediately attempt reconnecting after freeing
links.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterNodeCronResizeBuffers(node);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterNodeCronFreeLinkOnBufferLimitReached(node);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterNodeCronUpdateClusterLinksMemUsage(node);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* The protocol is that function(s) below return non-zero
if the node was</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * terminated.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if(clusterNodeCronHandleReconnect(node, handshake_timeout,
now)) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictReleaseIterator(di); </span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Ping some random node 1 time every 10 iterations, so that
we usually ping</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * one random node every second. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (!(iteration % 10)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Check a few random nodes and ping the one with the
oldest</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * pong_received time. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        for (j = 0; j &lt; 5; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            de = dictGetRandomKey(server.cluster-&gt;nodes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clusterNode *this = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Don't ping nodes disconnected or with a ping
currently active. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (this-&gt;link == NULL || this-&gt;ping_sent != 0)
continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (this-&gt;flags &amp;
(CLUSTER_NODE_MYSELF|CLUSTER_NODE_HANDSHAKE))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (min_pong_node == NULL || min_pong &gt;
this-&gt;pong_received) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                min_pong_node = this;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                min_pong = this-&gt;pong_received;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (min_pong_node) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            serverLog(LL_DEBUG,&quot;Pinging node %.40s&quot;,
min_pong_node-&gt;name);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clusterSendPing(min_pong_node-&gt;link,
CLUSTERMSG_TYPE_PING);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Iterate nodes to check if we need to flag something as
failing.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * This loop is also responsible to:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * 1) Check if there are orphaned masters (masters without non
failing</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     *    slaves).</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * 2) Count the max number of non failing slaves for a single
master.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * 3) Count the number of slaves for our master, if we are a
slave. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    orphaned_masters = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    max_slaves = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    this_slaves = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    di = dictGetSafeIterator(server.cluster-&gt;nodes);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    while((de = dictNext(di)) != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterNode *node = dictGetVal(de);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        now = mstime(); /* Use an updated time at every iteration.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (node-&gt;flags &amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           
(CLUSTER_NODE_MYSELF|CLUSTER_NODE_NOADDR|CLUSTER_NODE_HANDSHAKE))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Orphaned master check, useful only if the current
instance</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * is a slave that may migrate to another master. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (nodeIsSlave(myself) &amp;&amp; nodeIsMaster(node)
&amp;&amp; !nodeFailed(node)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            int okslaves = clusterCountNonFailingSlaves(node);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* A master is orphaned if it is serving a non-zero
number of</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * slots, have no working slaves, but used to have at
least one</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * slave, or failed over a master that used to have
slaves. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (okslaves == 0 &amp;&amp; node-&gt;numslots &gt; 0
&amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                node-&gt;flags &amp; CLUSTER_NODE_MIGRATE_TO)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                orphaned_masters++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (okslaves &gt; max_slaves) max_slaves = okslaves;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (myself-&gt;slaveof == node)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                this_slaves = okslaves;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If we are not receiving any data for more than half the
cluster</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * timeout, reconnect the link: maybe there is a
connection</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * issue even if the node is alive. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mstime_t ping_delay = now - node-&gt;ping_sent;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mstime_t data_delay = now - node-&gt;data_received;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (node-&gt;link &amp;&amp; /* is connected */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            now - node-&gt;link-&gt;ctime &gt;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.cluster_node_timeout &amp;&amp; /* was not
already reconnected */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            node-&gt;ping_sent &amp;&amp; /* we already sent a
ping */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* and we are waiting for the pong more than timeout/2
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            ping_delay &gt; server.cluster_node_timeout/2
&amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* and in such interval we are not seeing any traffic
at all. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            data_delay &gt; server.cluster_node_timeout/2)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Disconnect the link, it will be reconnected
automatically. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            freeClusterLink(node-&gt;link);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If we have currently no active ping in this instance,
and the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * received PONG is older than half the cluster timeout,
send</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * a new ping now, to ensure all the nodes are pinged
without</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * a too big delay. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (node-&gt;link &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            node-&gt;ping_sent == 0 &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            (now - node-&gt;pong_received) &gt;
server.cluster_node_timeout/2)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clusterSendPing(node-&gt;link, CLUSTERMSG_TYPE_PING);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If we are a master and one of the slaves requested a
manual</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * failover, ping it continuously. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (server.cluster-&gt;mf_end &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            nodeIsMaster(myself) &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            server.cluster-&gt;mf_slave == node &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            node-&gt;link)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clusterSendPing(node-&gt;link, CLUSTERMSG_TYPE_PING);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Check only if we have an active ping for this instance.
*/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (node-&gt;ping_sent == 0) continue;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* Check if this node looks unreachable.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * Note that if we already received the PONG, then
node-&gt;ping_sent</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * is zero, so can't reach this code at all, so we don't
risk of</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * checking for a PONG delay if we didn't sent the PING.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         *</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * We also consider every incoming data as proof of
liveness, since</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * our cluster bus link is also used for data: under heavy
data</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * load pong delays are possible. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mstime_t node_delay = (ping_delay &lt; data_delay) ?
ping_delay :</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                                         
data_delay;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (node_delay &gt; server.cluster_node_timeout) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Timeout reached. Set the node as possibly failing
if it is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * not already in this state. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!(node-&gt;flags &amp;
(CLUSTER_NODE_PFAIL|CLUSTER_NODE_FAIL))) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                serverLog(LL_DEBUG,&quot;*** NODE %.40s possibly
failing&quot;,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    node-&gt;name);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                node-&gt;flags |= CLUSTER_NODE_PFAIL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                update_state = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    dictReleaseIterator(di);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If we are a slave node but the replication is still turned
off,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * enable it if we know the address of our master and it
appears to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * be up. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (nodeIsSlave(myself) &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        server.masterhost == NULL &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        myself-&gt;slaveof &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        nodeHasAddr(myself-&gt;slaveof))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        replicationSetMaster(myself-&gt;slaveof-&gt;ip,
myself-&gt;slaveof-&gt;port);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Abort a manual failover if the timeout is reached. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    manualFailoverCheckTimeout();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (nodeIsSlave(myself)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterHandleManualFailover();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!(server.cluster_module_flags &amp;
CLUSTER_MODULE_FLAG_NO_FAILOVER))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clusterHandleSlaveFailover();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If there are orphaned slaves, and we are a slave among
the masters</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * with the max number of non-failing slaves, consider
migrating to</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * the orphaned masters. Note that it does not make sense
to try</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * a migration if there is no master with at least *two*
working</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * slaves. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (orphaned_masters &amp;&amp; max_slaves &gt;= 2
&amp;&amp; this_slaves == max_slaves &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>           server.cluster_allow_replica_migration)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            clusterHandleSlaveMigration(max_slaves);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (update_state || server.cluster-&gt;state == CLUSTER_FAIL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        clusterUpdateState();</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h3 style='margin-left:35.45pt;text-indent:-35.45pt'><a name="_Toc26079"><span
lang=EN-US style='font-family:宋体'>10.2.8.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>Query
node&amp;move</span></a></h3>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd,
robj **argv, int argc, int *hashslot, int *error_code) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    clusterNode *n = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    robj *firstkey = NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int multiple_keys = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    multiState *ms, _ms;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    multiCmd mc;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int i, slot = 0, migrating_slot = 0, importing_slot = 0,
missing_keys = 0,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        existing_keys = 0;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Allow any key to be set if a module disabled cluster
redirections. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.cluster_module_flags &amp;
CLUSTER_MODULE_FLAG_NO_REDIRECTION)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return myself;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Set error code optimistically for the base case. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (error_code) *error_code = CLUSTER_REDIR_NONE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Modules can turn off Redis Cluster redirection: this is
useful</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * when writing a module that implements a completely
different</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * distributed system. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* We handle all the cases as if they were EXEC commands, so
we have</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * a common code path for everything */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (cmd-&gt;proc == execCommand) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If CLIENT_MULTI flag is not set EXEC is just going to
return an</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * error. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (!(c-&gt;flags &amp; CLIENT_MULTI)) return myself;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ms = &amp;c-&gt;mstate;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* In order to have a single codepath create a fake Multi
State</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * structure if the client is not in MULTI/EXEC state,
this way</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>         * we have a single codepath below. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        ms = &amp;_ms;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        _ms.commands = &amp;mc;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        _ms.count = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mc.argv = argv;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mc.argc = argc;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mc.cmd = cmd;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int is_pubsubshard = cmd-&gt;proc == ssubscribeCommand ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            cmd-&gt;proc == sunsubscribeCommand ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            cmd-&gt;proc == spublishCommand;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Check that all the keys are in the same hash slot, and
obtain this</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * slot and the node associated. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    for (i = 0; i &lt; ms-&gt;count; i++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        struct redisCommand *mcmd;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        robj **margv;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        int margc, numkeys, j;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        keyReference *keyindex;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        mcmd = ms-&gt;commands[i].cmd;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        margc = ms-&gt;commands[i].argc;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        margv = ms-&gt;commands[i].argv;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        getKeysResult result = GETKEYS_RESULT_INIT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        numkeys =
getKeysFromCommand(mcmd,margv,margc,&amp;result);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        keyindex = result.keys;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        for (j = 0; j &lt; numkeys; j++) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            robj *thiskey = margv[keyindex[j].pos];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            int thisslot = keyHashSlot((char*)thiskey-&gt;ptr,</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                                       sdslen(thiskey-&gt;ptr));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (firstkey == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* This is the first key we see. Check what is the
slot</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * and node. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                firstkey = thiskey;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                slot = thisslot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                n = server.cluster-&gt;slots[slot];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* Error: If a slot is not served, we are in
&quot;cluster down&quot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * state. However the state is yet to be updated,
so this was</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * not trapped earlier in processCommand(). Report
the same</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * error to the client. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (n == NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    getKeysFreeResult(&amp;result);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    if (error_code)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        *error_code = CLUSTER_REDIR_DOWN_UNBOUND;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* If we are migrating or importing this slot, we
need to check</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * if we have all the keys in the request (the
only way we</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * can safely serve the request, otherwise we
return a TRYAGAIN</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * error). To do so we set the importing/migrating
state and</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * increment a counter for every missing key. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (n == myself &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    server.cluster-&gt;migrating_slots_to[slot] !=
NULL)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    migrating_slot = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                } else if
(server.cluster-&gt;importing_slots_from[slot] != NULL) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    importing_slot = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                /* If it is not the first key/channel, make sure
it is exactly</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                 * the same key/channel as the first we saw. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (!equalStringObjects(firstkey,thiskey)) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    if (slot != thisslot) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        /* Error: multiple keys from different
slots. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        getKeysFreeResult(&amp;result);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        if (error_code)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                            *error_code =
CLUSTER_REDIR_CROSS_SLOT;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        /* Flag this request as one with multiple
different</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                         * keys/channels. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                        multiple_keys = 1;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Migrating / Importing slot? Count keys we don't
have.</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * If it is pubsubshard command, it isn't required to
check</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * the channel being present or not in the node during
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * slot migration, the channel will be served from the
source</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * node until the migration completes with CLUSTER
SETSLOT &lt;slot&gt;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * NODE &lt;node-id&gt;. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            int flags = LOOKUP_NOTOUCH | LOOKUP_NOSTATS |
LOOKUP_NONOTIFY | LOOKUP_NOEXPIRE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if ((migrating_slot || importing_slot) &amp;&amp;
!is_pubsubshard)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (lookupKeyReadWithFlags(&amp;server.db[0],
thiskey, flags) == NULL) missing_keys++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                else existing_keys++;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        getKeysFreeResult(&amp;result);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* No key at all in command? then we can serve the request</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * without redirections or errors in all the cases. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (n == NULL) return myself;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    uint64_t cmd_flags = getCommandFlags(c);</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Cluster is globally down but we got keys? We only serve the
request</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * if it is a read command and when allow_reads_when_down is
enabled. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (server.cluster-&gt;state != CLUSTER_OK) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (is_pubsubshard) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (!server.cluster_allow_pubsubshard_when_down) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                if (error_code) *error_code =
CLUSTER_REDIR_DOWN_STATE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (!server.cluster_allow_reads_when_down) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* The cluster is configured to block commands when
the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * cluster is down. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (error_code) *error_code =
CLUSTER_REDIR_DOWN_STATE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else if (cmd_flags &amp; CMD_WRITE) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* The cluster is configured to allow read only
commands */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (error_code) *error_code =
CLUSTER_REDIR_DOWN_RO_STATE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            /* Fall through and allow the command to be executed:</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * this happens when
server.cluster_allow_reads_when_down is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>             * true and the command is not a write command */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Return the hashslot by reference. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (hashslot) *hashslot = slot;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* MIGRATE always works in the context of the local node if
the slot</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * is open (migrating or importing state). We need to be able
to freely</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * move keys among instances in this case. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if ((migrating_slot || importing_slot) &amp;&amp; cmd-&gt;proc
== migrateCommand)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return myself;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If we don't have all the keys and we are migrating the
slot, send</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * an ASK redirection or TRYAGAIN. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (migrating_slot &amp;&amp; missing_keys) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        /* If we have keys but we don't have all keys, we return
TRYAGAIN */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (existing_keys) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (error_code) *error_code = CLUSTER_REDIR_UNSTABLE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (error_code) *error_code = CLUSTER_REDIR_ASK;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return server.cluster-&gt;migrating_slots_to[slot];</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* If we are receiving the slot, and the client correctly
flagged the</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * request as &quot;ASKING&quot;, we can serve the request.
However if the request</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * involves multiple keys and we don't have them all, the only
option is</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * to send a TRYAGAIN error. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (importing_slot &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        (c-&gt;flags &amp; CLIENT_ASKING || cmd_flags &amp;
CMD_ASKING))</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        if (multiple_keys &amp;&amp; missing_keys) {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            if (error_code) *error_code = CLUSTER_REDIR_UNSTABLE;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return NULL;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        } else {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>            return myself;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Handle the read-only client case reading from a slave: if
this</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * node is a slave and the request is about a hash slot our
master</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * is serving, we can reply without redirection. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    int is_write_command = (cmd_flags &amp; CMD_WRITE) ||</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>                           (c-&gt;cmd-&gt;proc == execCommand
&amp;&amp; (c-&gt;mstate.cmd_flags &amp; CMD_WRITE));</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (((c-&gt;flags &amp; CLIENT_READONLY) || is_pubsubshard)
&amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        !is_write_command &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        nodeIsSlave(myself) &amp;&amp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        myself-&gt;slaveof == n)</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    {</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>        return myself;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    }</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    /* Base case: just return the right node. However if this node
is not</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>     * myself, set error_code to MOVED since we need to issue a
redirection. */</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    if (n != myself &amp;&amp; error_code) *error_code =
CLUSTER_REDIR_MOVED;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>    return n;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%;background:#F2F2F2'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif;
color:black'>}</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc3067"><span
lang=EN-US style='font-family:"Arial",sans-serif'>11.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Arial",sans-serif'>References</span></a></h1>

<p class=MsoNormal><span lang=EN-US style='font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>Redis
doc</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>https://redis.io/docs/</span></p>

<p class=MsoNormal style='text-indent:24.0pt;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Arial",sans-serif'>&nbsp;</span></p>

</div>

</body>

</html>
